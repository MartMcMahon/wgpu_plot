!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
ACTIVE_LAYOUT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        static ACTIVE_LAYOUT: AtomicIsize = AtomicIsize::new(0);$/;"	c
ADJUST_WINDOW_RECT_EX_FOR_DPI	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static ADJUST_WINDOW_RECT_EX_FOR_DPI: Lazy<Option<AdjustWindowRectExForDpi>> =$/;"	c
ALL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const ALL = ScreenEdge::TOP.bits | ScreenEdge::LEFT.bits$/;"	c
ALT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        const ALT = 0b100 << 6;$/;"	c
ALT_OFFSET	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^const ALT_OFFSET: usize = 3;$/;"	c
ALWAYS_ON_TOP	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const ALWAYS_ON_TOP  = 1 << 3;$/;"	c
APP_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app.rs	/^pub static APP_CLASS: Lazy<AppClass> = Lazy::new(|| unsafe {$/;"	c
APP_DELEGATE_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^pub static APP_DELEGATE_CLASS: Lazy<AppDelegateClass> = Lazy::new(|| unsafe {$/;"	c
ATOM_CACHE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/atom.rs	/^static ATOM_CACHE: Lazy<Mutex<AtomCache>> = Lazy::new(|| Mutex::new(HashMap::with_capacity(2048)));$/;"	c
AUX_DELEGATE_STATE_NAME	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^static AUX_DELEGATE_STATE_NAME: &str = "auxState";$/;"	c
AaRect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct AaRect {$/;"	s
ActivationPolicy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub enum ActivationPolicy {$/;"	g
Adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Adapter {$/;"	s
AdapterId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type AdapterId = wgc::id::AdapterId;$/;"	T
AdapterId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type AdapterId = Sendable<web_sys::GpuAdapter>;$/;"	T
AdapterId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type AdapterId: Debug + Send + Sync + 'static;$/;"	T
AdjustWindowRectExForDpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type AdjustWindowRectExForDpi = unsafe extern "system" fn($/;"	T
All	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const All: UIInterfaceOrientationMask =$/;"	c
AllButUpsideDown	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const AllButUpsideDown: UIInterfaceOrientationMask =$/;"	c
AnimationFrameRequest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/timeout.rs	/^pub struct AnimationFrameRequest {$/;"	s
AnyBitPattern	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/anybitpattern.rs	/^pub unsafe trait AnyBitPattern:$/;"	t
AppClass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app.rs	/^pub struct AppClass(pub *const Class);$/;"	s
AppDelegateClass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^pub struct AppDelegateClass(pub *const Class);$/;"	s
AppState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^struct AppState {$/;"	s
AppState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^pub enum AppState {}$/;"	g
AppStateImpl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^enum AppStateImpl {$/;"	g
ApplicationName	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub struct ApplicationName {$/;"	s
AtomCache	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/atom.rs	/^type AtomCache = HashMap<CString, ffi::Atom>;$/;"	T
AuxDelegateState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^pub struct AuxDelegateState {$/;"	s
AxisId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub type AxisId = u32;$/;"	T
BACKEND_PREFERENCE_ENV_VAR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^const BACKEND_PREFERENCE_ENV_VAR: &str = "WINIT_UNIX_BACKEND";$/;"	c
BASE_DPI	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub const BASE_DPI: u32 = 96;$/;"	c
BOTTOM	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const BOTTOM = 1 << 2;$/;"	c
BTN_LEFT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/handlers.rs	/^const BTN_LEFT: u32 = 0x110;$/;"	c
BTN_MIDDLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/handlers.rs	/^const BTN_MIDDLE: u32 = 0x112;$/;"	c
BTN_RIGHT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/handlers.rs	/^const BTN_RIGHT: u32 = 0x111;$/;"	c
BadIcon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^pub enum BadIcon {$/;"	g
BindGroup	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BindGroup {$/;"	s
BindGroupDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BindGroupDescriptor<'a> {$/;"	s
BindGroupEntry	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BindGroupEntry<'a> {$/;"	s
BindGroupId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type BindGroupId = wgc::id::BindGroupId;$/;"	T
BindGroupId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type BindGroupId = Sendable<web_sys::GpuBindGroup>;$/;"	T
BindGroupId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type BindGroupId: Debug + Send + Sync + 'static;$/;"	T
BindGroupLayout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BindGroupLayout {$/;"	s
BindGroupLayoutDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BindGroupLayoutDescriptor<'a> {$/;"	s
BindGroupLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type BindGroupLayoutId = wgc::id::BindGroupLayoutId;$/;"	T
BindGroupLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type BindGroupLayoutId = Sendable<web_sys::GpuBindGroupLayout>;$/;"	T
BindGroupLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type BindGroupLayoutId: Debug + Send + Sync + 'static;$/;"	T
BindingResource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum BindingResource<'a> {$/;"	g
Bits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  type Bits = T;$/;"	T
Bits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  type Bits = u32;$/;"	T
Bits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  type Bits = u8;$/;"	T
Bits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  type Bits: AnyBitPattern;$/;"	T
Boolean	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type Boolean = u8;$/;"	T
Boolean	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type Boolean = u8;$/;"	T
Buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Buffer {$/;"	s
BufferAsyncError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BufferAsyncError;$/;"	s
BufferBinding	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BufferBinding<'a> {$/;"	s
BufferDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type BufferDescriptor<'a> = wgt::BufferDescriptor<Label<'a>>;$/;"	T
BufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type BufferId = Buffer;$/;"	T
BufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type BufferId = Sendable<web_sys::GpuBuffer>;$/;"	T
BufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type BufferId: Debug + Send + Sync + 'static;$/;"	T
BufferInitDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/device.rs	/^pub struct BufferInitDescriptor<'a> {$/;"	s
BufferMappedRange	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct BufferMappedRange {$/;"	s
BufferMappedRange	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^pub struct BufferMappedRange {$/;"	s
BufferMappedRangeSlice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^trait BufferMappedRangeSlice {$/;"	t
BufferSlice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BufferSlice<'a> {$/;"	s
BufferView	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BufferView<'a> {$/;"	s
BufferViewMut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct BufferViewMut<'a> {$/;"	s
BufferedEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^enum BufferedEvent<T: 'static> {$/;"	g
ButtonId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub type ButtonId = u32;$/;"	T
CANCEL_WAIT_UNTIL_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static CANCEL_WAIT_UNTIL_MSG_ID: Lazy<u32> =$/;"	c
CARDINAL_SIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^pub const CARDINAL_SIZE: usize = mem::size_of::<c_long>();$/;"	c
CFAbsoluteTime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFAbsoluteTime = CFTimeInterval;$/;"	T
CFAbsoluteTime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFAbsoluteTime = CFTimeInterval;$/;"	T
CFAbsoluteTimeGetCurrent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFAbsoluteTimeGetCurrent() -> CFAbsoluteTime;$/;"	f
CFAbsoluteTimeGetCurrent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFAbsoluteTimeGetCurrent() -> CFAbsoluteTime;$/;"	f
CFAllocator	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFAllocator {}$/;"	g
CFAllocator	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFAllocator {}$/;"	g
CFAllocatorRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFAllocatorRef = *mut CFAllocator;$/;"	T
CFAllocatorRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFAllocatorRef = *mut CFAllocator;$/;"	T
CFHashCode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFHashCode = c_ulong;$/;"	T
CFHashCode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFHashCode = c_ulong;$/;"	T
CFIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFIndex = c_long;$/;"	T
CFIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFIndex = c_long;$/;"	T
CFOptionFlags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFOptionFlags = c_ulong;$/;"	T
CFOptionFlags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFOptionFlags = c_ulong;$/;"	T
CFRelease	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRelease(cftype: *const c_void);$/;"	f
CFRelease	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRelease(cftype: *const c_void);$/;"	f
CFRunLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoop {}$/;"	g
CFRunLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFRunLoop {}$/;"	g
CFRunLoopActivity	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopActivity = CFOptionFlags;$/;"	T
CFRunLoopActivity	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopActivity = CFOptionFlags;$/;"	T
CFRunLoopAddObserver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopAddObserver($/;"	f
CFRunLoopAddObserver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopAddObserver($/;"	f
CFRunLoopAddSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopAddSource(rl: CFRunLoopRef, source: CFRunLoopSourceRef, mode: CFRunLoopMode);$/;"	f
CFRunLoopAddSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopAddSource(rl: CFRunLoopRef, source: CFRunLoopSourceRef, mode: CFRunLoopMode);$/;"	f
CFRunLoopAddTimer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopAddTimer(rl: CFRunLoopRef, timer: CFRunLoopTimerRef, mode: CFRunLoopMode);$/;"	f
CFRunLoopAddTimer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopAddTimer(rl: CFRunLoopRef, timer: CFRunLoopTimerRef, mode: CFRunLoopMode);$/;"	f
CFRunLoopGetMain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopGetMain() -> CFRunLoopRef;$/;"	f
CFRunLoopGetMain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopGetMain() -> CFRunLoopRef;$/;"	f
CFRunLoopMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopMode = CFStringRef;$/;"	T
CFRunLoopMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopMode = CFStringRef;$/;"	T
CFRunLoopObserver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoopObserver {}$/;"	g
CFRunLoopObserver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFRunLoopObserver {}$/;"	g
CFRunLoopObserverCallBack	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopObserverCallBack =$/;"	T
CFRunLoopObserverCallBack	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopObserverCallBack =$/;"	T
CFRunLoopObserverContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoopObserverContext {}$/;"	g
CFRunLoopObserverContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub struct CFRunLoopObserverContext {$/;"	s
CFRunLoopObserverCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopObserverCreate($/;"	f
CFRunLoopObserverCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopObserverCreate($/;"	f
CFRunLoopObserverRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopObserverRef = *mut CFRunLoopObserver;$/;"	T
CFRunLoopObserverRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopObserverRef = *mut CFRunLoopObserver;$/;"	T
CFRunLoopRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopRef = *mut CFRunLoop;$/;"	T
CFRunLoopRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopRef = *mut CFRunLoop;$/;"	T
CFRunLoopSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoopSource {}$/;"	g
CFRunLoopSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFRunLoopSource {}$/;"	g
CFRunLoopSourceContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct CFRunLoopSourceContext {$/;"	s
CFRunLoopSourceContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub struct CFRunLoopSourceContext {$/;"	s
CFRunLoopSourceCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopSourceCreate($/;"	f
CFRunLoopSourceCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopSourceCreate($/;"	f
CFRunLoopSourceInvalidate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopSourceInvalidate(source: CFRunLoopSourceRef);$/;"	f
CFRunLoopSourceInvalidate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopSourceInvalidate(source: CFRunLoopSourceRef);$/;"	f
CFRunLoopSourceRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopSourceRef = *mut CFRunLoopSource;$/;"	T
CFRunLoopSourceRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopSourceRef = *mut CFRunLoopSource;$/;"	T
CFRunLoopSourceSignal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopSourceSignal(source: CFRunLoopSourceRef);$/;"	f
CFRunLoopSourceSignal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopSourceSignal(source: CFRunLoopSourceRef);$/;"	f
CFRunLoopTimer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoopTimer {}$/;"	g
CFRunLoopTimer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFRunLoopTimer {}$/;"	g
CFRunLoopTimerCallBack	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopTimerCallBack = extern "C" fn(timer: CFRunLoopTimerRef, info: *mut c_void);$/;"	T
CFRunLoopTimerCallBack	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopTimerCallBack = extern "C" fn(timer: CFRunLoopTimerRef, info: *mut c_void);$/;"	T
CFRunLoopTimerContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFRunLoopTimerContext {}$/;"	g
CFRunLoopTimerContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFRunLoopTimerContext {}$/;"	g
CFRunLoopTimerCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopTimerCreate($/;"	f
CFRunLoopTimerCreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopTimerCreate($/;"	f
CFRunLoopTimerInvalidate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopTimerInvalidate(time: CFRunLoopTimerRef);$/;"	f
CFRunLoopTimerInvalidate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopTimerInvalidate(time: CFRunLoopTimerRef);$/;"	f
CFRunLoopTimerRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFRunLoopTimerRef = *mut CFRunLoopTimer;$/;"	T
CFRunLoopTimerRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFRunLoopTimerRef = *mut CFRunLoopTimer;$/;"	T
CFRunLoopTimerSetNextFireDate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopTimerSetNextFireDate(timer: CFRunLoopTimerRef, fireDate: CFAbsoluteTime);$/;"	f
CFRunLoopTimerSetNextFireDate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopTimerSetNextFireDate(timer: CFRunLoopTimerRef, fireDate: CFAbsoluteTime);$/;"	f
CFRunLoopWakeUp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn CFRunLoopWakeUp(rl: CFRunLoopRef);$/;"	f
CFRunLoopWakeUp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn CFRunLoopWakeUp(rl: CFRunLoopRef);$/;"	f
CFString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum CFString {}$/;"	g
CFString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub enum CFString {}$/;"	g
CFStringRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFStringRef = *const CFString;$/;"	T
CFStringRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFStringRef = *const CFString;$/;"	T
CFTimeInterval	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CFTimeInterval = f64;$/;"	T
CFTimeInterval	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub type CFTimeInterval = f64;$/;"	T
CGAcquireDisplayFadeReservation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGAcquireDisplayFadeReservation($/;"	f
CGConfigureDisplayFadeEffect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGConfigureDisplayFadeEffect($/;"	f
CGDisplayBlendFraction	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGDisplayBlendFraction = f32;$/;"	T
CGDisplayCapture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayCapture(display: CGDirectDisplayID) -> CGError;$/;"	f
CGDisplayCopyAllDisplayModes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayCopyAllDisplayModes($/;"	f
CGDisplayCreateUUIDFromDisplayID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayCreateUUIDFromDisplayID(display: CGDirectDisplayID) -> CFUUIDRef;$/;"	f
CGDisplayFade	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayFade($/;"	f
CGDisplayFadeInterval	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGDisplayFadeInterval = f32;$/;"	T
CGDisplayFadeReservationToken	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGDisplayFadeReservationToken = u32;$/;"	T
CGDisplayModeCopyPixelEncoding	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeCopyPixelEncoding(mode: CGDisplayModeRef) -> CFStringRef;$/;"	f
CGDisplayModeGetPixelHeight	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeGetPixelHeight(mode: CGDisplayModeRef) -> usize;$/;"	f
CGDisplayModeGetPixelWidth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeGetPixelWidth(mode: CGDisplayModeRef) -> usize;$/;"	f
CGDisplayModeGetRefreshRate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeGetRefreshRate(mode: CGDisplayModeRef) -> f64;$/;"	f
CGDisplayModeRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGDisplayModeRef = *mut c_void;$/;"	T
CGDisplayModeRelease	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeRelease(mode: CGDisplayModeRef);$/;"	f
CGDisplayModeRetain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayModeRetain(mode: CGDisplayModeRef);$/;"	f
CGDisplayRelease	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplayRelease(display: CGDirectDisplayID) -> CGError;$/;"	f
CGDisplayReservationInterval	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGDisplayReservationInterval = f32;$/;"	T
CGDisplaySetDisplayMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGDisplaySetDisplayMode($/;"	f
CGFloat	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CGFloat = f32;$/;"	T
CGFloat	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type CGFloat = f64;$/;"	T
CGPoint	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct CGPoint {$/;"	s
CGRect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct CGRect {$/;"	s
CGReleaseDisplayFadeReservation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGReleaseDisplayFadeReservation(token: CGDisplayFadeReservationToken) -> CGError;$/;"	f
CGRestorePermanentDisplayConfiguration	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGRestorePermanentDisplayConfiguration();$/;"	f
CGShieldingWindowLevel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn CGShieldingWindowLevel() -> CGWindowLevel;$/;"	f
CGSize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct CGSize {$/;"	s
CGWindowLevel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub type CGWindowLevel = i32;$/;"	T
CHILD	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const CHILD          = 1 << 6;$/;"	c
CLSID_TaskbarList	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub const CLSID_TaskbarList: GUID = GUID {$/;"	c
COM_INITIALIZED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    static COM_INITIALIZED: ComInitialized = {$/;"	c
CONFIG	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^static CONFIG: Lazy<RwLock<Configuration>> = Lazy::new(|| {$/;"	c
CONTROL_OFFSET	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^const CONTROL_OFFSET: usize = 2;$/;"	c
CTRL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        const CTRL = 0b100 << 3;$/;"	c
CURSOR_BYTES	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^    static CURSOR_BYTES: &[u8] = &[$/;"	c
CURSOR_OBJECT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^        static CURSOR_OBJECT: RefCell<id> = RefCell::new(nil);$/;"	c
CURSOR_ROOT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^    static CURSOR_ROOT: &str = "\/System\/Library\/Frameworks\/ApplicationServices.framework\/Versions\/A\/Frameworks\/HIServices.framework\/Versions\/A\/Resources\/cursors";$/;"	c
CVDisplayLinkCreateWithCGDisplay	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^        pub fn CVDisplayLinkCreateWithCGDisplay($/;"	f
CVDisplayLinkGetNominalOutputVideoRefreshPeriod	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^        pub fn CVDisplayLinkGetNominalOutputVideoRefreshPeriod($/;"	f
CVDisplayLinkRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub type CVDisplayLinkRef = *mut c_void;$/;"	T
CVDisplayLinkRelease	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^        pub fn CVDisplayLinkRelease(displayLink: CVDisplayLinkRef);$/;"	f
CVReturn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub type CVReturn = i32; \/\/ int32_t$/;"	T
CVTime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub struct CVTime {$/;"	s
CVTimeFlags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub type CVTimeFlags = i32; \/\/ int32_t$/;"	T
Canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^pub struct Canvas {$/;"	s
CarPlay	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const CarPlay: UIUserInterfaceIdiom = UIUserInterfaceIdiom(3);$/;"	c
Cardinal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^pub type Cardinal = c_long;$/;"	T
CheckedBitPattern	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub unsafe trait CheckedBitPattern: Copy {$/;"	t
CheckedCastError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub enum CheckedCastError {$/;"	g
Chunk	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^struct Chunk {$/;"	s
ClientMsgPayload	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/client_msg.rs	/^pub type ClientMsgPayload = [c_long; 5];$/;"	T
ComInitialized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^struct ComInitialized(*mut ());$/;"	s
CommandBuffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct CommandBuffer {$/;"	s
CommandBufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type CommandBufferId = wgc::id::CommandBufferId;$/;"	T
CommandBufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type CommandBufferId = Sendable<web_sys::GpuCommandBuffer>;$/;"	T
CommandBufferId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type CommandBufferId: Debug + Send + Sync;$/;"	T
CommandEncoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct CommandEncoder {$/;"	s
CommandEncoderDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type CommandEncoderDescriptor<'a> = wgt::CommandEncoderDescriptor<Label<'a>>;$/;"	T
CommandEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type CommandEncoderId = CommandEncoder;$/;"	T
CommandEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type CommandEncoderId = Sendable<web_sys::GpuCommandEncoder>;$/;"	T
CommandEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type CommandEncoderId: Debug;$/;"	T
Common	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^struct Common {$/;"	s
ComputePass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ComputePass<'a> {$/;"	s
ComputePassDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ComputePassDescriptor<'a> {$/;"	s
ComputePassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type ComputePassId = wgc::command::ComputePass;$/;"	T
ComputePassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type ComputePassId = ComputePass;$/;"	T
ComputePassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type ComputePassId: Debug + ComputePassInner<Self>;$/;"	T
ComputePassInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^trait ComputePassInner<Ctx: Context> {$/;"	t
ComputePipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ComputePipeline {$/;"	s
ComputePipelineDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ComputePipelineDescriptor<'a> {$/;"	s
ComputePipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type ComputePipelineId = wgc::id::ComputePipelineId;$/;"	T
ComputePipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type ComputePipelineId = Sendable<web_sys::GpuComputePipeline>;$/;"	T
ComputePipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type ComputePipelineId: Debug + Send + Sync + 'static;$/;"	T
Context	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct Context(wgc::hub::Global<wgc::hub::IdentityManagerFactory>);$/;"	s
Context	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^trait Context: Debug + Send + Sized + Sync {$/;"	t
Contiguous	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^pub unsafe trait Contiguous: Copy + 'static {$/;"	t
ControlFlow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub enum ControlFlow {$/;"	g
Cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^pub enum Cursor {$/;"	g
Cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub struct Cursor(pub *const u16);$/;"	s
CursorFlags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub struct CursorFlags: u8 {$/;"	s
CursorGrabMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub enum CursorGrabMode {$/;"	g
CursorIcon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub enum CursorIcon {$/;"	g
CursorState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^pub struct CursorState {$/;"	s
DARK_MODE_SUPPORTED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^static DARK_MODE_SUPPORTED: Lazy<bool> = Lazy::new(|| {$/;"	c
DARK_THEME_NAME	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^static DARK_THEME_NAME: Lazy<Vec<u16>> = Lazy::new(|| util::encode_wide("DarkMode_Explorer"));$/;"	c
DESTROY_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub static DESTROY_MSG_ID: Lazy<u32> =$/;"	c
DEVICE_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const DEVICE_ID: RootDeviceId = RootDeviceId(DeviceId(0));$/;"	c
DISABLE_MONITOR_LIST_CACHING	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^const DISABLE_MONITOR_LIST_CACHING: bool = false;$/;"	c
DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^const DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2: DPI_AWARENESS_CONTEXT = -4;$/;"	c
DROP_TARGET_VTBL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^static DROP_TARGET_VTBL: IDropTargetVtbl = IDropTargetVtbl {$/;"	c
Device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct Device {$/;"	s
Device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Device {$/;"	s
Device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct Device {$/;"	s
DeviceDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type DeviceDescriptor<'a> = wgt::DeviceDescriptor<Label<'a>>;$/;"	T
DeviceEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum DeviceEvent {$/;"	g
DeviceEventFilter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub enum DeviceEventFilter {$/;"	g
DeviceExt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/device.rs	/^pub trait DeviceExt {$/;"	t
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type DeviceId = Device;$/;"	T
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type DeviceId = Sendable<web_sys::GpuDevice>;$/;"	T
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type DeviceId: Debug + Send + Sync + 'static;$/;"	T
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub struct DeviceId(pub(crate) platform_impl::DeviceId);$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct DeviceId;$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/mod.rs	/^pub struct DeviceId {$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum DeviceId {$/;"	g
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/mod.rs	/^pub struct DeviceId;$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^pub struct DeviceId(c_int);$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^pub struct DeviceId;$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/device.rs	/^pub struct DeviceId(pub i32);$/;"	s
DeviceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub struct DeviceId(u32);$/;"	s
DeviceIdExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait DeviceIdExtWindows {$/;"	t
DeviceInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct DeviceInfo<'a> {$/;"	s
DispatchIndirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/indirect.rs	/^pub struct DispatchIndirect {$/;"	s
Dnd	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^pub struct Dnd {$/;"	s
DndAtoms	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^pub struct DndAtoms {$/;"	s
DndDataParseError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^pub enum DndDataParseError {$/;"	g
DndState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^pub enum DndState {$/;"	g
DownloadBuffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^pub struct DownloadBuffer(Arc<super::Buffer>, super::BufferMappedRange);$/;"	s
DrawIndexedIndirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/indirect.rs	/^pub struct DrawIndexedIndirect {$/;"	s
DrawIndirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/indirect.rs	/^pub struct DrawIndirect {$/;"	s
EMPTY_RANGE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub const EMPTY_RANGE: ffi::NSRange = ffi::NSRange {$/;"	c
ENABLE_DPI_AWARENESS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^    static ENABLE_DPI_AWARENESS: Once = Once::new();$/;"	c
ENABLE_NON_CLIENT_DPI_SCALING	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static ENABLE_NON_CLIENT_DPI_SCALING: Lazy<Option<EnableNonClientDpiScaling>> =$/;"	c
EVENT_LOOP_CREATED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^        static EVENT_LOOP_CREATED: OnceCell<()> = OnceCell::new();$/;"	c
EXCLUSIVE_FULLSCREEN_OR_MASK	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const EXCLUSIVE_FULLSCREEN_OR_MASK = WindowFlags::ALWAYS_ON_TOP.bits;$/;"	c
EXEC_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static EXEC_MSG_ID: Lazy<u32> =$/;"	c
ElementState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum ElementState {$/;"	g
EnableNonClientDpiScaling	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type EnableNonClientDpiScaling = unsafe extern "system" fn(hwnd: HWND) -> BOOL;$/;"	T
EnvVarDPI	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^pub enum EnvVarDPI {$/;"	g
Error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum Error {$/;"	g
ErrorFilter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum ErrorFilter {$/;"	g
ErrorScope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^struct ErrorScope {$/;"	s
ErrorSink	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^type ErrorSink = Arc<Mutex<ErrorSinkRaw>>;$/;"	T
ErrorSinkRaw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^struct ErrorSinkRaw {$/;"	s
Event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum Event<'a, T: 'static> {$/;"	g
EventHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub trait EventHandler: Debug {$/;"	t
EventHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^pub trait EventHandler: Debug {$/;"	t
EventHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^type EventHandler<T> = Cell<Option<Box<dyn FnMut(Event<'_, T>, &mut ControlFlow)>>>;$/;"	T
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum EventLoop<T: 'static> {$/;"	g
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/mod.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub struct EventLoop<T: 'static> {$/;"	s
EventLoopBuilder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub struct EventLoopBuilder<T: 'static> {$/;"	s
EventLoopBuilderExtMacOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub trait EventLoopBuilderExtMacOS {$/;"	t
EventLoopBuilderExtUnix	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub trait EventLoopBuilderExtUnix {$/;"	t
EventLoopBuilderExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait EventLoopBuilderExtWindows {$/;"	t
EventLoopClosed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub struct EventLoopClosed<T>(pub T);$/;"	s
EventLoopExtAndroid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^pub trait EventLoopExtAndroid {}$/;"	t
EventLoopExtIOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub trait EventLoopExtIOS {$/;"	t
EventLoopExtRunReturn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/run_return.rs	/^pub trait EventLoopExtRunReturn {$/;"	t
EventLoopExtWebSys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^pub trait EventLoopExtWebSys {$/;"	t
EventLoopHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^struct EventLoopHandler<F, T: 'static> {$/;"	s
EventLoopHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^struct EventLoopHandler<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub struct EventLoopProxy<T> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum EventLoopProxy<T: 'static> {$/;"	g
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/proxy.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub struct EventLoopProxy<T> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/proxy.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub struct EventLoopProxy<T: 'static> {$/;"	s
EventLoopWaker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^struct EventLoopWaker {$/;"	s
EventLoopWaker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub struct EventLoopWaker {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum EventLoopWindowTarget<T> {$/;"	g
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^pub struct EventLoopWindowTarget<T> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^pub struct EventLoopWindowTarget<T> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub struct EventLoopWindowTarget<T: 'static> {$/;"	s
EventLoopWindowTargetExtAndroid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^pub trait EventLoopWindowTargetExtAndroid {}$/;"	t
EventLoopWindowTargetExtMacOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub trait EventLoopWindowTargetExtMacOS {$/;"	t
EventLoopWindowTargetExtUnix	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub trait EventLoopWindowTargetExtUnix {$/;"	t
EventProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub enum EventProxy {$/;"	g
EventProxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub enum EventProxy {$/;"	g
EventSink	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/sink.rs	/^pub struct EventSink {$/;"	s
EventSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^enum EventSource {$/;"	g
EventWrapper	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub enum EventWrapper {$/;"	g
EventWrapper	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub enum EventWrapper {$/;"	g
Execution	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^pub struct Execution<T: 'static> {$/;"	s
Exit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub const Exit: Self = Self::ExitWithCode(0);$/;"	c
ExternalError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/error.rs	/^pub enum ExternalError {$/;"	g
FALSE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const FALSE: Boolean = 0;$/;"	c
FORMAT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    const FORMAT: Format = Format::Char;$/;"	c
FORMAT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    const FORMAT: Format = Format::Long;$/;"	c
FORMAT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    const FORMAT: Format = Format::Short;$/;"	c
FORMAT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    const FORMAT: Format;$/;"	c
FileDropHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^pub struct FileDropHandler {$/;"	s
FileDropHandlerData	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^pub struct FileDropHandlerData {$/;"	s
Flusher	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^pub struct Flusher<'a> {$/;"	s
Force	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum Force {$/;"	g
Format	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^pub enum Format {$/;"	g
Formattable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^pub trait Formattable: Debug + Clone + Copy + PartialEq + PartialOrd {$/;"	t
FragmentState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct FragmentState<'a> {$/;"	s
FrameExtents	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct FrameExtents {$/;"	s
FrameExtentsHeuristic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct FrameExtentsHeuristic {$/;"	s
FrameExtentsHeuristicPath	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub enum FrameExtentsHeuristicPath {$/;"	g
Fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub enum Fullscreen {$/;"	g
FutureExt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^pub trait FutureExt: Future {$/;"	t
GET_DPI_FOR_MONITOR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static GET_DPI_FOR_MONITOR: Lazy<Option<GetDpiForMonitor>> =$/;"	c
GET_DPI_FOR_WINDOW	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static GET_DPI_FOR_WINDOW: Lazy<Option<GetDpiForWindow>> =$/;"	c
GET_POINTER_DEVICE_RECTS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static GET_POINTER_DEVICE_RECTS: Lazy<Option<GetPointerDeviceRects>> =$/;"	c
GET_POINTER_FRAME_INFO_HISTORY	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static GET_POINTER_FRAME_INFO_HISTORY: Lazy<Option<GetPointerFrameInfoHistory>> =$/;"	c
GET_POINTER_PEN_INFO	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static GET_POINTER_PEN_INFO: Lazy<Option<GetPointerPenInfo>> =$/;"	c
GET_POINTER_TOUCH_INFO	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static GET_POINTER_TOUCH_INFO: Lazy<Option<GetPointerTouchInfo>> =$/;"	c
GLOBAL_LOCK	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^static GLOBAL_LOCK: Lazy<Mutex<()>> = Lazy::new(Default::default);$/;"	c
GRABBED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const GRABBED   = 1 << 0;$/;"	c
GenericEventCookie	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct GenericEventCookie<'a> {$/;"	s
Geometry	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct Geometry {$/;"	s
GetDpiForMonitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type GetDpiForMonitor = unsafe extern "system" fn($/;"	T
GetDpiForWindow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type GetDpiForWindow = unsafe extern "system" fn(hwnd: HWND) -> u32;$/;"	T
GetPointerDeviceRects	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type GetPointerDeviceRects = unsafe extern "system" fn($/;"	T
GetPointerFrameInfoHistory	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type GetPointerFrameInfoHistory = unsafe extern "system" fn($/;"	T
GetPointerPenInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type GetPointerPenInfo =$/;"	T
GetPointerTouchInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type GetPointerTouchInfo =$/;"	T
GetPropertyError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^pub enum GetPropertyError {$/;"	g
GetXimServersError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^enum GetXimServersError {$/;"	g
HANDLER	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^static HANDLER: Lazy<Handler> = Lazy::new(Default::default);$/;"	c
HIDDEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^    static HIDDEN: AtomicBool = AtomicBool::new(false);$/;"	c
HIDDEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const HIDDEN    = 1 << 1;$/;"	c
HINSTANCE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub type HINSTANCE = isize;$/;"	T
HMENU	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub type HMENU = isize;$/;"	T
HMONITOR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub type HMONITOR = isize;$/;"	T
HWND	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub type HWND = isize;$/;"	T
Handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^struct Handler {$/;"	s
IDataObjectVtbl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct IDataObjectVtbl {$/;"	s
IDropTarget	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct IDropTarget {$/;"	s
IDropTargetVtbl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct IDropTargetVtbl {$/;"	s
IGNORE_CURSOR_EVENT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const IGNORE_CURSOR_EVENT = 1 << 14;$/;"	c
IID_ITaskbarList	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub const IID_ITaskbarList: GUID = GUID {$/;"	c
IID_ITaskbarList2	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub const IID_ITaskbarList2: GUID = GUID {$/;"	c
INIT_MAIN_THREAD_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    static INIT_MAIN_THREAD_ID: unsafe fn() = {$/;"	c
INTERNAL_EVENT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^static INTERNAL_EVENT: Lazy<RwLock<Option<InternalEvent>>> = Lazy::new(|| RwLock::new(None));$/;"	c
IN_WINDOW	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const IN_WINDOW = 1 << 2;$/;"	c
IO16BitDirectPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO16BitDirectPixels: &str = "-RRRRRGGGGGBBBBB";$/;"	c
IO1BitIndexedPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO1BitIndexedPixels: &str = "P";$/;"	c
IO2BitIndexedPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO2BitIndexedPixels: &str = "PP";$/;"	c
IO32BitDirectPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO32BitDirectPixels: &str = "--------RRRRRRRRGGGGGGGGBBBBBBBB";$/;"	c
IO4BitIndexedPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO4BitIndexedPixels: &str = "PPPP";$/;"	c
IO8BitIndexedPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO8BitIndexedPixels: &str = "PPPPPPPP";$/;"	c
IO8BitOverlayPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IO8BitOverlayPixels: &str = "O8";$/;"	c
IOYUV422Pixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const IOYUV422Pixels: &str = "Y4U2V2";$/;"	c
ITaskbarList	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct ITaskbarList {$/;"	s
ITaskbarList2	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct ITaskbarList2 {$/;"	s
ITaskbarList2Vtbl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct ITaskbarList2Vtbl {$/;"	s
ITaskbarListVtbl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct ITaskbarListVtbl {$/;"	s
IUnknownVtbl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/definitions.rs	/^pub struct IUnknownVtbl {$/;"	s
Icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^pub struct Icon {$/;"	s
IconExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait IconExtWindows: Sized {$/;"	t
IconType	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^pub enum IconType {$/;"	g
IconicState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ffi.rs	/^pub const IconicState: CARD32 = 3;$/;"	c
IdRef	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub struct IdRef(id);$/;"	s
Idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub enum Idiom {$/;"	g
ImageCopyBuffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type ImageCopyBuffer<'a> = ImageCopyBufferBase<&'a Buffer>;$/;"	T
ImageCopyTexture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type ImageCopyTexture<'a> = ImageCopyTextureBase<&'a Texture>;$/;"	T
Ime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum Ime {$/;"	g
Ime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub struct Ime {$/;"	s
ImeContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^pub struct ImeContext {$/;"	s
ImeContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^pub struct ImeContext {$/;"	s
ImeContextClientData	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^struct ImeContextClientData {$/;"	s
ImeContextCreationError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^pub enum ImeContextCreationError {$/;"	g
ImeCreationError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub enum ImeCreationError {$/;"	g
ImeEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub enum ImeEvent {$/;"	g
ImeEventReceiver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub type ImeEventReceiver = Receiver<(ffi::Window, ImeEvent)>;$/;"	T
ImeEventSender	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub type ImeEventSender = Sender<(ffi::Window, ImeEvent)>;$/;"	T
ImeInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^pub struct ImeInner {$/;"	s
ImeReceiver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub type ImeReceiver = Receiver<ImeRequest>;$/;"	T
ImeRequest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub enum ImeRequest {$/;"	g
ImeSender	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^pub type ImeSender = Sender<ImeRequest>;$/;"	T
ImeState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^enum ImeState {$/;"	g
ImeState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^pub enum ImeState {$/;"	g
Inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub struct Inner {$/;"	s
Inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^pub struct Inner {$/;"	s
InputMethod	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^pub struct InputMethod {$/;"	s
InputMethodName	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^struct InputMethodName {$/;"	s
InputMethodResult	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^pub enum InputMethodResult {$/;"	g
InsetBounds	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const InsetBounds: UIScreenOverscanCompensation = UIScreenOverscanCompensation(1);$/;"	c
Instance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Instance {$/;"	s
Instant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/native.rs	/^pub type Instant = std::time::Instant;$/;"	T
Instant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^pub struct Instant(Duration);$/;"	s
Int	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^      type Int = $repr;$/;"	T
Int	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^  type Int: Copy + Ord;$/;"	T
InternalEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^enum InternalEvent {$/;"	g
IntoIter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    type IntoIter = KeymapIter<'a>;$/;"	T
Item	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    type Item = ffi::KeyCode;$/;"	T
IterationResult	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^        struct IterationResult {$/;"	s
JsFutureResult	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^type JsFutureResult = Result<wasm_bindgen::JsValue, wasm_bindgen::JsValue>;$/;"	T
KEYCODE_OFFSET	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^const KEYCODE_OFFSET: u8 = 8;$/;"	c
KeyEquivalent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/menu.rs	/^struct KeyEquivalent<'a> {$/;"	s
KeyboardInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/mod.rs	/^struct KeyboardInner {$/;"	s
KeyboardInput	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub struct KeyboardInput {$/;"	s
Keymap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^pub struct Keymap {$/;"	s
KeymapIter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^pub struct KeymapIter<'a> {$/;"	s
LABEL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^const LABEL: &str = "label";$/;"	c
LALT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const LALT = 0b010 << 6;$/;"	c
LCTRL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const LCTRL = 0b010 << 3;$/;"	c
LEFT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const LEFT   = 1 << 1;$/;"	c
LIGHT_THEME_NAME	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^static LIGHT_THEME_NAME: Lazy<Vec<u16>> = Lazy::new(|| util::encode_wide(""));$/;"	c
LLOGO	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const LLOGO = 0b010 << 9;$/;"	c
LOGO	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        const LOGO = 0b100 << 9;$/;"	c
LOGO_OFFSET	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^const LOGO_OFFSET: usize = 6;$/;"	c
LSHIFT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const LSHIFT = 0b010;$/;"	c
Label	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type Label<'a> = Option<&'a str>;$/;"	T
Landscape	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Landscape: UIInterfaceOrientationMask =$/;"	c
LandscapeLeft	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const LandscapeLeft: UIInterfaceOrientationMask = UIInterfaceOrientationMask(1 << 4);$/;"	c
LandscapeRight	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const LandscapeRight: UIInterfaceOrientationMask = UIInterfaceOrientationMask(1 << 3);$/;"	c
LoadOp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum LoadOp<V> {$/;"	g
LogicalFrameExtents	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct LogicalFrameExtents {$/;"	s
LogicalPosition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub struct LogicalPosition<P> {$/;"	s
LogicalSize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub struct LogicalSize<P> {$/;"	s
MAGIC_NUMBER	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^    const MAGIC_NUMBER: u32 = 0x0723_0203;$/;"	c
MARKER_BORDERLESS_FULLSCREEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_BORDERLESS_FULLSCREEN = 1 << 10;$/;"	c
MARKER_DECORATIONS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_DECORATIONS = 1 << 15;$/;"	c
MARKER_EXCLUSIVE_FULLSCREEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_EXCLUSIVE_FULLSCREEN = 1 << 9;$/;"	c
MARKER_IN_SIZE_MOVE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_IN_SIZE_MOVE = 1 << 12;$/;"	c
MARKER_RETAIN_STATE_ON_SIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_RETAIN_STATE_ON_SIZE = 1 << 11;$/;"	c
MARKER_UNDECORATED_SHADOW	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MARKER_UNDECORATED_SHADOW = 1 << 16;$/;"	c
MAXHOSTNAMELEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^            const MAXHOSTNAMELEN: usize = 256;$/;"	c
MAXIMIZED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MAXIMIZED      = 1 << 7;$/;"	c
MAX_VALUE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^      const MAX_VALUE: $repr = $max;$/;"	c
MAX_VALUE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^  const MAX_VALUE: Self::Int;$/;"	c
MINIMIZED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const MINIMIZED = 1 << 13;$/;"	c
MIN_VALUE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^      const MIN_VALUE: $repr = $min;$/;"	c
MIN_VALUE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^  const MIN_VALUE: Self::Int;$/;"	c
MONITORS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^static MONITORS: Lazy<Mutex<Option<Vec<MonitorHandle>>>> = Lazy::new(Mutex::default);$/;"	c
MWM_FUNC_ALL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_ALL: c_ulong = 1 << 0;$/;"	c
MWM_FUNC_CLOSE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_CLOSE: c_ulong = 1 << 5;$/;"	c
MWM_FUNC_MAXIMIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_MAXIMIZE: c_ulong = 1 << 4;$/;"	c
MWM_FUNC_MINIMIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_MINIMIZE: c_ulong = 1 << 3;$/;"	c
MWM_FUNC_MOVE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_MOVE: c_ulong = 1 << 2;$/;"	c
MWM_FUNC_RESIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_FUNC_RESIZE: c_ulong = 1 << 1;$/;"	c
MWM_HINTS_DECORATIONS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_HINTS_DECORATIONS: c_ulong = 1 << 1;$/;"	c
MWM_HINTS_FUNCTIONS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub const MWM_HINTS_FUNCTIONS: c_ulong = 1 << 0;$/;"	c
MainThreadSafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^struct MainThreadSafe<T>(T);$/;"	s
Maintain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type Maintain = wgt::Maintain<SubmissionIndex>;$/;"	T
MapContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^struct MapContext {$/;"	s
MapMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum MapMode {$/;"	g
Modifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^pub enum Modifier {$/;"	g
ModifierKeyState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^pub struct ModifierKeyState {$/;"	s
ModifierKeymap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^pub struct ModifierKeymap {$/;"	s
ModifiersState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub struct ModifiersState: u32 {$/;"	s
ModifiersStateSerialize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub struct ModifiersStateSerialize {$/;"	s
ModifiersStateSide	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^    pub struct ModifiersStateSide: u32 {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^pub struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct MonitorHandle;$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^        struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum MonitorHandle {$/;"	g
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^pub struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^pub struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^        struct MonitorHandle {$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^pub struct MonitorHandle(CGDirectDisplayID);$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^pub struct MonitorHandle;$/;"	s
MonitorHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^pub struct MonitorHandle(HMONITOR);$/;"	s
MonitorHandleExtIOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub trait MonitorHandleExtIOS {$/;"	t
MonitorHandleExtMacOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub trait MonitorHandleExtMacOS {$/;"	t
MonitorHandleExtUnix	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub trait MonitorHandleExtUnix {$/;"	t
MonitorHandleExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait MonitorHandleExtWindows {$/;"	t
MotifHints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^pub struct MotifHints {$/;"	s
MouseButton	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum MouseButton {$/;"	g
MouseLeaveHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^type MouseLeaveHandler = Rc<RefCell<Option<Box<dyn FnMut(i32)>>>>;$/;"	T
MouseProperties	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^pub struct MouseProperties {$/;"	s
MouseScrollDelta	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum MouseScrollDelta {$/;"	g
MouseState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^enum MouseState {$/;"	g
MwmHints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^struct MwmHints {$/;"	s
NOMOVE_OR_NOSIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^                const NOMOVE_OR_NOSIZE: u32 = SWP_NOMOVE | SWP_NOSIZE;$/;"	c
NONE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const NONE   = 0;$/;"	c
NO_BACK_BUFFER	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const NO_BACK_BUFFER = 1 << 4;$/;"	c
NSInteger	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type NSInteger = isize;$/;"	T
NSMutableAttributedString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub trait NSMutableAttributedString: Sized {$/;"	t
NSNotFound	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const NSNotFound: NSInteger = NSInteger::max_value();$/;"	c
NSOperatingSystemVersion	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct NSOperatingSystemVersion {$/;"	s
NSRange	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub struct NSRange {$/;"	s
NSStringRust	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub trait NSStringRust: Sized {$/;"	t
NSUInteger	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type NSUInteger = usize;$/;"	T
NSWindowLevel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub enum NSWindowLevel {$/;"	g
NUM_MODS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^const NUM_MODS: usize = 8;$/;"	c
NativeDisplayMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub struct NativeDisplayMode(pub id);$/;"	s
NativeDisplayMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^pub struct NativeDisplayMode(pub ffi::CGDisplayModeRef);$/;"	s
Never	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub enum Never {}$/;"	g
Never	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub enum Never {}$/;"	g
NoUninit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/no_uninit.rs	/^pub unsafe trait NoUninit: Sized + Copy + 'static {}$/;"	t
None	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const None: UIScreenOverscanCompensation = UIScreenOverscanCompensation(2);$/;"	c
NormalHints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^pub struct NormalHints<'a> {$/;"	s
NotSupportedError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/error.rs	/^pub struct NotSupportedError {$/;"	s
ON_TASKBAR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const ON_TASKBAR     = 1 << 2;$/;"	c
ORIGIN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    const ORIGIN: POINT = POINT { x: 0, y: 0 };$/;"	c
OSCapabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^        pub struct OSCapabilities {$/;"	s
OS_CAPABILITIES	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    static OS_CAPABILITIES: Lazy<OSCapabilities> = Lazy::new(|| {$/;"	c
Operations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Operations<V> {$/;"	s
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/error.rs	/^pub struct OsError {$/;"	s
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct OsError;$/;"	s
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/mod.rs	/^pub enum OsError {}$/;"	g
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum OsError {$/;"	g
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^pub enum OsError {$/;"	g
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/error.rs	/^pub struct OsError(pub String);$/;"	s
OsError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub type OsError = std::io::Error;$/;"	T
Output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    type Output = Duration;$/;"	T
Output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    type Output = Self;$/;"	T
Output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    type Output = SystemTime;$/;"	T
Output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type Output = T;$/;"	T
Output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    type Output = Self;$/;"	T
OutputManager	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^pub struct OutputManager {$/;"	s
OutputManagerHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^pub struct OutputManagerHandle {$/;"	s
POPUP	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const POPUP          = 1 << 8;$/;"	c
PROCESS_NEW_EVENTS_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static PROCESS_NEW_EVENTS_MSG_ID: Lazy<u32> =$/;"	c
PROPERTY_BUFFER_SIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^const PROPERTY_BUFFER_SIZE: c_long = 1024; \/\/ 4k of RAM ought to be enough for anyone!$/;"	c
Pad	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Pad: UIUserInterfaceIdiom = UIUserInterfaceIdiom(1);$/;"	c
PanicError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^pub type PanicError = Box<dyn Any + Send + 'static>;$/;"	T
PanicInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub struct PanicInfo {$/;"	s
Parent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub enum Parent {$/;"	g
PeekableReceiver	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct PeekableReceiver<T> {$/;"	s
Phone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Phone: UIUserInterfaceIdiom = UIUserInterfaceIdiom(0);$/;"	c
PhysicalPosition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub struct PhysicalPosition<P> {$/;"	s
PhysicalSize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub struct PhysicalSize<P> {$/;"	s
PipelineLayout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct PipelineLayout {$/;"	s
PipelineLayoutDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct PipelineLayoutDescriptor<'a> {$/;"	s
PipelineLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type PipelineLayoutId = wgc::id::PipelineLayoutId;$/;"	T
PipelineLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type PipelineLayoutId = Sendable<web_sys::GpuPipelineLayout>;$/;"	T
PipelineLayoutId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type PipelineLayoutId: Debug + Send + Sync + 'static;$/;"	T
Pixel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub trait Pixel: Copy + Into<f64> {$/;"	t
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct PlatformSpecificWindowBuilderAttributes;$/;"	s
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^pub struct PlatformSpecificWindowBuilderAttributes {$/;"	s
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub struct PlatformSpecificWindowBuilderAttributes {$/;"	s
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^pub struct PlatformSpecificWindowBuilderAttributes {$/;"	s
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^pub struct PlatformSpecificWindowBuilderAttributes {$/;"	s
PlatformSpecificWindowBuilderAttributes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub struct PlatformSpecificWindowBuilderAttributes {$/;"	s
Pod	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/pod.rs	/^pub unsafe trait Pod: Zeroable + Copy + 'static {}$/;"	t
PodCastError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub enum PodCastError {$/;"	g
PodInOption	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/pod_in_option.rs	/^pub unsafe trait PodInOption: ZeroableInOption + Copy + 'static {}$/;"	t
PointerState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^pub struct PointerState<'a> {$/;"	s
PopErrorScopeFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type PopErrorScopeFuture = Ready<Option<crate::Error>>;$/;"	T
PopErrorScopeFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type PopErrorScopeFuture =$/;"	T
PopErrorScopeFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type PopErrorScopeFuture: Future<Output = Option<Error>> + Send;$/;"	T
Portrait	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Portrait: UIInterfaceOrientationMask = UIInterfaceOrientationMask(1 << 1);$/;"	c
PortraitUpsideDown	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const PortraitUpsideDown: UIInterfaceOrientationMask = UIInterfaceOrientationMask(1 << 2);$/;"	c
Position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub enum Position {$/;"	g
PotentialInputMethod	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^struct PotentialInputMethod {$/;"	s
PotentialInputMethods	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^pub struct PotentialInputMethods {$/;"	s
Preedit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^struct Preedit {$/;"	s
PreeditCallbacks	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^struct PreeditCallbacks {$/;"	s
PropMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^pub enum PropMode {$/;"	g
QuerySet	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct QuerySet {$/;"	s
QuerySetDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type QuerySetDescriptor<'a> = wgt::QuerySetDescriptor<Label<'a>>;$/;"	T
QuerySetId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type QuerySetId = wgc::id::QuerySetId;$/;"	T
QuerySetId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type QuerySetId = (); \/\/TODO!$/;"	T
QuerySetId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type QuerySetId: Debug + Send + Sync + 'static;$/;"	T
Queue	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Queue {$/;"	s
QueueId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type QueueId = wgc::id::QueueId;$/;"	T
QueueId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type QueueId = Sendable<web_sys::GpuQueue>;$/;"	T
QueueId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type QueueId: Debug + Send + Sync + 'static;$/;"	T
QueueWriteBuffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct QueueWriteBuffer {$/;"	s
QueueWriteBuffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^pub struct QueueWriteBuffer(Box<[u8]>);$/;"	s
QueueWriteBufferView	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct QueueWriteBufferView<'a> {$/;"	s
RALT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const RALT = 0b001 << 6;$/;"	c
RCTRL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const RCTRL = 0b001 << 3;$/;"	c
REQUIRED_FIELDS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^                const REQUIRED_FIELDS: u32 =$/;"	c
RESIZABLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const RESIZABLE      = 1 << 0;$/;"	c
RIGHT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const RIGHT  = 1 << 3;$/;"	c
RLOGO	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const RLOGO = 0b001 << 9;$/;"	c
RSHIFT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        const RSHIFT = 0b001;$/;"	c
RaiiIcon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^struct RaiiIcon {$/;"	s
RawCanvasType	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub type RawCanvasType = HtmlCanvasElement;$/;"	T
RawDeviceInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub enum RawDeviceInfo {$/;"	g
RenderBundle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderBundle {$/;"	s
RenderBundleDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type RenderBundleDescriptor<'a> = wgt::RenderBundleDescriptor<Label<'a>>;$/;"	T
RenderBundleEncoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderBundleEncoder<'a> {$/;"	s
RenderBundleEncoderDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderBundleEncoderDescriptor<'a> {$/;"	s
RenderBundleEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RenderBundleEncoderId = wgc::command::RenderBundleEncoder;$/;"	T
RenderBundleEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RenderBundleEncoderId = RenderBundleEncoder;$/;"	T
RenderBundleEncoderId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RenderBundleEncoderId: Debug + RenderInner<Self>;$/;"	T
RenderBundleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RenderBundleId = wgc::id::RenderBundleId;$/;"	T
RenderBundleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RenderBundleId = Sendable<web_sys::GpuRenderBundle>;$/;"	T
RenderBundleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RenderBundleId: Debug + Send + Sync + 'static;$/;"	T
RenderEncoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^pub trait RenderEncoder<'a> {$/;"	t
RenderInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^trait RenderInner<Ctx: Context> {$/;"	t
RenderPass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPass<'a> {$/;"	s
RenderPassColorAttachment	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPassColorAttachment<'tex> {$/;"	s
RenderPassDepthStencilAttachment	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPassDepthStencilAttachment<'tex> {$/;"	s
RenderPassDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPassDescriptor<'tex, 'desc> {$/;"	s
RenderPassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RenderPassId = wgc::command::RenderPass;$/;"	T
RenderPassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RenderPassId = RenderPass;$/;"	T
RenderPassId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RenderPassId: Debug + RenderPassInner<Self>;$/;"	T
RenderPassInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^trait RenderPassInner<Ctx: Context>: RenderInner<Ctx> {$/;"	t
RenderPipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPipeline {$/;"	s
RenderPipelineDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RenderPipelineDescriptor<'a> {$/;"	s
RenderPipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RenderPipelineId = wgc::id::RenderPipelineId;$/;"	T
RenderPipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RenderPipelineId = Sendable<web_sys::GpuRenderPipeline>;$/;"	T
RenderPipelineId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RenderPipelineId: Debug + Send + Sync + 'static;$/;"	T
ReplaceImError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^enum ReplaceImError {$/;"	g
RequestAdapterFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RequestAdapterFuture = Ready<Option<Self::AdapterId>>;$/;"	T
RequestAdapterFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RequestAdapterFuture = MakeSendFuture<$/;"	T
RequestAdapterFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RequestAdapterFuture: Future<Output = Option<Self::AdapterId>> + Send;$/;"	T
RequestAdapterOptions	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type RequestAdapterOptions<'a> = RequestAdapterOptionsBase<&'a Surface>;$/;"	T
RequestDeviceError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct RequestDeviceError;$/;"	s
RequestDeviceFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type RequestDeviceFuture =$/;"	T
RequestDeviceFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type RequestDeviceFuture = MakeSendFuture<$/;"	T
RequestDeviceFuture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type RequestDeviceFuture: Future<Output = Result<(Self::DeviceId, Self::QueueId), RequestDeviceError>>$/;"	T
RtlGetVersion	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    type RtlGetVersion = unsafe extern "system" fn(*mut OSVERSIONINFOW) -> NTSTATUS;$/;"	T
RunLoop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^struct RunLoop(CFRunLoopRef);$/;"	s
Runner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^struct Runner<T: 'static> {$/;"	s
RunnerEnum	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^enum RunnerEnum<T: 'static> {$/;"	g
RunnerState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^enum RunnerState {$/;"	g
SEND_WAIT_THREAD_ID_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static SEND_WAIT_THREAD_ID_MSG_ID: Lazy<u32> =$/;"	c
SET_PROCESS_DPI_AWARE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static SET_PROCESS_DPI_AWARE: Lazy<Option<SetProcessDPIAware>> =$/;"	c
SET_PROCESS_DPI_AWARENESS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static SET_PROCESS_DPI_AWARENESS: Lazy<Option<SetProcessDpiAwareness>> =$/;"	c
SET_PROCESS_DPI_AWARENESS_CONTEXT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub static SET_PROCESS_DPI_AWARENESS_CONTEXT: Lazy<Option<SetProcessDpiAwarenessContext>> =$/;"	c
SET_RETAIN_STATE_ON_SIZE_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub static SET_RETAIN_STATE_ON_SIZE_MSG_ID: Lazy<u32> =$/;"	c
SET_WINDOW_COMPOSITION_ATTRIBUTE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    static SET_WINDOW_COMPOSITION_ATTRIBUTE: Lazy<Option<SetWindowCompositionAttribute>> =$/;"	c
SHIFT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        const SHIFT = 0b100;$/;"	c
SHIFT_OFFSET	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^const SHIFT_OFFSET: usize = 0;$/;"	c
SHOULD_APPS_USE_DARK_MODE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    static SHOULD_APPS_USE_DARK_MODE: Lazy<Option<ShouldAppsUseDarkMode>> = Lazy::new(|| unsafe {$/;"	c
SKIP_POINTER_FRAME_MESSAGES	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static SKIP_POINTER_FRAME_MESSAGES: Lazy<Option<SkipPointerFrameMessages>> =$/;"	c
SUPPORTED_HINTS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^static SUPPORTED_HINTS: Lazy<Mutex<Vec<ffi::Atom>>> =$/;"	c
Sampler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Sampler {$/;"	s
SamplerDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct SamplerDescriptor<'a> {$/;"	s
SamplerId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type SamplerId = wgc::id::SamplerId;$/;"	T
SamplerId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type SamplerId = Sendable<web_sys::GpuSampler>;$/;"	T
SamplerId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type SamplerId: Debug + Send + Sync + 'static;$/;"	T
SavedWindow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^pub struct SavedWindow {$/;"	s
Scale	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Scale: UIScreenOverscanCompensation = UIScreenOverscanCompensation(0);$/;"	c
ScaleChangeDetector	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/scaling.rs	/^pub struct ScaleChangeDetector(Rc<RefCell<ScaleChangeDetectorInternal>>);$/;"	s
ScaleChangeDetectorInternal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/scaling.rs	/^struct ScaleChangeDetectorInternal {$/;"	s
ScanCode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub type ScanCode = u32;$/;"	T
ScreenEdge	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    pub struct ScreenEdge: u8 {$/;"	s
ScrollAxis	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct ScrollAxis {$/;"	s
ScrollOrientation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^enum ScrollOrientation {$/;"	g
SeatInfo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^struct SeatInfo {$/;"	s
SeatManager	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^pub struct SeatManager {$/;"	s
SeatManagerInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^struct SeatManagerInner {$/;"	s
SetProcessDPIAware	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type SetProcessDPIAware = unsafe extern "system" fn() -> BOOL;$/;"	T
SetProcessDpiAwareness	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type SetProcessDpiAwareness =$/;"	T
SetProcessDpiAwarenessContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub type SetProcessDpiAwarenessContext =$/;"	T
SetWindowCompositionAttribute	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    type SetWindowCompositionAttribute =$/;"	T
ShaderModule	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ShaderModule {$/;"	s
ShaderModuleDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ShaderModuleDescriptor<'a> {$/;"	s
ShaderModuleDescriptorSpirV	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct ShaderModuleDescriptorSpirV<'a> {$/;"	s
ShaderModuleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type ShaderModuleId = wgc::id::ShaderModuleId;$/;"	T
ShaderModuleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type ShaderModuleId = Sendable<web_sys::GpuShaderModule>;$/;"	T
ShaderModuleId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type ShaderModuleId: Debug + Send + Sync + 'static;$/;"	T
ShaderSource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum ShaderSource<'a> {$/;"	g
Shared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^pub struct Shared<T: 'static>(Rc<Execution<T>>);$/;"	s
SharedState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^pub struct SharedState {$/;"	s
SharedState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^pub struct SharedState {$/;"	s
ShouldAppsUseDarkMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    type ShouldAppsUseDarkMode = unsafe extern "system" fn() -> bool;$/;"	T
Signal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^struct Signal {$/;"	s
SignalState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^enum SignalState {$/;"	g
Size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub enum Size {$/;"	g
SkipPointerFrameMessages	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type SkipPointerFrameMessages = unsafe extern "system" fn(pointerId: u32) -> BOOL;$/;"	T
StagingBelt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^pub struct StagingBelt {$/;"	s
StartCause	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum StartCause {$/;"	g
State	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/state.rs	/^pub enum State {$/;"	g
State	/Users/mart/code/wgpu_plot/src/lib.rs	/^pub struct State {$/;"	s
StateOperation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^pub enum StateOperation {$/;"	g
Style	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^pub enum Style {$/;"	g
SubmissionIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type SubmissionIndex = wgc::device::queue::WrappedSubmissionIndex;$/;"	T
SubmissionIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type SubmissionIndex = SubmissionIndex;$/;"	T
SubmissionIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^pub struct SubmissionIndex;$/;"	s
SubmissionIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type SubmissionIndex: Debug + Copy + Clone + Send + 'static;$/;"	T
SubmissionIndex	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct SubmissionIndex(<C as Context>::SubmissionIndex);$/;"	s
Surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct Surface {$/;"	s
Surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Surface {$/;"	s
SurfaceError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub enum SurfaceError {$/;"	g
SurfaceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type SurfaceId = Surface;$/;"	T
SurfaceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type SurfaceId = Sendable<web_sys::GpuCanvasContext>;$/;"	T
SurfaceId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type SurfaceId: Debug + Send + Sync + 'static;$/;"	T
SurfaceOutputDetail	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type SurfaceOutputDetail = SurfaceOutputDetail;$/;"	T
SurfaceOutputDetail	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type SurfaceOutputDetail = SurfaceOutputDetail;$/;"	T
SurfaceOutputDetail	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type SurfaceOutputDetail: Send;$/;"	T
SurfaceTexture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct SurfaceTexture {$/;"	s
SystemTime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/native.rs	/^pub type SystemTime = std::time::SystemTime;$/;"	T
SystemTime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^pub struct SystemTime(f64);$/;"	s
TASKBAR_CREATED	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^pub static TASKBAR_CREATED: Lazy<u32> =$/;"	c
TASKBAR_LIST	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    static TASKBAR_LIST: Cell<*mut ITaskbarList> = Cell::new(ptr::null_mut());$/;"	c
TASKBAR_LIST2	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    static TASKBAR_LIST2: Cell<*mut ITaskbarList2> = Cell::new(ptr::null_mut());$/;"	c
TEXT_BUFFER_SIZE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^const TEXT_BUFFER_SIZE: usize = 1024;$/;"	c
THREAD_EVENT_TARGET_WINDOW_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static THREAD_EVENT_TARGET_WINDOW_CLASS: Lazy<Vec<u16>> =$/;"	c
TOP	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^        const TOP    = 1 << 0;$/;"	c
TRANSPARENT	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const TRANSPARENT    = 1 << 5;$/;"	c
TRUE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const TRUE: Boolean = 1;$/;"	c
TV	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const TV: UIUserInterfaceIdiom = UIUserInterfaceIdiom(2);$/;"	c
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type Target = [u8];$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type Target = [u8];$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type Target = [u8];$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^    type Target = [u8];$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    type Target = EventLoopWindowTarget<T>;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    type Target = Inner;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    type Target = Inner;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    type Target = UnownedWindow;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    type Target = [ffi::XIDeviceInfo];$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    type Target = T;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^    type Target = UnownedWindow;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^    type Target = T;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    type Target = id;$/;"	T
Target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    type Target = SharedState;$/;"	T
TextInput	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^pub struct TextInput {$/;"	s
TextInputHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^pub struct TextInputHandler {$/;"	s
TextInputInner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^struct TextInputInner {$/;"	s
Texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^pub struct Texture {$/;"	s
Texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct Texture {$/;"	s
TextureDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub type TextureDescriptor<'a> = wgt::TextureDescriptor<Label<'a>>;$/;"	T
TextureId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type TextureId = Texture;$/;"	T
TextureId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type TextureId = Sendable<web_sys::GpuTexture>;$/;"	T
TextureId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type TextureId: Debug + Send + Sync + 'static;$/;"	T
TextureView	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct TextureView {$/;"	s
TextureViewDescriptor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct TextureViewDescriptor<'a> {$/;"	s
TextureViewId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    type TextureViewId = wgc::id::TextureViewId;$/;"	T
TextureViewId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    type TextureViewId = Sendable<web_sys::GpuTextureView>;$/;"	T
TextureViewId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    type TextureViewId: Debug + Send + Sync + 'static;$/;"	T
Theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub enum Theme {$/;"	g
ThreadExecFn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type ThreadExecFn = Box<Box<dyn FnMut()>>;$/;"	T
ThreadMsgTargetData	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^struct ThreadMsgTargetData<T: 'static> {$/;"	s
Timeout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/timeout.rs	/^pub struct Timeout {$/;"	s
Touch	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub struct Touch {$/;"	s
Touch	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/touch/mod.rs	/^pub struct Touch {$/;"	s
TouchPhase	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum TouchPhase {$/;"	g
TranslatedCoords	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^pub struct TranslatedCoords {$/;"	s
TransparentWrapper	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^pub unsafe trait TransparentWrapper<Inner: ?Sized> {$/;"	t
TransparentWrapperAlloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub trait TransparentWrapperAlloc<Inner: ?Sized>:$/;"	t
UIApplicationMain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn UIApplicationMain($/;"	f
UIEdgeInsets	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct UIEdgeInsets {$/;"	s
UIForceTouchCapability	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum UIForceTouchCapability {$/;"	g
UIInterfaceOrientationMask	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct UIInterfaceOrientationMask(NSUInteger);$/;"	s
UIRectEdge	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct UIRectEdge(NSUInteger);$/;"	s
UIScreenOverscanCompensation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct UIScreenOverscanCompensation(NSInteger);$/;"	s
UITouchPhase	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum UITouchPhase {$/;"	g
UITouchType	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub enum UITouchType {$/;"	g
UIUserInterfaceIdiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub struct UIUserInterfaceIdiom(NSInteger);$/;"	s
UNIX_EPOCH	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub const UNIX_EPOCH: SystemTime = SystemTime(0.0);$/;"	c
USER_EVENT_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static USER_EVENT_MSG_ID: Lazy<u32> =$/;"	c
USER_REDRAW_TOKEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^const USER_REDRAW_TOKEN: Token = Token(1);$/;"	c
USES_ALTGR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^        static USES_ALTGR: AtomicBool = AtomicBool::new(false);$/;"	c
UTF8String	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn UTF8String(self) -> *const c_char {$/;"	f
UTF8String	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn UTF8String(self) -> *const c_char;$/;"	f
UXTHEME_SHOULDAPPSUSEDARKMODE_ORDINAL	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^        const UXTHEME_SHOULDAPPSUSEDARKMODE_ORDINAL: PCSTR = 132 as PCSTR;$/;"	c
UncapturedErrorHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub trait UncapturedErrorHandler: Fn(Error) + Send + 'static {}$/;"	t
UnloadEventHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub struct UnloadEventHandle {$/;"	s
UnownedWindow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^pub struct UnownedWindow {$/;"	s
UnownedWindow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^pub struct UnownedWindow {$/;"	s
Unspecified	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub const Unspecified: UIUserInterfaceIdiom = UIUserInterfaceIdiom(-1);$/;"	c
UserAttentionType	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub enum UserAttentionType {$/;"	g
UserCallbackTransitionResult	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^enum UserCallbackTransitionResult<'a> {$/;"	g
UserEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/run_return.rs	/^    type UserEvent = T;$/;"	T
UserEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/run_return.rs	/^    type UserEvent;$/;"	T
UserEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    type UserEvent = T;$/;"	T
UserEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    type UserEvent;$/;"	T
VAR_NAME	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^            const VAR_NAME: &'static str = concat!("_", stringify!($name));$/;"	c
VIEW_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^static VIEW_CLASS: Lazy<ViewClass> = Lazy::new(|| unsafe {$/;"	c
VIRTUAL_CORE_KEYBOARD	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^pub const VIRTUAL_CORE_KEYBOARD: c_int = 3;$/;"	c
VIRTUAL_CORE_POINTER	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^pub const VIRTUAL_CORE_POINTER: c_int = 2;$/;"	c
VISIBLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^        const VISIBLE        = 1 << 1;$/;"	c
ValidOrientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub enum ValidOrientations {$/;"	g
Vertex	/Users/mart/code/wgpu_plot/src/lib.rs	/^pub struct Vertex {$/;"	s
VertexBufferLayout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct VertexBufferLayout<'a> {$/;"	s
VertexState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^pub struct VertexState<'a> {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum VideoMode {$/;"	g
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^pub struct VideoMode {$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^pub struct VideoMode;$/;"	s
VideoMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^pub struct VideoMode {$/;"	s
ViewClass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^struct ViewClass(*const Class);$/;"	s
VirtualKeyCode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum VirtualKeyCode {$/;"	g
Visibility	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^pub enum Visibility {$/;"	g
WAIT_PERIOD_MIN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static WAIT_PERIOD_MIN: Lazy<Option<u32>> = Lazy::new(|| unsafe {$/;"	c
WAIT_UNTIL_MSG_ID	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^static WAIT_UNTIL_MSG_ID: Lazy<u32> =$/;"	c
WAYLAND_CSD_THEME_ENV_VAR	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^const WAYLAND_CSD_THEME_ENV_VAR: &str = "WINIT_WAYLAND_CSD_THEME";$/;"	c
WCA_USEDARKMODECOLORS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    const WCA_USEDARKMODECOLORS: WINDOWCOMPOSITIONATTRIB = 26;$/;"	c
WIDTH	/Users/mart/code/wgpu_plot/src/lib.rs	/^const WIDTH: f32 = 0.1;$/;"	c
WIN10_BUILD_VERSION	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^static WIN10_BUILD_VERSION: Lazy<Option<u32>> = Lazy::new(|| {$/;"	c
WINDOWCOMPOSITIONATTRIB	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    type WINDOWCOMPOSITIONATTRIB = u32;$/;"	T
WINDOWCOMPOSITIONATTRIBDATA	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^    struct WINDOWCOMPOSITIONATTRIBDATA {$/;"	s
WINDOW_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^static WINDOW_CLASS: Lazy<WindowClass> = Lazy::new(|| unsafe {$/;"	c
WINDOW_DELEGATE_CLASS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^static WINDOW_DELEGATE_CLASS: Lazy<WindowDelegateClass> = Lazy::new(|| unsafe {$/;"	c
WM_NAME	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^static WM_NAME: Lazy<Mutex<Option<String>>> = Lazy::new(|| Mutex::new(None));$/;"	c
WaitUntilInstantBox	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^type WaitUntilInstantBox = Box<Instant>;$/;"	T
WakeSender	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct WakeSender<T> {$/;"	s
WinIcon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^pub struct WinIcon {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct Window;$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^pub struct Window {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub enum Window {$/;"	g
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^pub struct Window {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^pub struct Window(Arc<UnownedWindow>);$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^pub struct Window {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^pub struct Window {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^pub struct Window {$/;"	s
Window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub struct Window {$/;"	s
WindowArea	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub enum WindowArea {$/;"	g
WindowBuilder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub struct WindowBuilder {$/;"	s
WindowBuilderExtAndroid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^pub trait WindowBuilderExtAndroid {}$/;"	t
WindowBuilderExtIOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub trait WindowBuilderExtIOS {$/;"	t
WindowBuilderExtMacOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub trait WindowBuilderExtMacOS {$/;"	t
WindowBuilderExtUnix	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub trait WindowBuilderExtUnix {$/;"	t
WindowBuilderExtWebSys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^pub trait WindowBuilderExtWebSys {$/;"	t
WindowBuilderExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait WindowBuilderExtWindows {$/;"	t
WindowClass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^struct WindowClass(*const Class);$/;"	s
WindowCompositorUpdate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^pub struct WindowCompositorUpdate {$/;"	s
WindowDelegateClass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^struct WindowDelegateClass(*const Class);$/;"	s
WindowDelegateState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^pub struct WindowDelegateState {$/;"	s
WindowEvent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^pub enum WindowEvent<'a> {$/;"	g
WindowExtAndroid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^pub trait WindowExtAndroid {$/;"	t
WindowExtIOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^pub trait WindowExtIOS {$/;"	t
WindowExtMacOS	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^pub trait WindowExtMacOS {$/;"	t
WindowExtUnix	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub trait WindowExtUnix {$/;"	t
WindowExtWebSys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^pub trait WindowExtWebSys {$/;"	t
WindowExtWindows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^pub trait WindowExtWindows {$/;"	t
WindowFlags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub struct WindowFlags: u32 {$/;"	s
WindowHandle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^pub struct WindowHandle {$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^pub struct WindowId;$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^pub struct WindowId {$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub struct WindowId(u64);$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^pub struct WindowId(pub usize);$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^pub struct WindowId(pub(crate) u32);$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^pub struct WindowId(HWND);$/;"	s
WindowId	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^pub struct WindowId(pub(crate) platform_impl::WindowId);$/;"	s
WindowRequest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^pub enum WindowRequest {$/;"	g
WindowState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^pub struct WindowState {$/;"	s
WindowType	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^pub enum WindowType {$/;"	g
WindowUserRequest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^pub struct WindowUserRequest {$/;"	s
WindowWrapper	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^pub struct WindowWrapper(HWND);$/;"	s
WindowingFeatures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^pub struct WindowingFeatures {$/;"	s
WinitDispatcher	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^type WinitDispatcher = calloop::Dispatcher<'static, WaylandSource, WinitState>;$/;"	T
WinitEnv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^pub struct WinitEnv {$/;"	s
WinitFrame	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^pub type WinitFrame = sctk::window::FallbackFrame;$/;"	T
WinitFrame	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^pub type WinitFrame = sctk_adwaita::AdwaitaFrame;$/;"	T
WinitPointer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^pub struct WinitPointer {$/;"	s
WinitState	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/state.rs	/^pub struct WinitState {$/;"	s
X11_BACKEND	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^pub static X11_BACKEND: Lazy<Mutex<Result<Arc<XConnection>, XNotSupported>>> =$/;"	c
XConnection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^pub struct XConnection {$/;"	s
XError	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^pub struct XError {$/;"	s
XErrorHandler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^pub type XErrorHandler =$/;"	T
XExtension	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^struct XExtension {$/;"	s
XIMProcNonnull	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^type XIMProcNonnull = unsafe extern "C" fn(ffi::XIM, ffi::XPointer, ffi::XPointer);$/;"	T
XIMStyles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^struct XIMStyles {$/;"	s
XIM_NONE_STYLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^const XIM_NONE_STYLE: XIMStyle = (ffi::XIMPreeditNone | ffi::XIMStatusNone) as XIMStyle;$/;"	c
XIM_NOTHING_STYLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^const XIM_NOTHING_STYLE: XIMStyle = (ffi::XIMPreeditNothing | ffi::XIMStatusNothing) as XIMStyle;$/;"	c
XIM_PREEDIT_STYLE	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^const XIM_PREEDIT_STYLE: XIMStyle = (ffi::XIMPreeditCallbacks | ffi::XIMStatusNothing) as XIMStyle;$/;"	c
XNotSupported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^pub enum XNotSupported {$/;"	g
XSmartPointer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^pub struct XSmartPointer<'a, T> {$/;"	s
X_TOKEN	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^const X_TOKEN: Token = Token(0);$/;"	c
XlibErrorHook	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub type XlibErrorHook =$/;"	T
Zeroable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/zeroable.rs	/^pub unsafe trait Zeroable: Sized {$/;"	t
ZeroableInOption	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/zeroable_in_option.rs	/^pub unsafe trait ZeroableInOption: Sized {}$/;"	t
__ImageBase	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^        static __ImageBase: IMAGE_DOS_HEADER;$/;"	c
_emscripten_get_now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^        pub fn _emscripten_get_now() -> f64;$/;"	f
accepts_first_mouse	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn accepts_first_mouse(_this: &Object, _sel: Sel, _event: id) -> BOOL {$/;"	f
accepts_first_responder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn accepts_first_responder(_this: &Object, _sel: Sel) -> BOOL {$/;"	f
adapter_as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn adapter_as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Adapter>) -> R, R>($/;"	f
adapter_downlevel_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_downlevel_capabilities(&self, adapter: &Self::AdapterId) -> DownlevelCapabilities {$/;"	f
adapter_downlevel_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_downlevel_capabilities($/;"	f
adapter_downlevel_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_downlevel_capabilities(&self, adapter: &Self::AdapterId) -> DownlevelCapabilities;$/;"	f
adapter_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_drop(&self, adapter: &Self::AdapterId) {$/;"	f
adapter_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_drop(&self, _adapter: &Self::AdapterId) {$/;"	f
adapter_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_drop(&self, adapter: &Self::AdapterId);$/;"	f
adapter_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_features(&self, adapter: &Self::AdapterId) -> Features {$/;"	f
adapter_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_features(&self, adapter: &Self::AdapterId) -> wgt::Features {$/;"	f
adapter_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_features(&self, adapter: &Self::AdapterId) -> Features;$/;"	f
adapter_get_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_get_info(&self, adapter: &wgc::id::AdapterId) -> AdapterInfo {$/;"	f
adapter_get_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_get_info(&self, _adapter: &Self::AdapterId) -> wgt::AdapterInfo {$/;"	f
adapter_get_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_get_info(&self, adapter: &Self::AdapterId) -> AdapterInfo;$/;"	f
adapter_get_texture_format_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_get_texture_format_features($/;"	f
adapter_get_texture_format_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_get_texture_format_features($/;"	f
adapter_get_texture_format_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_get_texture_format_features($/;"	f
adapter_is_surface_supported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_is_surface_supported($/;"	f
adapter_is_surface_supported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_is_surface_supported($/;"	f
adapter_is_surface_supported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_is_surface_supported($/;"	f
adapter_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_limits(&self, adapter: &Self::AdapterId) -> Limits {$/;"	f
adapter_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_limits(&self, adapter: &Self::AdapterId) -> wgt::Limits {$/;"	f
adapter_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_limits(&self, adapter: &Self::AdapterId) -> Limits;$/;"	f
adapter_request_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn adapter_request_device($/;"	f
adapter_request_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn adapter_request_device($/;"	f
adapter_request_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn adapter_request_device($/;"	f
add	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn add(self, other: Duration) -> SystemTime {$/;"	f
add	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn add(self, rhs: Duration) -> Self {$/;"	f
add	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn add(&mut self, offset: BufferAddress, size: Option<BufferSize>) -> BufferAddress {$/;"	f
add_assign	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn add_assign(&mut self, rhs: Duration) {$/;"	f
add_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn add_canvas(&self, id: WindowId, canvas: &Rc<RefCell<backend::Canvas>>) {$/;"	f
add_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    fn add_event<E, F>($/;"	f
add_func	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    fn add_func(&mut self, func: c_ulong) {$/;"	f
add_observer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    unsafe fn add_observer($/;"	f
add_output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn add_output(&self, output: WlOutput) {$/;"	f
add_property	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^macro_rules! add_property {$/;"	d
add_user_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    fn add_user_event<E, F>($/;"	f
add_window_mouse_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    fn add_window_mouse_event<F>($/;"	f
adjust_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn adjust_rect(self, hwnd: HWND, mut rect: RECT) -> Result<RECT, io::Error> {$/;"	f
adjust_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn adjust_size(self, hwnd: HWND, size: PhysicalSize<u32>) -> PhysicalSize<u32> {$/;"	f
align_to	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^pub fn align_to<T>(value: T, alignment: T) -> T$/;"	f
alloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn alloc(_: Self) -> id {$/;"	f
alloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn alloc(_: Self) -> id {$/;"	f
alloc_class_hint	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    pub fn alloc_class_hint(&self) -> XSmartPointer<'_, ffi::XClassHint> {$/;"	f
alloc_size_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    pub fn alloc_size_hints(&self) -> XSmartPointer<'_, ffi::XSizeHints> {$/;"	f
alloc_wm_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    pub fn alloc_wm_hints(&self) -> XSmartPointer<'_, ffi::XWMHints> {$/;"	f
alt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn alt(&self) -> bool {$/;"	f
app_name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn app_name() -> Option<id> {$/;"	f
apply_activation_policy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^fn apply_activation_policy(app_delegate: &Object) {$/;"	f
apply_control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn apply_control_flow(&self, control_flow: ControlFlow) {$/;"	f
apply_diff	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    fn apply_diff(mut self, window: HWND, mut new: WindowFlags) {$/;"	f
as_bytes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/indirect.rs	/^    pub fn as_bytes(&self) -> &[u8] {$/;"	f
as_entire_binding	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn as_entire_binding(&self) -> BindingResource {$/;"	f
as_entire_buffer_binding	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn as_entire_buffer_binding(&self) -> BufferBinding {$/;"	f
as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Adapter>) -> R, R>($/;"	f
as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Device>) -> R, R>($/;"	f
as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Texture>)>($/;"	f
as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn as_hal<A: wgc::hub::HalApi>(&self) -> Option<&A::Instance> {$/;"	f
as_image_copy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn as_image_copy(&self) -> ImageCopyTexture {$/;"	f
as_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn as_mut(&mut self) -> &mut [u8] {$/;"	f
as_raw_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    pub fn as_raw_handle(&self) -> HICON {$/;"	f
as_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	f
as_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    fn as_slice(&self) -> &[c_ulong] {$/;"	f
assert_main_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/mod.rs	/^macro_rules! assert_main_thread {$/;"	d
attributed_substring_for_proposed_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn attributed_substring_for_proposed_range($/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn available_monitors(&self) -> impl Iterator<Item = MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn available_monitors(&self) -> Vec<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn available_monitors(&self) -> Vec<X11MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^pub fn available_monitors() -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn available_monitors(&self) -> VecDequeIter<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn available_monitors(&self) -> VecDequeIter<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn available_monitors(&self) -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^pub fn available_monitors() -> VecDeque<MonitorHandle> {$/;"	f
available_monitors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn available_monitors(&self) -> impl Iterator<Item = MonitorHandle> {$/;"	f
available_outputs	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn available_outputs(&self) -> VecDeque<MonitorHandle> {$/;"	f
backend_bits_from_env	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub fn backend_bits_from_env() -> Option<Backends> {$/;"	f
become_dpi_aware	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub fn become_dpi_aware() {$/;"	f
become_key_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn become_key_window(object: &Object, _: Sel) {$/;"	f
begin_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn begin_compute_pass(&mut self, desc: &ComputePassDescriptor) -> ComputePass {$/;"	f
begin_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn begin_pipeline_statistics_query($/;"	f
begin_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn begin_pipeline_statistics_query(&mut self, _query_set: &(), _query_index: u32) {$/;"	f
begin_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn begin_pipeline_statistics_query(&mut self, query_set: &Ctx::QuerySetId, query_index: u32);$/;"	f
begin_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn begin_pipeline_statistics_query(&mut self, query_set: &QuerySet, query_index: u32) {$/;"	f
begin_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn begin_render_pass<'pass>($/;"	f
bind_group_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn bind_group_drop(&self, bind_group: &Self::BindGroupId) {$/;"	f
bind_group_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn bind_group_drop(&self, _bind_group: &Self::BindGroupId) {$/;"	f
bind_group_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn bind_group_drop(&self, bind_group: &Self::BindGroupId);$/;"	f
bind_group_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn bind_group_layout_drop(&self, bind_group_layout: &Self::BindGroupLayoutId) {$/;"	f
bind_group_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn bind_group_layout_drop(&self, _bind_group_layout: &Self::BindGroupLayoutId) {$/;"	f
bind_group_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn bind_group_layout_drop(&self, bind_group_layout: &Self::BindGroupLayoutId);$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bit_depth	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn bit_depth(&self) -> u16 {$/;"	f
bitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn bitor(self, rhs: Self) -> Self {$/;"	f
block_on	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^    fn block_on(self) -> Self::Output where Self: Sized { block_on(self) }$/;"	f
block_on	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^pub fn block_on<F: Future>(mut fut: F) -> F::Output {$/;"	f
bottom_left_to_top_left	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub fn bottom_left_to_top_left(rect: NSRect) -> f64 {$/;"	f
buffer_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn buffer_destroy(&self, buffer: &Self::BufferId) {$/;"	f
buffer_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn buffer_destroy(&self, buffer: &Self::BufferId) {$/;"	f
buffer_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn buffer_destroy(&self, buffer: &Self::BufferId);$/;"	f
buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn buffer_drop(&self, buffer: &Self::BufferId) {$/;"	f
buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn buffer_drop(&self, _buffer: &Self::BufferId) {$/;"	f
buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn buffer_drop(&self, buffer: &Self::BufferId);$/;"	f
buffer_get_mapped_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn buffer_get_mapped_range($/;"	f
buffer_get_mapped_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn buffer_get_mapped_range($/;"	f
buffer_get_mapped_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn buffer_get_mapped_range($/;"	f
buffer_map_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn buffer_map_async<F>($/;"	f
buffer_map_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn buffer_map_async<F>($/;"	f
buffer_map_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn buffer_map_async<F>($/;"	f
buffer_unmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn buffer_unmap(&self, buffer: &Self::BufferId) {$/;"	f
buffer_unmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn buffer_unmap(&self, buffer: &Self::BufferId) {$/;"	f
buffer_unmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn buffer_unmap(&self, buffer: &Self::BufferId);$/;"	f
bug	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^macro_rules! bug {$/;"	d
bug_assert	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^macro_rules! bug_assert {$/;"	d
build	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn build(&mut self) -> EventLoop<T> {$/;"	f
build	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn build<T: 'static>($/;"	f
button_flags_to_element_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^fn button_flags_to_element_state($/;"	f
bytes_of	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn bytes_of<T: NoUninit>(t: &T) -> &[u8] {$/;"	f
bytes_of_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn bytes_of_mut<T: NoUninit + AnyBitPattern>(t: &mut T) -> &mut [u8] {$/;"	f
calc_byte_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^fn calc_byte_position(text: &[char], pos: usize) -> usize {$/;"	f
calc_dpi_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^pub fn calc_dpi_factor($/;"	f
call_event_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^macro_rules! call_event_handler {$/;"	d
call_event_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    unsafe fn call_event_handler(&self, event: Event<'_, T>) {$/;"	f
call_new_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    unsafe fn call_new_events(&self, init: bool) {$/;"	f
call_redraw_events_cleared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    unsafe fn call_redraw_events_cleared(&self) {$/;"	f
can_become_key_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub extern "C" fn can_become_key_window(_: &Object, _: Sel) -> BOOL {$/;"	f
can_become_main_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub extern "C" fn can_become_main_window(_: &Object, _: Sel) -> BOOL {$/;"	f
cancel_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn cancel_operation(this: &Object, _sel: Sel, _sender: id) {$/;"	f
canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn canvas(&self) -> HtmlCanvasElement;$/;"	f
canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^    fn canvas(&self) -> HtmlCanvasElement {$/;"	f
canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn canvas(&self) -> Ref<'_, backend::Canvas> {$/;"	f
capture_mouse	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn capture_mouse(window: HWND, window_state: &mut WindowState) {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn cast<A: NoUninit, B: CheckedBitPattern>(a: A) -> B {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn cast<A: NoUninit, B: AnyBitPattern>(a: A) -> B {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn cast<P: Pixel>(self) -> P {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn cast<X: Pixel>(&self) -> LogicalPosition<X> {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn cast<X: Pixel>(&self) -> LogicalSize<X> {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn cast<X: Pixel>(&self) -> PhysicalPosition<X> {$/;"	f
cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn cast<X: Pixel>(&self) -> PhysicalSize<X> {$/;"	f
cast_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_arc<A: NoUninit + AnyBitPattern, B: NoUninit + AnyBitPattern>($/;"	f
cast_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_box<A: NoUninit, B: AnyBitPattern>(input: Box<A>) -> Box<B> {$/;"	f
cast_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn cast_mut<$/;"	f
cast_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn cast_mut<A: NoUninit + AnyBitPattern, B: NoUninit + AnyBitPattern>($/;"	f
cast_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_rc<A: NoUninit + AnyBitPattern, B: NoUninit + AnyBitPattern>($/;"	f
cast_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn cast_ref<A: NoUninit, B: CheckedBitPattern>(a: &A) -> &B {$/;"	f
cast_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn cast_ref<A: NoUninit, B: AnyBitPattern>(a: &A) -> &B {$/;"	f
cast_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn cast_slice<A: NoUninit, B: CheckedBitPattern>(a: &[A]) -> &[B] {$/;"	f
cast_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn cast_slice<A: NoUninit, B: AnyBitPattern>(a: &[A]) -> &[B] {$/;"	f
cast_slice_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_slice_arc<$/;"	f
cast_slice_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_slice_box<A: NoUninit, B: AnyBitPattern>($/;"	f
cast_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn cast_slice_mut<$/;"	f
cast_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn cast_slice_mut<$/;"	f
cast_slice_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_slice_rc<$/;"	f
cast_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn cast_vec<A: NoUninit, B: AnyBitPattern>(input: Vec<A>) -> Vec<B> {$/;"	f
catch_unwind	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn catch_unwind<R>(&self, f: impl FnOnce() -> R) -> Option<R> {$/;"	f
change_property	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^    pub fn change_property<'a, T: Formattable>($/;"	f
char_to_keycode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub fn char_to_keycode(c: char) -> Option<VirtualKeyCode> {$/;"	f
character_index_for_point	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn character_index_for_point(_this: &Object, _sel: Sel, _point: NSPoint) -> NSUInteger {$/;"	f
check_errors	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    pub fn check_errors(&self) -> Result<(), XError> {$/;"	f
check_function_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub fn check_function_keys(string: &str) -> Option<VirtualKeyCode> {$/;"	f
checked_add	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn checked_add(&self, duration: Duration) -> Option<Instant> {$/;"	f
checked_add	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn checked_add(&self, duration: Duration) -> Option<SystemTime> {$/;"	f
checked_duration_since	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn checked_duration_since(&self, earlier: Instant) -> Option<Duration> {$/;"	f
checked_sub	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn checked_sub(&self, duration: Duration) -> Option<Instant> {$/;"	f
checked_sub	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn checked_sub(&self, duration: Duration) -> Option<SystemTime> {$/;"	f
clamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn clamp<S: Into<Size>>(input: S, min: S, max: S, scale_factor: f64) -> Size {$/;"	f
classes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn classes(info: &ffi::XIDeviceInfo) -> &[*const ffi::XIAnyClassInfo] {$/;"	f
clear_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn clear_buffer($/;"	f
clear_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn clear_texture(&mut self, texture: &Texture, subresource_range: &ImageSubresourceRange) {$/;"	f
cleared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn cleared(panic_info: Weak<PanicInfo>) {$/;"	f
climb_hierarchy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    fn climb_hierarchy($/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn clone(&self) -> EventLoopProxy<T> {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn clone(&self) -> MonitorHandle {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn clone(&self) -> VideoMode {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/proxy.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    fn clone(&self) -> IdRef {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/proxy.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    fn clone(&self) -> Self {$/;"	f
close_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn close_async(ns_window: IdRef) {$/;"	f
close_im	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^pub unsafe fn close_im(xconn: &Arc<XConnection>, im: ffi::XIM) -> Result<(), XError> {$/;"	f
close_im_if_necessary	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^    pub unsafe fn close_im_if_necessary(&self) -> Result<bool, XError> {$/;"	f
cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    fn cmp(&self, other: &VideoMode) -> std::cmp::Ordering {$/;"	f
cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn cmp(&self, other: &Self) -> std::cmp::Ordering {$/;"	f
codepoint	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn codepoint(event: &KeyboardEvent) -> char {$/;"	f
com_initialized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^pub fn com_initialized() {$/;"	f
command_buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_buffer_drop(&self, command_buffer: &Self::CommandBufferId) {$/;"	f
command_buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_buffer_drop(&self, _command_buffer: &Self::CommandBufferId) {$/;"	f
command_buffer_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_buffer_drop(&self, command_buffer: &Self::CommandBufferId);$/;"	f
command_encoder_begin_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_begin_compute_pass($/;"	f
command_encoder_begin_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_begin_compute_pass($/;"	f
command_encoder_begin_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_begin_compute_pass($/;"	f
command_encoder_begin_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_begin_render_pass<'a>($/;"	f
command_encoder_begin_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_begin_render_pass<'a>($/;"	f
command_encoder_begin_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_begin_render_pass<'a>($/;"	f
command_encoder_clear_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_clear_buffer($/;"	f
command_encoder_clear_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_clear_buffer($/;"	f
command_encoder_clear_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_clear_buffer($/;"	f
command_encoder_clear_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_clear_texture($/;"	f
command_encoder_clear_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_clear_texture($/;"	f
command_encoder_clear_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_clear_texture($/;"	f
command_encoder_copy_buffer_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_copy_buffer_to_buffer($/;"	f
command_encoder_copy_buffer_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_copy_buffer_to_buffer($/;"	f
command_encoder_copy_buffer_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_copy_buffer_to_buffer($/;"	f
command_encoder_copy_buffer_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_copy_buffer_to_texture($/;"	f
command_encoder_copy_buffer_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_copy_buffer_to_texture($/;"	f
command_encoder_copy_buffer_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_copy_buffer_to_texture($/;"	f
command_encoder_copy_texture_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_copy_texture_to_buffer($/;"	f
command_encoder_copy_texture_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_copy_texture_to_buffer($/;"	f
command_encoder_copy_texture_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_copy_texture_to_buffer($/;"	f
command_encoder_copy_texture_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_copy_texture_to_texture($/;"	f
command_encoder_copy_texture_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_copy_texture_to_texture($/;"	f
command_encoder_copy_texture_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_copy_texture_to_texture($/;"	f
command_encoder_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_drop(&self, command_encoder: &Self::CommandEncoderId) {$/;"	f
command_encoder_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_drop(&self, _command_encoder: &Self::CommandEncoderId) {$/;"	f
command_encoder_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_drop(&self, command_encoder: &Self::CommandEncoderId);$/;"	f
command_encoder_end_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_end_compute_pass($/;"	f
command_encoder_end_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_end_compute_pass($/;"	f
command_encoder_end_compute_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_end_compute_pass($/;"	f
command_encoder_end_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_end_render_pass($/;"	f
command_encoder_end_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_end_render_pass($/;"	f
command_encoder_end_render_pass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_end_render_pass($/;"	f
command_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_finish(&self, mut encoder: Self::CommandEncoderId) -> Self::CommandBufferId {$/;"	f
command_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_finish(&self, encoder: Self::CommandEncoderId) -> Self::CommandBufferId {$/;"	f
command_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_finish(&self, encoder: Self::CommandEncoderId) -> Self::CommandBufferId;$/;"	f
command_encoder_insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_insert_debug_marker(&self, encoder: &Self::CommandEncoderId, label: &str) {$/;"	f
command_encoder_insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_insert_debug_marker(&self, _encoder: &Self::CommandEncoderId, _label: &str) {$/;"	f
command_encoder_insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_insert_debug_marker(&self, encoder: &Self::CommandEncoderId, label: &str);$/;"	f
command_encoder_pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_pop_debug_group(&self, encoder: &Self::CommandEncoderId) {$/;"	f
command_encoder_pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_pop_debug_group(&self, _encoder: &Self::CommandEncoderId) {$/;"	f
command_encoder_pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_pop_debug_group(&self, encoder: &Self::CommandEncoderId);$/;"	f
command_encoder_push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_push_debug_group(&self, encoder: &Self::CommandEncoderId, label: &str) {$/;"	f
command_encoder_push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_push_debug_group(&self, _encoder: &Self::CommandEncoderId, _label: &str) {$/;"	f
command_encoder_push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_push_debug_group(&self, encoder: &Self::CommandEncoderId, label: &str);$/;"	f
command_encoder_resolve_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_resolve_query_set($/;"	f
command_encoder_resolve_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_resolve_query_set($/;"	f
command_encoder_resolve_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_resolve_query_set($/;"	f
command_encoder_write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn command_encoder_write_timestamp($/;"	f
command_encoder_write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn command_encoder_write_timestamp($/;"	f
command_encoder_write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn command_encoder_write_timestamp($/;"	f
compute_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn compute_pipeline_drop(&self, pipeline: &Self::ComputePipelineId) {$/;"	f
compute_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn compute_pipeline_drop(&self, _pipeline: &Self::ComputePipelineId) {$/;"	f
compute_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn compute_pipeline_drop(&self, pipeline: &Self::ComputePipelineId);$/;"	f
compute_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn compute_pipeline_get_bind_group_layout($/;"	f
compute_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn compute_pipeline_get_bind_group_layout($/;"	f
compute_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn compute_pipeline_get_bind_group_layout($/;"	f
conclude_drag_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn conclude_drag_operation(_: &Object, _: Sel, _: id) {$/;"	f
config	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^    fn config(&self) -> Configuration {$/;"	f
config	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^    fn config(&self) -> Configuration;$/;"	f
config	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn config(&self) -> Configuration {$/;"	f
configure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn configure(&self, device: &Device, config: &SurfaceConfiguration) {$/;"	f
confine	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn confine(&self, surface: &WlSurface) {$/;"	f
contains_point	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn contains_point(&self, x: i64, y: i64) -> bool {$/;"	f
content_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^    fn content_rect(&self) -> Rect {$/;"	f
content_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/android.rs	/^    fn content_rect(&self) -> Rect;$/;"	f
content_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn content_rect(&self) -> Rect {$/;"	f
control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/state.rs	/^    pub fn control_flow(&self) -> ControlFlow {$/;"	f
control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn control_flow(&self) -> ControlFlow {$/;"	f
control_flow_begin_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^        extern "C" fn control_flow_begin_handler($/;"	f
control_flow_begin_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^extern "C" fn control_flow_begin_handler($/;"	f
control_flow_end_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^        extern "C" fn control_flow_end_handler($/;"	f
control_flow_end_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^extern "C" fn control_flow_end_handler($/;"	f
control_flow_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^unsafe fn control_flow_handler<F>(panic_info: *mut c_void, f: F)$/;"	f
control_flow_main_end_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^        extern "C" fn control_flow_main_end_handler($/;"	f
convert_selection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub unsafe fn convert_selection(&self, window: c_ulong, time: c_ulong) {$/;"	f
convert_to_bgra	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    fn convert_to_bgra(&mut self) {$/;"	f
copy_buffer_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn copy_buffer_to_buffer($/;"	f
copy_buffer_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn copy_buffer_to_texture($/;"	f
copy_external_image_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn copy_external_image_to_texture($/;"	f
copy_texture_to_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn copy_texture_to_buffer($/;"	f
copy_texture_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn copy_texture_to_texture($/;"	f
create	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn create(attr: PlatformSpecificWindowBuilderAttributes) -> Result<Self, RootOE> {$/;"	f
create_adapter_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn create_adapter_from_hal<A: wgc::hub::HalApi>($/;"	f
create_adapter_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_adapter_from_hal<A: wgc::hub::HalApi>($/;"	f
create_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_bind_group(&self, desc: &BindGroupDescriptor) -> BindGroup {$/;"	f
create_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_bind_group_layout(&self, desc: &BindGroupLayoutDescriptor) -> BindGroupLayout {$/;"	f
create_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_buffer(&self, desc: &BufferDescriptor) -> Buffer {$/;"	f
create_buffer_init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/device.rs	/^    fn create_buffer_init(&self, desc: &BufferInitDescriptor) -> crate::Buffer;$/;"	f
create_buffer_init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/device.rs	/^    fn create_buffer_init(&self, descriptor: &BufferInitDescriptor<'_>) -> crate::Buffer {$/;"	f
create_command_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_command_encoder(&self, desc: &CommandEncoderDescriptor) -> CommandEncoder {$/;"	f
create_compute_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_compute_pipeline(&self, desc: &ComputePipelineDescriptor) -> ComputePipeline {$/;"	f
create_context	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn create_context($/;"	f
create_delegate_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^pub fn create_delegate_class() {$/;"	f
create_device_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn create_device_from_hal<A: wgc::hub::HalApi>($/;"	f
create_device_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_device_from_hal<A: wgc::hub::HalApi>($/;"	f
create_empty_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    fn create_empty_cursor(&self) -> ffi::Cursor {$/;"	f
create_event_target_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn create_event_target_window<T: 'static>() -> HWND {$/;"	f
create_mql	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/scaling.rs	/^    fn create_mql($/;"	f
create_none_ic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    unsafe fn create_none_ic($/;"	f
create_nothing_ic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    unsafe fn create_nothing_ic($/;"	f
create_pipeline_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_pipeline_layout(&self, desc: &PipelineLayoutDescriptor) -> PipelineLayout {$/;"	f
create_preedit_ic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    unsafe fn create_preedit_ic($/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/mod.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn create_proxy(&self) -> EventLoopProxy<T> {$/;"	f
create_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_query_set(&self, desc: &QuerySetDescriptor) -> QuerySet {$/;"	f
create_render_bundle_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_render_bundle_encoder($/;"	f
create_render_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_render_pipeline(&self, desc: &RenderPipelineDescriptor) -> RenderPipeline {$/;"	f
create_sampler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_sampler(&self, desc: &SamplerDescriptor) -> Sampler {$/;"	f
create_shader_module	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_shader_module(&self, desc: ShaderModuleDescriptor) -> ShaderModule {$/;"	f
create_shader_module_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_shader_module_spirv($/;"	f
create_shader_module_unchecked	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_shader_module_unchecked($/;"	f
create_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_surface<$/;"	f
create_surface_from_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_surface_from_canvas(&self, canvas: &web_sys::HtmlCanvasElement) -> Surface {$/;"	f
create_surface_from_core_animation_layer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn create_surface_from_core_animation_layer($/;"	f
create_surface_from_core_animation_layer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_surface_from_core_animation_layer($/;"	f
create_surface_from_offscreen_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_surface_from_offscreen_canvas($/;"	f
create_surface_from_visual	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn create_surface_from_visual($/;"	f
create_surface_from_visual	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_surface_from_visual(&self, visual: *mut std::ffi::c_void) -> Surface {$/;"	f
create_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_texture(&self, desc: &TextureDescriptor) -> Texture {$/;"	f
create_texture_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn create_texture_from_hal<A: wgc::hub::HalApi>($/;"	f
create_texture_from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn create_texture_from_hal<A: wgc::hub::HalApi>($/;"	f
create_texture_with_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/device.rs	/^    fn create_texture_with_data($/;"	f
create_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn create_view(&self, desc: &TextureViewDescriptor) -> TextureView {$/;"	f
create_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^unsafe fn create_view($/;"	f
create_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^fn create_window($/;"	f
create_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    unsafe fn create_window(&self, window: HWND) -> Window {$/;"	f
create_window_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    unsafe fn create_window_data(&self, win: &Window) -> event_loop::WindowData<T> {$/;"	f
create_xim_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^fn create_xim_callback(client_data: ffi::XPointer, callback: XIMProcNonnull) -> ffi::XIMCallback {$/;"	f
ctrl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn ctrl(&self) -> bool {$/;"	f
current	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    pub unsafe fn current(hwnd: HWND) -> Self {$/;"	f
current_control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn current_control_flow(&self) -> ControlFlow {$/;"	f
current_input_source	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^unsafe fn current_input_source(view: *const Object) -> String {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn current_monitor(&self) -> Option<monitor::MonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn current_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn current_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn current_monitor(&self) -> Option<MonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn current_monitor(&self) -> X11MonitorHandle {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn current_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn current_monitor(&self) -> Option<RootMH> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^pub fn current_monitor(hwnd: HWND) -> MonitorHandle {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn current_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
current_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn current_monitor(&self) -> Option<MonitorHandle> {$/;"	f
current_monitor_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn current_monitor_inner(&self) -> RootMonitorHandle {$/;"	f
current_monitor_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    fn current_monitor_inner(&self) -> RootMH {$/;"	f
cursor_flags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn cursor_flags(&self) -> CursorFlags {$/;"	f
dealloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^extern "C" fn dealloc(this: &Object, _: Sel) {$/;"	f
dealloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn dealloc(this: &Object, _sel: Sel) {$/;"	f
dealloc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn dealloc(this: &Object, _sel: Sel) {$/;"	f
decode_wide	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn decode_wide(mut wide_c_string: &[u16]) -> OsString {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn default() -> ValidOrientations {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn default() -> PlatformSpecificWindowBuilderAttributes {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    fn default() -> EventLoopWaker {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn default() -> Self {$/;"	f
default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn default() -> WindowAttributes {$/;"	f
default_error_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^fn default_error_handler(err: crate::Error) {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^    fn deref(&self) -> &[u8] {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    fn deref(&self) -> &EventLoopWindowTarget<T> {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn deref(&self) -> &Inner {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn deref(&self) -> &Inner {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn deref(&self) -> &UnownedWindow {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^    fn deref(&self) -> &T {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    fn deref(&self) -> &id {$/;"	f
deref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn deref(&self) -> &Self::Target {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn deref_mut(&mut self) -> &mut Inner {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn deref_mut(&mut self) -> &mut Inner {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    fn deref_mut(&mut self) -> &mut T {$/;"	f
deref_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	f
desc	/Users/mart/code/wgpu_plot/src/lib.rs	/^    fn desc<'a>() -> wgpu::VertexBufferLayout<'a> {$/;"	f
description	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn description(&self) -> &'static str {$/;"	f
deserialize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn destroy(&self) {$/;"	f
destroy_all_contexts_if_necessary	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^    pub unsafe fn destroy_all_contexts_if_necessary(&self) -> Result<bool, XError> {$/;"	f
destroy_ic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^pub unsafe fn destroy_ic(xconn: &Arc<XConnection>, ic: ffi::XIC) -> Result<(), XError> {$/;"	f
destroy_ic_if_necessary	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^    pub unsafe fn destroy_ic_if_necessary(&self, ic: ffi::XIC) -> Result<bool, XError> {$/;"	f
device_as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn device_as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Device>) -> R, R>($/;"	f
device_create_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_bind_group($/;"	f
device_create_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_bind_group($/;"	f
device_create_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_bind_group($/;"	f
device_create_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_bind_group_layout($/;"	f
device_create_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_bind_group_layout($/;"	f
device_create_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_bind_group_layout($/;"	f
device_create_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_buffer($/;"	f
device_create_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_buffer($/;"	f
device_create_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_buffer($/;"	f
device_create_command_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_command_encoder($/;"	f
device_create_command_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_command_encoder($/;"	f
device_create_command_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_command_encoder($/;"	f
device_create_compute_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_compute_pipeline($/;"	f
device_create_compute_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_compute_pipeline($/;"	f
device_create_compute_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_compute_pipeline($/;"	f
device_create_pipeline_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_pipeline_layout($/;"	f
device_create_pipeline_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_pipeline_layout($/;"	f
device_create_pipeline_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_pipeline_layout($/;"	f
device_create_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_query_set($/;"	f
device_create_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_query_set($/;"	f
device_create_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_query_set($/;"	f
device_create_render_bundle_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_render_bundle_encoder($/;"	f
device_create_render_bundle_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_render_bundle_encoder($/;"	f
device_create_render_bundle_encoder	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_render_bundle_encoder($/;"	f
device_create_render_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_render_pipeline($/;"	f
device_create_render_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_render_pipeline($/;"	f
device_create_render_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_render_pipeline($/;"	f
device_create_sampler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_sampler($/;"	f
device_create_sampler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_sampler($/;"	f
device_create_sampler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_sampler($/;"	f
device_create_shader_module	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_shader_module($/;"	f
device_create_shader_module	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_shader_module($/;"	f
device_create_shader_module	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_shader_module($/;"	f
device_create_shader_module_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    unsafe fn device_create_shader_module_spirv($/;"	f
device_create_shader_module_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    unsafe fn device_create_shader_module_spirv($/;"	f
device_create_shader_module_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    unsafe fn device_create_shader_module_spirv($/;"	f
device_create_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_create_texture($/;"	f
device_create_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_create_texture($/;"	f
device_create_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_create_texture($/;"	f
device_downlevel_properties	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_downlevel_properties(&self, device: &Self::DeviceId) -> DownlevelCapabilities {$/;"	f
device_downlevel_properties	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_downlevel_properties(&self, _device: &Self::DeviceId) -> wgt::DownlevelCapabilities {$/;"	f
device_downlevel_properties	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_downlevel_properties(&self, device: &Self::DeviceId) -> DownlevelCapabilities;$/;"	f
device_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_drop(&self, device: &Self::DeviceId) {$/;"	f
device_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_drop(&self, _device: &Self::DeviceId) {$/;"	f
device_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_drop(&self, device: &Self::DeviceId);$/;"	f
device_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_features(&self, device: &Self::DeviceId) -> Features {$/;"	f
device_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_features(&self, _device: &Self::DeviceId) -> wgt::Features {$/;"	f
device_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_features(&self, device: &Self::DeviceId) -> Features;$/;"	f
device_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_limits(&self, device: &Self::DeviceId) -> Limits {$/;"	f
device_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_limits(&self, _device: &Self::DeviceId) -> wgt::Limits {$/;"	f
device_limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_limits(&self, device: &Self::DeviceId) -> Limits;$/;"	f
device_on_uncaptured_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_on_uncaptured_error($/;"	f
device_on_uncaptured_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_on_uncaptured_error($/;"	f
device_on_uncaptured_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_on_uncaptured_error($/;"	f
device_poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_poll(&self, device: &Self::DeviceId, maintain: crate::Maintain) -> bool {$/;"	f
device_poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_poll(&self, _device: &Self::DeviceId, _maintain: crate::Maintain) -> bool {$/;"	f
device_poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_poll(&self, device: &Self::DeviceId, maintain: Maintain) -> bool;$/;"	f
device_pop_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_pop_error_scope(&self, device: &Self::DeviceId) -> Self::PopErrorScopeFuture {$/;"	f
device_pop_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_pop_error_scope(&self, device: &Self::DeviceId) -> Self::PopErrorScopeFuture {$/;"	f
device_pop_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_pop_error_scope(&self, device: &Self::DeviceId) -> Self::PopErrorScopeFuture;$/;"	f
device_push_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_push_error_scope(&self, device: &Self::DeviceId, filter: crate::ErrorFilter) {$/;"	f
device_push_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_push_error_scope(&self, device: &Self::DeviceId, filter: crate::ErrorFilter) {$/;"	f
device_push_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_push_error_scope(&self, device: &Self::DeviceId, filter: ErrorFilter);$/;"	f
device_start_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_start_capture(&self, device: &Self::DeviceId) {$/;"	f
device_start_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_start_capture(&self, _device: &Self::DeviceId) {}$/;"	f
device_start_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_start_capture(&self, device: &Self::DeviceId);$/;"	f
device_stop_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn device_stop_capture(&self, device: &Self::DeviceId) {$/;"	f
device_stop_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn device_stop_capture(&self, _device: &Self::DeviceId) {}$/;"	f
device_stop_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn device_stop_capture(&self, device: &Self::DeviceId);$/;"	f
did_become_active	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn did_become_active(_: &Object, _: Sel, _: id) {$/;"	f
did_enter_background	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn did_enter_background(_: &Object, _: Sel, _: id) {}$/;"	f
did_finish_launching	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn did_finish_launching() {$/;"	f
did_finish_launching	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn did_finish_launching(_: &mut Object, _: Sel, _: id, _: id) -> BOOL {$/;"	f
did_finish_launching	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^extern "C" fn did_finish_launching(this: &Object, _: Sel, _: id) {$/;"	f
did_finish_launching_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn did_finish_launching_transition(&mut self) -> (Vec<id>, Vec<EventWrapper>) {$/;"	f
dispatch_buffered_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    unsafe fn dispatch_buffered_events(&self) {$/;"	f
dispatch_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn dispatch_event(self, dispatch: impl FnOnce(Event<'_, T>)) {$/;"	f
dispatch_workgroups	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn dispatch_workgroups(&mut self, x: u32, y: u32, z: u32) {$/;"	f
dispatch_workgroups	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn dispatch_workgroups(&mut self, x: u32, y: u32, z: u32) {$/;"	f
dispatch_workgroups	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn dispatch_workgroups(&mut self, x: u32, y: u32, z: u32);$/;"	f
dispatch_workgroups	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn dispatch_workgroups(&mut self, x: u32, y: u32, z: u32) {$/;"	f
dispatch_workgroups_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn dispatch_workgroups_indirect($/;"	f
dispatch_workgroups_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn dispatch_workgroups_indirect($/;"	f
dispatch_workgroups_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn dispatch_workgroups_indirect($/;"	f
dispatch_workgroups_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn dispatch_workgroups_indirect($/;"	f
display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn display(&self) -> &Display {$/;"	f
display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn display(&self) -> &Display {$/;"	f
do_command_by_selector	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn do_command_by_selector(this: &Object, _sel: Sel, _command: Sel) {$/;"	f
dpi_to_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub fn dpi_to_scale_factor(dpi: u32) -> f64 {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn drag_window(&self) -> Result<(), error::ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn drag_window(&self, window: &Window<WinitFrame>) {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn drag_window(&self) {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
drag_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn drag_window(&self) -> Result<(), ExternalError> {$/;"	f
dragging_entered	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn dragging_entered(this: &Object, _: Sel, sender: id) -> BOOL {$/;"	f
dragging_exited	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn dragging_exited(this: &Object, _: Sel, _: id) {$/;"	f
drain_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn drain_events<F>(&mut self, callback: &mut F, control_flow: &mut ControlFlow)$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>) {$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>) {$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>);$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>) {$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>) {$/;"	f
draw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw(&mut self, vertices: Range<u32>, instances: Range<u32>);$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>) {$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>) {$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>);$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>) {$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>) {$/;"	f
draw_indexed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw_indexed(&mut self, indices: Range<u32>, base_vertex: i32, instances: Range<u32>);$/;"	f
draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn draw_indexed_indirect($/;"	f
draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn draw_indexed_indirect($/;"	f
draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn draw_indexed_indirect($/;"	f
draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn draw_indexed_indirect($/;"	f
draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw_indexed_indirect($/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn draw_indirect($/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn draw_indirect($/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn draw_indirect(&mut self, indirect_buffer: &Ctx::BufferId, indirect_offset: BufferAddress);$/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn draw_indirect(&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress) {$/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw_indirect(&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress) {$/;"	f
draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn draw_indirect(&mut self, indirect_buffer: &'a Buffer, indirect_offset: BufferAddress);$/;"	f
draw_line	/Users/mart/code/wgpu_plot/src/lib.rs	/^pub fn draw_line(points: Vec<[f32; 2]>) -> (Vec<Vertex>, Vec<u16>) {$/;"	f
draw_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn draw_rect(object: &Object, _: Sel, rect: CGRect) {$/;"	f
draw_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn draw_rect(this: &Object, _sel: Sel, rect: NSRect) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/touch/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event_handle.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/media_query_handle.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/timeout.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    fn drop(&mut self) {$/;"	f
drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn drop(&mut self) {$/;"	f
dummy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn dummy() -> Self {$/;"	f
dur2timeout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn dur2timeout(dur: Duration) -> u32 {$/;"	f
duration_from_f64	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^fn duration_from_f64(millis: f64) -> Duration {$/;"	f
duration_since	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn duration_since(&self, earlier: Instant) -> Duration {$/;"	f
duration_since	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn duration_since(&self, earlier: SystemTime) -> Result<Duration, ()> {$/;"	f
elapsed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn elapsed(&self) -> Duration {$/;"	f
elapsed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn elapsed(&self) -> Result<Duration, ()> {$/;"	f
emit_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    pub fn emit_event(&mut self, event: WindowEvent<'static>) {$/;"	f
emit_move_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    fn emit_move_event(&mut self) {$/;"	f
emit_static_scale_factor_changed_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    pub fn emit_static_scale_factor_changed_event(&mut self) {$/;"	f
enable_non_client_dpi_scaling	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub fn enable_non_client_dpi_scaling(hwnd: HWND) {$/;"	f
encode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn encode() -> Encoding {$/;"	f
encode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    fn encode() -> objc::Encoding {$/;"	f
encode_wide	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn encode_wide(string: impl AsRef<OsStr>) -> Vec<u16> {$/;"	f
end_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn end_pipeline_statistics_query(&mut self) {$/;"	f
end_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn end_pipeline_statistics_query(&mut self) {$/;"	f
end_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn end_pipeline_statistics_query(&mut self);$/;"	f
end_pipeline_statistics_query	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn end_pipeline_statistics_query(&mut self) {$/;"	f
enumerate_adapters	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub fn enumerate_adapters(&self, backends: wgt::Backends) -> Vec<wgc::id::AdapterId> {$/;"	f
enumerate_adapters	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn enumerate_adapters(&self, backends: Backends) -> impl Iterator<Item = Adapter> {$/;"	f
eq	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
eq	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	f
event_loop_proxy_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^            extern "C" fn event_loop_proxy_handler(_: *mut c_void) {}$/;"	f
event_loop_proxy_handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^            extern "C" fn event_loop_proxy_handler(_: *mut c_void) {}$/;"	f
event_mods	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub fn event_mods(event: id) -> ModifiersState {$/;"	f
events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn events(&self) -> MutexGuard<'_, VecDeque<EventWrapper>> {$/;"	f
events_cleared_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn events_cleared_transition(&mut self) {$/;"	f
execute_bundles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn execute_bundles<'a, I: Iterator<Item = &'a wgc::id::RenderBundleId>>($/;"	f
execute_bundles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn execute_bundles<'a, I: Iterator<Item = &'a Sendable<web_sys::GpuRenderBundle>>>($/;"	f
execute_bundles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn execute_bundles<'a, I: Iterator<Item = &'a Ctx::RenderBundleId>>($/;"	f
execute_bundles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn execute_bundles<I: IntoIterator<Item = &'a RenderBundle>>(&mut self, render_bundles: I) {$/;"	f
exit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn exit() -> i32 {$/;"	f
exit_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn exit_fullscreen() {$/;"	f
features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn features(&self) -> Features {$/;"	f
filter_out_altgr	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^    pub fn filter_out_altgr(&self) -> ModifiersStateSide {$/;"	f
finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn finish(mut self) -> CommandBuffer {$/;"	f
finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn finish(self, desc: &RenderBundleDescriptor) -> RenderBundle {$/;"	f
finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    pub fn finish(&mut self) {$/;"	f
first_bit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^fn first_bit(b: u8) -> u8 {$/;"	f
first_rect_for_character_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn first_rect_for_character_range($/;"	f
flags_changed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn flags_changed(this: &Object, _sel: Sel, event: id) {$/;"	f
flush	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn flush(self) -> Result<(), XError> {$/;"	f
flush_paint_messages	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn flush_paint_messages<T: 'static>($/;"	f
flush_requests	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn flush_requests(&self) -> Result<(), XError> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^  fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    fn fmt(&self, fmt: &mut Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn fmt(&self, _f: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	f
fmt	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn fmt(&self, fmtr: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub const fn new(width: P, height: P) -> Self {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub const fn new(x: P, y: P) -> Self {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub const fn dummy() -> Self {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const fn get_x_lparam(x: u32) -> i16 {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const fn get_xbutton_wparam(x: u32) -> u16 {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const fn get_y_lparam(x: u32) -> i16 {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const fn hiword(x: u32) -> u16 {$/;"	c
fn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^const fn loword(x: u32) -> u16 {$/;"	c
focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub fn focus(&self, xconn: &Arc<XConnection>) -> Result<(), XError> {$/;"	f
focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn focus(&mut self, window: ffi::Window) -> Result<bool, XError> {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn focus_window(&self) {}$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn focus_window(&self) {$/;"	f
focus_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn focus_window(&self) {$/;"	f
force_window_active	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^unsafe fn force_window_active(handle: HWND) {$/;"	f
format_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn format_error(&self, err: &(impl Error + 'static)) -> String {$/;"	f
frame_did_change	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn frame_did_change(this: &Object, _sel: Sel, _event: id) {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  fn from(err: crate::PodCastError) -> CheckedCastError {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from((x, y): (X, X)) -> LogicalPosition<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from((x, y): (X, X)) -> LogicalSize<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from((x, y): (X, X)) -> PhysicalPosition<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from((x, y): (X, X)) -> PhysicalSize<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from([x, y]: [X; 2]) -> LogicalPosition<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from([x, y]: [X; 2]) -> LogicalSize<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from([x, y]: [X; 2]) -> PhysicalPosition<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from([x, y]: [X; 2]) -> PhysicalSize<P> {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: LogicalPosition<P>) -> (X, X) {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: LogicalPosition<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: LogicalPosition<P>) -> [X; 2] {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: PhysicalPosition<P>) -> (X, X) {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: PhysicalPosition<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: PhysicalPosition<P>) -> [X; 2] {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(p: mint::Point2<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(position: LogicalPosition<P>) -> Position {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(position: PhysicalPosition<P>) -> Position {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: LogicalSize<P>) -> (X, X) {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: LogicalSize<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: LogicalSize<P>) -> [X; 2] {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: PhysicalSize<P>) -> (X, X) {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: PhysicalSize<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(s: PhysicalSize<P>) -> [X; 2] {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(size: LogicalSize<P>) -> Size {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(size: PhysicalSize<P>) -> Size {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from(v: mint::Vector2<P>) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    fn from(_: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    fn from(_: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^            fn from(os_version: NSOperatingSystemVersion) -> OSCapabilities {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn from(idiom: Idiom) -> UIUserInterfaceIdiom {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn from(screen_edge: ScreenEdge) -> UIRectEdge {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn from(ui_idiom: UIUserInterfaceIdiom) -> Idiom {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    fn from(ui_rect_edge: UIRectEdge) -> ScreenEdge {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn from(window: &Object) -> WindowId {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn from(window: &mut Object) -> WindowId {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn from(window: id) -> WindowId {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/mod.rs	/^    fn from(mods: keyboard::ModifiersState) -> ModifiersState {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    fn from(theme: Theme) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    fn from(e: Utf8Error) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    fn from(e: io::Error) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    fn from(op: bool) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn from(err: ffi::OpenError) -> XNotSupported {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^    fn from(cursor: CursorIcon) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn from(attribs: WindowAttributes) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^    fn from(side: ModifiersStateSide) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^    fn from(info: RID_DEVICE_INFO) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn from(raw_id: u64) -> Self {$/;"	f
from	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn from(window_id: WindowId) -> Self {$/;"	f
from_border	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn from_border(border: c_ulong) -> Self {$/;"	f
from_bytes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn from_bytes<T: CheckedBitPattern>(s: &[u8]) -> &T {$/;"	f
from_bytes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn from_bytes<T: AnyBitPattern>(s: &[u8]) -> &T {$/;"	f
from_bytes_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn from_bytes_mut<T: NoUninit + CheckedBitPattern>(s: &mut [u8]) -> &mut T {$/;"	f
from_bytes_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn from_bytes_mut<T: NoUninit + AnyBitPattern>(s: &mut [u8]) -> &mut T {$/;"	f
from_core	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn from_core(core_instance: wgc::instance::Instance) -> Self {$/;"	f
from_core_instance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn from_core_instance(core_instance: wgc::instance::Instance) -> Self {$/;"	f
from_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn from_event(xconn: &XConnection, event: ffi::XEvent) -> Option<GenericEventCookie<'_>> {$/;"	f
from_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn from_event(event: Event<'_, T>) -> BufferedEvent<T> {$/;"	f
from_f64	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from_f64(f: f64) -> Self {$/;"	f
from_f64	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    fn from_f64(f: f64) -> Self;$/;"	f
from_format	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    pub fn from_format(format: usize) -> Option<Self> {$/;"	f
from_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub unsafe fn from_hal<A: wgc::hub::HalApi>(hal_instance: A::Instance) -> Self {$/;"	f
from_hal_instance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn from_hal_instance<A: wgc::hub::HalApi>(hal_instance: A::Instance) -> Self {$/;"	f
from_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    fn from_handle(handle: HICON) -> Self {$/;"	f
from_integer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^  fn from_integer(value: Self::Int) -> Option<Self> {$/;"	f
from_interface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^    unsafe fn from_interface<'a, InterfaceT>(this: *mut InterfaceT) -> &'a mut FileDropHandlerData {$/;"	f
from_js	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn from_js(js_error: js_sys::Object) -> Self {$/;"	f
from_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn from_logical<T: Into<LogicalPosition<X>>, X: Pixel>($/;"	f
from_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn from_logical<T: Into<LogicalSize<X>>, X: Pixel>(logical: T, scale_factor: f64) -> Self {$/;"	f
from_path	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn from_path<P: AsRef<Path>>($/;"	f
from_path	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn from_path<P: AsRef<Path>>(path: P, size: Option<PhysicalSize<u32>>)$/;"	f
from_path	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    pub fn from_path<P: AsRef<Path>>($/;"	f
from_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn from_physical<T: Into<PhysicalPosition<X>>, X: Pixel>($/;"	f
from_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn from_physical<T: Into<PhysicalSize<X>>, X: Pixel>($/;"	f
from_recv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn from_recv(recv: Receiver<T>) -> Self {$/;"	f
from_resource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn from_resource(ordinal: u16, size: Option<PhysicalSize<u32>>) -> Result<Self, BadIcon> {$/;"	f
from_resource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn from_resource(ordinal: u16, size: Option<PhysicalSize<u32>>) -> Result<Self, BadIcon>;$/;"	f
from_resource	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    pub fn from_resource($/;"	f
from_rgba	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^        pub fn from_rgba(rgba: Vec<u8>, width: u32, height: u32) -> Result<Self, BadIcon> {$/;"	f
from_rgba	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^    pub fn from_rgba(rgba: Vec<u8>, width: u32, height: u32) -> Result<Self, BadIcon> {$/;"	f
from_rgba	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    pub fn from_rgba(rgba: Vec<u8>, width: u32, height: u32) -> Result<Self, BadIcon> {$/;"	f
from_str	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn from_str(string: &str) -> Self {$/;"	f
from_string	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn from_string(string: String) -> Self {$/;"	f
from_valid_orientations_idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn from_valid_orientations_idiom($/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn fullscreen(&self) -> Option<window::Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn fullscreen(&self) -> Option<Fullscreen> {$/;"	f
future_pop_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn future_pop_error_scope(result: JsFutureResult) -> Option<crate::Error> {$/;"	f
future_request_adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn future_request_adapter(result: JsFutureResult) -> Option<Sendable<web_sys::GpuAdapter>> {$/;"	f
future_request_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn future_request_device($/;"	f
gain_active_focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn gain_active_focus<T>(window: HWND, userdata: &WindowData<T>) {$/;"	f
generate_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn generate_id(&self) -> u32 {$/;"	f
generate_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn generate_id(&self) -> WindowId {$/;"	f
generate_report	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub fn generate_report(&self) -> wgc::hub::GlobalReport {$/;"	f
generate_report	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn generate_report(&self) -> wgc::hub::GlobalReport {$/;"	f
get	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn get(xconn: &'a XConnection, device: c_int) -> Option<Self> {$/;"	f
get	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    unsafe fn get() -> Self {$/;"	f
get_actual_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/format.rs	/^    pub fn get_actual_size(&self) -> usize {$/;"	f
get_atom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/atom.rs	/^    pub fn get_atom<T: AsRef<CStr> + Debug>(&self, name: T) -> ffi::Atom {$/;"	f
get_atom_unchecked	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/atom.rs	/^    pub unsafe fn get_atom_unchecked(&self, name: &[u8]) -> ffi::Atom {$/;"	f
get_atoms	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/atom.rs	/^    pub unsafe fn get_atoms(&self, names: &[*mut c_char]) -> Result<Vec<ffi::Atom>, XError> {$/;"	f
get_aux_state_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^pub unsafe fn get_aux_state_mut(this: &Object) -> RefMut<'_, AuxDelegateState> {$/;"	f
get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_bind_group_layout(&self, index: u32) -> BindGroupLayout {$/;"	f
get_char	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^unsafe fn get_char(keyboard_state: &[u8; 256], v_key: u32, hkl: HKL) -> Option<char> {$/;"	f
get_characters	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn get_characters(event: id, ignore_modifiers: bool) -> String {$/;"	f
get_code	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^    fn get_code(ev: id, raw: bool) -> Option<VirtualKeyCode> {$/;"	f
get_composed_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    pub unsafe fn get_composed_text(&self) -> Option<String> {$/;"	f
get_composing_text_and_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    pub unsafe fn get_composing_text_and_cursor($/;"	f
get_composition_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    unsafe fn get_composition_cursor(&self, text: &str) -> Option<usize> {$/;"	f
get_composition_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    unsafe fn get_composition_data(&self, gcs_mode: u32) -> Option<Vec<u8>> {$/;"	f
get_composition_string	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    unsafe fn get_composition_string(&self, gcs_mode: u32) -> Option<String> {$/;"	f
get_context	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn get_context(&self, window: ffi::Window) -> Option<ffi::XIC> {$/;"	f
get_control_flow_and_update_prev	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn get_control_flow_and_update_prev(&self) -> ControlFlow {$/;"	f
get_crtc_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^    pub fn get_crtc_mode(&self, crtc_id: RRCrtc) -> RRMode {$/;"	f
get_current_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_current_texture(&self) -> Result<SurfaceTexture, SurfaceError> {$/;"	f
get_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    fn get_cursor(&self, cursor: Option<CursorIcon>) -> ffi::Cursor {$/;"	f
get_cursor_clip	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn get_cursor_clip() -> Result<RECT, io::Error> {$/;"	f
get_desktop_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn get_desktop_rect() -> RECT {$/;"	f
get_downlevel_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_downlevel_capabilities(&self) -> DownlevelCapabilities {$/;"	f
get_frame_extents	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    fn get_frame_extents(&self, window: ffi::Window) -> Option<FrameExtents> {$/;"	f
get_frame_extents_heuristic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn get_frame_extents_heuristic($/;"	f
get_function	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^macro_rules! get_function {$/;"	d
get_geometry	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn get_geometry(&self, window: ffi::Window) -> Result<Geometry, XError> {$/;"	f
get_idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^pub unsafe fn get_idiom() -> Idiom {$/;"	f
get_in_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn get_in_callback(&self) -> bool {$/;"	f
get_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_info(&self) -> AdapterInfo {$/;"	f
get_instance_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn get_instance_handle() -> HINSTANCE {$/;"	f
get_key_mods	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^pub fn get_key_mods() -> ModifiersState {$/;"	f
get_mapped_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_mapped_range(&self) -> BufferView<'a> {$/;"	f
get_mapped_range_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_mapped_range_mut(&self) -> BufferViewMut<'a> {$/;"	f
get_modifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn get_modifier(&self, keycode: ffi::KeyCode) -> Option<Modifier> {$/;"	f
get_modifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^fn get_modifier(state: &ModifiersState, modifier: Modifier) -> bool {$/;"	f
get_modifier_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    pub fn get_modifier_state(&self) -> ModifiersState {$/;"	f
get_monitor_dpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub fn get_monitor_dpi(hmonitor: HMONITOR) -> Option<u32> {$/;"	f
get_monitor_for_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn get_monitor_for_window(&self, window_rect: Option<util::AaRect>) -> MonitorHandle {$/;"	f
get_motif_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn get_motif_hints(&self, window: ffi::Window) -> MotifHints {$/;"	f
get_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    unsafe fn get_mut() -> RefMut<'static, AppState> {$/;"	f
get_normal_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn get_normal_hints(&self, window: ffi::Window) -> Result<NormalHints<'_>, XError> {$/;"	f
get_old_and_new_control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn get_old_and_new_control_flow(&self) -> (ControlFlow, ControlFlow) {$/;"	f
get_output_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^    pub unsafe fn get_output_info($/;"	f
get_overlapping_area	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn get_overlapping_area(&self, other: &Self) -> i64 {$/;"	f
get_parent_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    fn get_parent_window(&self, window: ffi::Window) -> Result<ffi::Window, XError> {$/;"	f
get_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn get_position(&self) -> Option<(i32, i32)> {$/;"	f
get_pressed_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^pub fn get_pressed_keys() -> impl Iterator<Item = VIRTUAL_KEY> {$/;"	f
get_property	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^    pub fn get_property<T: Formattable>($/;"	f
get_raw_input_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn get_raw_input_data(handle: HRAWINPUT) -> Option<RAWINPUT> {$/;"	f
get_raw_input_device_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn get_raw_input_device_info(handle: HANDLE) -> Option<RawDeviceInfo> {$/;"	f
get_raw_input_device_list	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn get_raw_input_device_list() -> Option<Vec<RAWINPUTDEVICELIST>> {$/;"	f
get_raw_input_device_name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn get_raw_input_device_name(handle: HANDLE) -> Option<String> {$/;"	f
get_raw_mouse_button_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn get_raw_mouse_button_state(button_flags: u32) -> [Option<ElementState>; 3] {$/;"	f
get_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^    pub fn get_rect(self, hwnd: HWND) -> Result<RECT, io::Error> {$/;"	f
get_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^    fn get_scale_factor(&self) -> f64 {$/;"	f
get_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    fn get_scale_factor(&self) -> f64 {$/;"	f
get_scancode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub fn get_scancode(event: cocoa::base::id) -> c_ushort {$/;"	f
get_shell	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    fn get_shell(&self) -> Option<Shell> {$/;"	f
get_start_time	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn get_start_time(&self) -> Option<Instant> {$/;"	f
get_supported_alpha_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_supported_alpha_modes(&self, adapter: &Adapter) -> Vec<CompositeAlphaMode> {$/;"	f
get_supported_formats	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_supported_formats(&self, adapter: &Adapter) -> Vec<TextureFormat> {$/;"	f
get_supported_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^    fn get_supported_hints(&self, root: ffi::Window) -> Vec<ffi::Atom> {$/;"	f
get_supported_present_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_supported_present_modes(&self, adapter: &Adapter) -> Vec<PresentMode> {$/;"	f
get_texture_format_features	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_texture_format_features(&self, format: TextureFormat) -> TextureFormatFeatures {$/;"	f
get_time	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^fn get_time() -> f64 {$/;"	f
get_timestamp_period	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn get_timestamp_period(&self) -> f32 {$/;"	f
get_type_list	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub unsafe fn get_type_list($/;"	f
get_view_and_screen_frame	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^fn get_view_and_screen_frame(window_id: id) -> (id, CGRect) {$/;"	f
get_view_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^unsafe fn get_view_class(root_view_class: &'static Class) -> &'static Class {$/;"	f
get_view_controller_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^unsafe fn get_view_controller_class() -> &'static Class {$/;"	f
get_wait_thread_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn get_wait_thread_id() -> u32 {$/;"	f
get_window_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^unsafe fn get_window_class() -> &'static Class {$/;"	f
get_window_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^pub fn get_window_id(window_cocoa_id: id) -> WindowId {$/;"	f
get_window_long	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^unsafe fn get_window_long(hwnd: HWND, nindex: WINDOW_LONG_PTR_INDEX) -> isize {$/;"	f
get_wm_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn get_wm_hints($/;"	f
get_wm_name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^    fn get_wm_name(&self, root: ffi::Window) -> Option<String> {$/;"	f
get_xft_dpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^    pub unsafe fn get_xft_dpi(&self) -> Option<f64> {$/;"	f
get_xim_servers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^unsafe fn get_xim_servers(xconn: &Arc<XConnection>) -> Result<Vec<String>, GetXimServersError> {$/;"	f
handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn handle(&self) -> OutputManagerHandle {$/;"	f
handle_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn handle_error($/;"	f
handle_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn handle_error(&mut self, err: crate::Error) {$/;"	f
handle_error_fatal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn handle_error_fatal($/;"	f
handle_error_nolabel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn handle_error_nolabel($/;"	f
handle_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn handle_event(&self, event: Event<'static, T>, control: &mut ControlFlow) {$/;"	f
handle_event_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^fn handle_event_proxy($/;"	f
handle_events_cleared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn handle_events_cleared() {$/;"	f
handle_extended_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^pub fn handle_extended_keys($/;"	f
handle_hidpi_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^fn handle_hidpi_proxy($/;"	f
handle_loop_destroyed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn handle_loop_destroyed(&self, control: &mut ControlFlow) {$/;"	f
handle_main_events_cleared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn handle_main_events_cleared() {$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn handle_nonuser_event(event: EventWrapper) {$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn handle_nonuser_event(&mut self, event: Event<'_, Never>, control_flow: &mut ControlFlow) {$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn handle_nonuser_event(&mut self, event: Event<'_, Never>, control_flow: &mut ControlFlow);$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_nonuser_event(&mut self, event: Event<'_, Never>, control_flow: &mut ControlFlow) {$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_nonuser_event(&mut self, event: Event<'_, Never>, control_flow: &mut ControlFlow);$/;"	f
handle_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_nonuser_event(&self, wrapper: EventWrapper) {$/;"	f
handle_nonuser_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn handle_nonuser_events<I: IntoIterator<Item = EventWrapper>>(events: I) {$/;"	f
handle_pressed_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^    fn handle_pressed_keys<F>($/;"	f
handle_proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_proxy(&self, proxy: EventProxy, callback: &mut Box<dyn EventHandler + 'static>) {$/;"	f
handle_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn handle_redraw(window_id: WindowId) {$/;"	f
handle_scale_changed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn handle_scale_changed(&self, old_scale: f64, new_scale: f64) {$/;"	f
handle_scale_factor_changed_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_scale_factor_changed_event($/;"	f
handle_single_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn handle_single_event(&mut self, event: Event<'_, T>, control: &mut ControlFlow) {$/;"	f
handle_single_event_sync	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn handle_single_event_sync(&self, event: Event<'_, T>, control: &mut ControlFlow) {$/;"	f
handle_touches	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn handle_touches(object: &Object, _: Sel, touches: id, _: id) {$/;"	f
handle_unload	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn handle_unload(&self) {$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^unsafe fn handle_user_events() {$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn handle_user_events(&mut self, control_flow: &mut ControlFlow) {$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn handle_user_events(&mut self, control_flow: &mut ControlFlow);$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_user_events(&mut self, control_flow: &mut ControlFlow) {$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_user_events(&mut self, control_flow: &mut ControlFlow);$/;"	f
handle_user_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn handle_user_events(&self) {$/;"	f
handle_wakeup_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn handle_wakeup_transition() {$/;"	f
handle_window_requests	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^pub fn handle_window_requests(winit_state: &mut WinitState) {$/;"	f
handler	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/scaling.rs	/^    fn handler(&mut self, event: MediaQueryListEvent) {$/;"	f
handling_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn handling_events(&self) -> bool {$/;"	f
has_active_focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn has_active_focus(&self) -> bool {$/;"	f
has_flag	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^pub fn has_flag<T>(bitset: T, flag: T) -> bool$/;"	f
has_flag	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub fn has_flag<T>(bitset: T, flag: T) -> bool$/;"	f
has_flag	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn has_flag<T>(bitset: T, flag: T) -> bool$/;"	f
has_incoming	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn has_incoming(&mut self) -> bool {$/;"	f
has_launched	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn has_launched(&self) -> bool {$/;"	f
has_marked_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn has_marked_text(this: &Object, _sel: Sel) -> BOOL {$/;"	f
has_pointer_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^fn has_pointer_event() -> bool {$/;"	f
has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn has_shadow(&self) -> bool {$/;"	f
has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn has_shadow(&self) -> bool;$/;"	f
has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn has_shadow(&self) -> bool {$/;"	f
hash	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	f
hash	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    fn hash<H: std::hash::Hasher>(&self, state: &mut H) {$/;"	f
hide_application	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn hide_application(&self) {$/;"	f
hide_application	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn hide_application(&self);$/;"	f
hide_other_applications	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn hide_other_applications(&self) {$/;"	f
hide_other_applications	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn hide_other_applications(&self);$/;"	f
hinstance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hinstance(&self) -> HINSTANCE {$/;"	f
hinstance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hinstance(&self) -> HINSTANCE;$/;"	f
hinstance	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn hinstance(&self) -> HINSTANCE {$/;"	f
hint_is_supported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^pub fn hint_is_supported(hint: ffi::Atom) -> bool {$/;"	f
hmonitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hmonitor(&self) -> HMONITOR {$/;"	f
hmonitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hmonitor(&self) -> HMONITOR;$/;"	f
hmonitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn hmonitor(&self) -> HMONITOR {$/;"	f
hwnd	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hwnd(&self) -> HWND {$/;"	f
hwnd	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn hwnd(&self) -> HWND;$/;"	f
hwnd	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn hwnd(&self) -> HWND {$/;"	f
hwnd_dpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dpi.rs	/^pub unsafe fn hwnd_dpi(hwnd: HWND) -> u32 {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub type id = *mut Object;$/;"	T
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn id(&self) -> WindowId {$/;"	f
id_to_string_lossy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn id_to_string_lossy(string: id) -> String {$/;"	f
idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn idiom(&self) -> Idiom {$/;"	f
idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn idiom(&self) -> Idiom;$/;"	f
idiom	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn idiom(&self) -> Idiom {$/;"	f
ignore_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    pub fn ignore_error(&self) {$/;"	f
impl_contiguous	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^macro_rules! impl_contiguous {$/;"	d
impl_unsafe_marker_for_array	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^macro_rules! impl_unsafe_marker_for_array {$/;"	d
include_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/macros.rs	/^macro_rules! include_spirv {$/;"	d
include_spirv_raw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/macros.rs	/^macro_rules! include_spirv_raw {$/;"	d
include_wgsl	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/macros.rs	/^macro_rules! include_wgsl {$/;"	d
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn init(backends: wgt::Backends) -> Self {$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn init(_backends: wgt::Backends) -> Self {$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn init(backends: Backends) -> Self;$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn init(self) -> id {$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn init(self) -> id; \/\/ *mut NSMutableAttributedString$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn init(&self) {$/;"	f
init	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^unsafe fn init<T>($/;"	f
initWithAttributedString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn initWithAttributedString(self, string: id) -> id {$/;"	f
initWithAttributedString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn initWithAttributedString(self, string: id) -> id;$/;"	f
initWithString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn initWithString(self, string: id) -> id {$/;"	f
initWithString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn initWithString(self, string: id) -> id;$/;"	f
initWithUTF8String_	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn initWithUTF8String_(self, c_string: *const c_char) -> id {$/;"	f
initWithUTF8String_	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn initWithUTF8String_(self, c_string: *const c_char) -> id;$/;"	f
init_guard	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^            unsafe fn init_guard(guard: &mut RefMut<'static, Option<AppState>>) {$/;"	f
init_str	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn init_str(self, string: &str) -> Self;$/;"	f
init_str	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn init_str(self, string: &str) -> id {$/;"	f
init_with_winit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn init_with_winit(this: &Object, _sel: Sel, state: *mut c_void) -> id {$/;"	f
init_with_winit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn init_with_winit(this: &Object, _sel: Sel, state: *mut c_void) -> id {$/;"	f
initer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^        unsafe fn initer() {$/;"	f
initialize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/menu.rs	/^pub fn initialize() {$/;"	f
initialize_adapter_from_env	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub fn initialize_adapter_from_env($/;"	f
initialize_adapter_from_env	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub fn initialize_adapter_from_env(instance: &Instance, backend_bits: Backends) -> Option<Adapter> {$/;"	f
initialize_adapter_from_env_or_default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub async fn initialize_adapter_from_env_or_default($/;"	f
inner_pos_to_outer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn inner_pos_to_outer(&self, x: i32, y: i32) -> (i32, i32) {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, error::NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn inner_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn inner_size(&self) -> PhysicalSize<u32> {$/;"	f
inner_size_to_outer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn inner_size_to_outer(&self, width: u32, height: u32) -> (u32, u32) {$/;"	f
input	/Users/mart/code/wgpu_plot/src/lib.rs	/^    fn input(&mut self, event: &WindowEvent) -> bool {$/;"	f
insert_back_tab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn insert_back_tab(this: &Object, _sel: Sel, _sender: id) {$/;"	f
insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn insert_debug_marker(&mut self, label: &str) {$/;"	f
insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn insert_debug_marker(&mut self, _label: &str) {$/;"	f
insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn insert_debug_marker(&mut self, label: &str);$/;"	f
insert_debug_marker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn insert_debug_marker(&mut self, label: &str) {$/;"	f
insert_event_target_window_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn insert_event_target_window_data<T>($/;"	f
insert_tab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn insert_tab(this: &Object, _sel: Sel, _sender: id) {$/;"	f
insert_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn insert_text(this: &Object, _sel: Sel, string: id, _replacement_range: NSRange) {$/;"	f
instance_as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn instance_as_hal<A: wgc::hub::HalApi>(&self) -> Option<&A::Instance> {$/;"	f
instance_create_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn instance_create_surface($/;"	f
instance_create_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn instance_create_surface($/;"	f
instance_create_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn instance_create_surface($/;"	f
instance_create_surface_from_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub fn instance_create_surface_from_canvas($/;"	f
instance_create_surface_from_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    pub fn instance_create_surface_from_canvas($/;"	f
instance_create_surface_from_offscreen_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub fn instance_create_surface_from_offscreen_canvas($/;"	f
instance_create_surface_from_offscreen_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    pub fn instance_create_surface_from_offscreen_canvas($/;"	f
instance_poll_all_devices	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn instance_poll_all_devices(&self, force_wait: bool) -> bool {$/;"	f
instance_poll_all_devices	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn instance_poll_all_devices(&self, _force_wait: bool) -> bool {$/;"	f
instance_poll_all_devices	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn instance_poll_all_devices(&self, force_wait: bool) -> bool;$/;"	f
instance_request_adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn instance_request_adapter($/;"	f
instance_request_adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn instance_request_adapter($/;"	f
instance_request_adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn instance_request_adapter($/;"	f
into_integer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/contiguous.rs	/^  fn into_integer(self) -> Self::Int {$/;"	f
into_iter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	f
into_windows_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    fn into_windows_icon(self) -> Result<WinIcon, BadIcon> {$/;"	f
invalidate_cached_monitor_list	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^pub fn invalidate_cached_monitor_list() -> Option<Vec<MonitorHandle>> {$/;"	f
invisible_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^pub unsafe fn invisible_cursor() -> id {$/;"	f
is_actual_property_type	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/window_property.rs	/^    pub fn is_actual_property_type(&self, t: ffi::Atom) -> bool {$/;"	f
is_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub fn is_allowed(&self) -> bool {$/;"	f
is_closed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn is_closed(&self) -> bool {$/;"	f
is_corporate_character	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn is_corporate_character(c: char) -> bool {$/;"	f
is_dark_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn is_dark_mode(&self) -> bool;$/;"	f
is_dark_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^    fn is_dark_mode(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_decorated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn is_decorated(&self) -> bool {$/;"	f
is_destroyed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn is_destroyed(&self) -> bool {$/;"	f
is_exit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/state.rs	/^    pub fn is_exit(&self) -> bool {$/;"	f
is_fallback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn is_fallback(&self) -> bool {$/;"	f
is_first_touch	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^fn is_first_touch(first: &mut Option<u64>, num: &mut u32, id: u64, phase: TouchPhase) -> bool {$/;"	f
is_focused	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn is_focused(window: HWND) -> bool {$/;"	f
is_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn is_fullscreen(&self) -> bool {$/;"	f
is_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn is_fullscreen(canvas: &HtmlCanvasElement) -> bool {$/;"	f
is_high_contrast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^fn is_high_contrast() -> bool {$/;"	f
is_ime_enabled	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^    fn is_ime_enabled(&self) -> bool {$/;"	f
is_main_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^fn is_main_thread() -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn is_maximized(&self) -> bool {$/;"	f
is_panicking	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn is_panicking(&self) -> bool {$/;"	f
is_ready	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_ready	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_ready(&self) -> bool;$/;"	f
is_ready	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn is_ready(&self) -> bool {$/;"	f
is_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn is_redraw(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn is_resizable(&self) -> bool {$/;"	f
is_surface_supported	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn is_surface_supported(&self, surface: &Surface) -> bool {$/;"	f
is_top_level	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn is_top_level(&self, window: ffi::Window, root: ffi::Window) -> Option<bool> {$/;"	f
is_valid_bit_pattern	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  fn is_valid_bit_pattern(_bits: &T) -> bool {$/;"	f
is_valid_bit_pattern	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  fn is_valid_bit_pattern(bits: &Self::Bits) -> bool {$/;"	f
is_valid_bit_pattern	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^  fn is_valid_bit_pattern(bits: &Self::Bits) -> bool;$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn is_visible(&self) -> Option<bool> {$/;"	f
is_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_wayland(&self) -> bool {$/;"	f
is_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_wayland(&self) -> bool;$/;"	f
is_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn is_wayland(&self) -> bool {$/;"	f
is_x11	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_x11(&self) -> bool {$/;"	f
is_x11	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn is_x11(&self) -> bool;$/;"	f
iter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    pub fn iter(&self) -> KeymapIter<'_> {$/;"	f
iterate_filenames	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^    unsafe fn iterate_filenames<F>(data_obj: *const IDataObject, callback: F) -> Option<HDROP>$/;"	f
kCFRunLoopAfterWaiting	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub const kCFRunLoopAfterWaiting: CFRunLoopActivity = 1 << 6;$/;"	c
kCFRunLoopAfterWaiting	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub const kCFRunLoopAfterWaiting: CFRunLoopActivity = 1 << 6;$/;"	c
kCFRunLoopBeforeWaiting	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub const kCFRunLoopBeforeWaiting: CFRunLoopActivity = 1 << 5;$/;"	c
kCFRunLoopBeforeWaiting	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub const kCFRunLoopBeforeWaiting: CFRunLoopActivity = 1 << 5;$/;"	c
kCFRunLoopCommonModes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub static kCFRunLoopCommonModes: CFRunLoopMode;$/;"	c
kCFRunLoopCommonModes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub static kCFRunLoopCommonModes: CFRunLoopMode;$/;"	c
kCFRunLoopDefaultMode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub static kCFRunLoopDefaultMode: CFRunLoopMode;$/;"	c
kCFRunLoopEntry	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub const kCFRunLoopEntry: CFRunLoopActivity = 0;$/;"	c
kCFRunLoopEntry	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub const kCFRunLoopEntry: CFRunLoopActivity = 0;$/;"	c
kCFRunLoopExit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub const kCFRunLoopExit: CFRunLoopActivity = 1 << 7;$/;"	c
kCFRunLoopExit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub const kCFRunLoopExit: CFRunLoopActivity = 1 << 7;$/;"	c
kCGBackstopMenuLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGBackstopMenuLevelKey: NSInteger = 3;$/;"	c
kCGBaseWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGBaseWindowLevelKey: NSInteger = 0;$/;"	c
kCGCursorWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGCursorWindowLevelKey: NSInteger = 19;$/;"	c
kCGDesktopIconWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDesktopIconWindowLevelKey: NSInteger = 18;$/;"	c
kCGDesktopWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDesktopWindowLevelKey: NSInteger = 2;$/;"	c
kCGDisplayBlendNormal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDisplayBlendNormal: f32 = 0.0;$/;"	c
kCGDisplayBlendSolidColor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDisplayBlendSolidColor: f32 = 1.0;$/;"	c
kCGDisplayFadeReservationInvalidToken	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDisplayFadeReservationInvalidToken: CGDisplayFadeReservationToken = 0;$/;"	c
kCGDockWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDockWindowLevelKey: NSInteger = 7;$/;"	c
kCGDraggingWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGDraggingWindowLevelKey: NSInteger = 12;$/;"	c
kCGErrorCannotComplete	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorCannotComplete: i32 = 1004;$/;"	c
kCGErrorFailure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorFailure: i32 = 1000;$/;"	c
kCGErrorIllegalArgument	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorIllegalArgument: i32 = 1001;$/;"	c
kCGErrorInvalidConnection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorInvalidConnection: i32 = 1002;$/;"	c
kCGErrorInvalidContext	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorInvalidContext: i32 = 1003;$/;"	c
kCGErrorInvalidOperation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorInvalidOperation: i32 = 1010;$/;"	c
kCGErrorNoneAvailable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorNoneAvailable: i32 = 1011;$/;"	c
kCGErrorNotImplemented	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorNotImplemented: i32 = 1006;$/;"	c
kCGErrorRangeCheck	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorRangeCheck: i32 = 1007;$/;"	c
kCGErrorSuccess	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorSuccess: i32 = 0;$/;"	c
kCGErrorTypeCheck	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGErrorTypeCheck: i32 = 1008;$/;"	c
kCGFloatingWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGFloatingWindowLevelKey: NSInteger = 5;$/;"	c
kCGHelpWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGHelpWindowLevelKey: NSInteger = 16;$/;"	c
kCGMainMenuWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGMainMenuWindowLevelKey: NSInteger = 8;$/;"	c
kCGMaximumWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGMaximumWindowLevelKey: NSInteger = 14;$/;"	c
kCGMinimumWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGMinimumWindowLevelKey: NSInteger = 1;$/;"	c
kCGModalPanelWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGModalPanelWindowLevelKey: NSInteger = 10;$/;"	c
kCGNormalWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGNormalWindowLevelKey: NSInteger = 4;$/;"	c
kCGNumberOfWindowLevelKeys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGNumberOfWindowLevelKeys: NSInteger = 20;$/;"	c
kCGOverlayWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGOverlayWindowLevelKey: NSInteger = 15;$/;"	c
kCGPopUpMenuWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGPopUpMenuWindowLevelKey: NSInteger = 11;$/;"	c
kCGScreenSaverWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGScreenSaverWindowLevelKey: NSInteger = 13;$/;"	c
kCGStatusWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGStatusWindowLevelKey: NSInteger = 9;$/;"	c
kCGTornOffMenuWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGTornOffMenuWindowLevelKey: NSInteger = 6;$/;"	c
kCGUtilityWindowLevelKey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kCGUtilityWindowLevelKey: NSInteger = 17;$/;"	c
kCVReturnSuccess	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub const kCVReturnSuccess: CVReturn = 0;$/;"	c
kCVTimeIsIndefinite	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub const kCVTimeIsIndefinite: CVTimeFlags = 1 << 0;$/;"	c
kIO16BitFloatPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kIO16BitFloatPixels: &str = "-16FR16FG16FB16";$/;"	c
kIO30BitDirectPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kIO30BitDirectPixels: &str = "--RRRRRRRRRRGGGGGGGGGGBBBBBBBBBB";$/;"	c
kIO32BitFloatPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kIO32BitFloatPixels: &str = "-32FR32FG32FB32";$/;"	c
kIO64BitDirectPixels	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^pub const kIO64BitDirectPixels: &str = "-16R16G16B16";$/;"	c
key_down	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn key_down(this: &Object, _sel: Sel, event: id) {$/;"	f
key_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn key_event(&mut self, state: ElementState, keycode: ffi::KeyCode, modifier: Modifier) {$/;"	f
key_press	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn key_press(&mut self, keycode: ffi::KeyCode, modifier: Modifier) {$/;"	f
key_pressed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^fn key_pressed(vkey: VIRTUAL_KEY) -> bool {$/;"	f
key_release	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn key_release(&mut self, keycode: ffi::KeyCode) {$/;"	f
key_up	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn key_up(this: &Object, _sel: Sel, event: id) {$/;"	f
keyboard_modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn keyboard_modifiers(event: &KeyboardEvent) -> ModifiersState {$/;"	f
keycode_to_keysym	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    pub fn keycode_to_keysym(&self, keycode: ffi::KeyCode) -> ffi::KeySym {$/;"	f
keysym_to_element	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/events.rs	/^pub fn keysym_to_element(keysym: libc::c_uint) -> Option<VirtualKeyCode> {$/;"	f
keysym_to_vkey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/keymap.rs	/^pub fn keysym_to_vkey(keysym: u32) -> Option<VirtualKeyCode> {$/;"	f
launched	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn launched(app_delegate: &Object) {$/;"	f
layout_subviews	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn layout_subviews(object: &Object, _: Sel) {$/;"	f
layout_uses_altgr	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^fn layout_uses_altgr() -> bool {$/;"	f
length	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn length(self) -> NSUInteger {$/;"	f
length	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn length(self) -> NSUInteger;$/;"	f
limits	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn limits(&self) -> Limits {$/;"	f
listen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    fn listen<F: FnMut(Attached<WlSeat>, &SeatData, DispatchData<'_>) + 'static>($/;"	f
listen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    fn listen<F: FnMut(WlOutput, &OutputInfo, DispatchData<'_>) + 'static>($/;"	f
load	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^    pub unsafe fn load(&self) -> id {$/;"	f
load_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    fn load_cursor(&self, name: &[u8]) -> ffi::Cursor {$/;"	f
load_first_existing_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    fn load_first_existing_cursor(&self, names: &[&[u8]]) -> ffi::Cursor {$/;"	f
load_webkit_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/cursor.rs	/^pub unsafe fn load_webkit_cursor(cursor_name: &str) -> id {$/;"	f
lock	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn lock(&self, surface: &WlSurface) {$/;"	f
logo	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn logo(&self) -> bool {$/;"	f
lookup_keysym	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    pub fn lookup_keysym(&self, xkev: &mut ffi::XKeyEvent) -> ffi::KeySym {$/;"	f
lookup_utf8	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    pub fn lookup_utf8(&self, ic: ffi::XIC, key_event: &mut ffi::XKeyEvent) -> String {$/;"	f
lookup_utf8_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    fn lookup_utf8_inner($/;"	f
loop_dispatch	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    fn loop_dispatch<D: Into<Option<std::time::Duration>>>(&mut self, timeout: D) -> IOResult<()> {$/;"	f
lose_active_focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn lose_active_focus<T>(window: HWND, userdata: &WindowData<T>) {$/;"	f
main	/Users/mart/code/wgpu_plot/src/main.rs	/^fn main() {$/;"	f
main_events_cleared_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn main_events_cleared_transition(&mut self) -> HashSet<id> {$/;"	f
main_thread_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn main_thread_id() -> u32 {$/;"	f
main_uiscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub unsafe fn main_uiscreen() -> MonitorHandle {$/;"	f
make_key_and_order_front_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn make_key_and_order_front_async(ns_window: id) {$/;"	f
make_spirv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^pub fn make_spirv(data: &[u8]) -> super::ShaderSource {$/;"	f
make_spirv_raw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^pub fn make_spirv_raw(data: &[u8]) -> Cow<[u32]> {$/;"	f
make_wid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/mod.rs	/^fn make_wid(surface: &WlSurface) -> WindowId {$/;"	f
map_address_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_address_mode(mode: wgt::AddressMode) -> web_sys::GpuAddressMode {$/;"	f
map_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn map_async($/;"	f
map_blend_component	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_blend_component(desc: &wgt::BlendComponent) -> web_sys::GpuBlendComponent {$/;"	f
map_blend_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_blend_factor(factor: wgt::BlendFactor) -> web_sys::GpuBlendFactor {$/;"	f
map_blend_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_blend_operation(op: wgt::BlendOperation) -> web_sys::GpuBlendOperation {$/;"	f
map_buffer_copy_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^fn map_buffer_copy_view(view: crate::ImageCopyBuffer) -> wgc::command::ImageCopyBuffer {$/;"	f
map_buffer_copy_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_buffer_copy_view(view: crate::ImageCopyBuffer) -> web_sys::GpuImageCopyBuffer {$/;"	f
map_color	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_color(color: wgt::Color) -> web_sys::GpuColorDict {$/;"	f
map_compare_function	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_compare_function(compare_fn: wgt::CompareFunction) -> web_sys::GpuCompareFunction {$/;"	f
map_cull_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_cull_mode(cull_mode: Option<wgt::Face>) -> web_sys::GpuCullMode {$/;"	f
map_depth_stencil_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_depth_stencil_state(desc: &wgt::DepthStencilState) -> web_sys::GpuDepthStencilState {$/;"	f
map_extent_3d	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_extent_3d(extent: wgt::Extent3d) -> web_sys::GpuExtent3dDict {$/;"	f
map_filter_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_filter_mode(mode: wgt::FilterMode) -> web_sys::GpuFilterMode {$/;"	f
map_front_face	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_front_face(front_face: wgt::FrontFace) -> web_sys::GpuFrontFace {$/;"	f
map_index_format	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_index_format(format: wgt::IndexFormat) -> web_sys::GpuIndexFormat {$/;"	f
map_map_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_map_mode(mode: crate::MapMode) -> u32 {$/;"	f
map_mipmap_filter_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_mipmap_filter_mode(mode: wgt::FilterMode) -> web_sys::GpuMipmapFilterMode {$/;"	f
map_nonuser_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn map_nonuser_event<U>(self) -> Result<Event<'a, U>, Event<'a, T>> {$/;"	f
map_origin_3d	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_origin_3d(origin: wgt::Origin3d) -> web_sys::GpuOrigin3dDict {$/;"	f
map_pass_channel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^fn map_pass_channel<V: Copy + Default>($/;"	f
map_primitive_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_primitive_state(primitive: &wgt::PrimitiveState) -> web_sys::GpuPrimitiveState {$/;"	f
map_stencil_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_stencil_operation(op: wgt::StencilOperation) -> web_sys::GpuStencilOperation {$/;"	f
map_stencil_state_face	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_stencil_state_face(desc: &wgt::StencilFaceState) -> web_sys::GpuStencilFaceState {$/;"	f
map_store_op	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_store_op(store: bool) -> web_sys::GpuStoreOp {$/;"	f
map_tagged_texture_copy_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_tagged_texture_copy_view($/;"	f
map_text_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^fn map_text_keys(win_virtual_key: VIRTUAL_KEY) -> Option<VirtualKeyCode> {$/;"	f
map_texture_aspect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_aspect(aspect: wgt::TextureAspect) -> web_sys::GpuTextureAspect {$/;"	f
map_texture_component_type	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_component_type($/;"	f
map_texture_copy_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^fn map_texture_copy_view(view: crate::ImageCopyTexture) -> wgc::command::ImageCopyTexture {$/;"	f
map_texture_copy_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_copy_view(view: crate::ImageCopyTexture) -> web_sys::GpuImageCopyTexture {$/;"	f
map_texture_dimension	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_dimension(texture_dimension: wgt::TextureDimension) -> web_sys::GpuTextureDimension {$/;"	f
map_texture_format	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_format(texture_format: wgt::TextureFormat) -> web_sys::GpuTextureFormat {$/;"	f
map_texture_view_dimension	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_texture_view_dimension($/;"	f
map_vertex_format	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_vertex_format(format: wgt::VertexFormat) -> web_sys::GpuVertexFormat {$/;"	f
map_vertex_step_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn map_vertex_step_mode(mode: wgt::VertexStepMode) -> web_sys::GpuVertexStepMode {$/;"	f
marked_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn marked_range(this: &Object, _sel: Sel) -> NSRange {$/;"	f
mask	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    fn mask(mut self) -> WindowFlags {$/;"	f
maybe_change	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^pub fn maybe_change<T: PartialEq>(field: &mut Option<T>, value: T) -> bool {$/;"	f
maybe_dispatch_device_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app.rs	/^unsafe fn maybe_dispatch_device_event(event: id) {$/;"	f
maybe_runner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn maybe_runner(&self) -> Option<&Runner<T>> {$/;"	f
maybe_start_cause	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn maybe_start_cause(&self) -> Option<StartCause> {$/;"	f
meets_requirements	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn meets_requirements(&self, required_major: NSInteger, required_minor: NSInteger) -> bool {$/;"	f
menu_item	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/menu.rs	/^fn menu_item($/;"	f
mirrored_uiscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^unsafe fn mirrored_uiscreen(monitor: &MonitorHandle) -> MonitorHandle {$/;"	f
mkdid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^fn mkdid(w: c_int) -> crate::event::DeviceId {$/;"	f
mkwid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^fn mkwid(w: ffi::Window) -> crate::window::WindowId {$/;"	f
mode_refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^pub fn mode_refresh_rate_millihertz(mode: &XRRModeInfo) -> Option<u32> {$/;"	f
modifier_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub unsafe fn modifier_event($/;"	f
modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn modifiers(&self) -> ModifiersState {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn monitor(&self) -> MonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn monitor(&self) -> monitor::MonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn monitor(&self) -> RootMonitorHandle {$/;"	f
mouse_button	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_button(event: &MouseEvent) -> MouseButton {$/;"	f
mouse_click	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn mouse_click(this: &Object, event: id, button: MouseButton, button_state: ElementState) {$/;"	f
mouse_delta	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_delta(event: &MouseEvent) -> LogicalPosition<f64> {$/;"	f
mouse_down	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_down(this: &Object, _sel: Sel, event: id) {$/;"	f
mouse_dragged	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_dragged(this: &Object, _sel: Sel, event: id) {$/;"	f
mouse_entered	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_entered(this: &Object, _sel: Sel, _event: id) {$/;"	f
mouse_exited	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_exited(this: &Object, _sel: Sel, _event: id) {$/;"	f
mouse_modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_modifiers(event: &MouseEvent) -> ModifiersState {$/;"	f
mouse_motion	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn mouse_motion(this: &Object, event: id) {$/;"	f
mouse_moved	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_moved(this: &Object, _sel: Sel, event: id) {$/;"	f
mouse_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_position(event: &MouseEvent) -> LogicalPosition<f64> {$/;"	f
mouse_position_by_client	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_position_by_client($/;"	f
mouse_scroll_delta	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn mouse_scroll_delta(event: &WheelEvent) -> Option<MouseScrollDelta> {$/;"	f
mouse_up	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn mouse_up(this: &Object, _sel: Sel, event: id) {$/;"	f
move_state_to	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    unsafe fn move_state_to(&self, new_runner_state: RunnerState) {$/;"	f
mql	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/media_query_handle.rs	/^    pub fn mql(&self) -> &MediaQueryList {$/;"	f
multi_draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn multi_draw_indexed_indirect($/;"	f
multi_draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn multi_draw_indexed_indirect($/;"	f
multi_draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn multi_draw_indexed_indirect($/;"	f
multi_draw_indexed_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn multi_draw_indexed_indirect($/;"	f
multi_draw_indexed_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn multi_draw_indexed_indirect_count($/;"	f
multi_draw_indexed_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn multi_draw_indexed_indirect_count($/;"	f
multi_draw_indexed_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn multi_draw_indexed_indirect_count($/;"	f
multi_draw_indexed_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn multi_draw_indexed_indirect_count($/;"	f
multi_draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn multi_draw_indirect($/;"	f
multi_draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn multi_draw_indirect($/;"	f
multi_draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn multi_draw_indirect($/;"	f
multi_draw_indirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn multi_draw_indirect($/;"	f
multi_draw_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn multi_draw_indirect_count($/;"	f
multi_draw_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn multi_draw_indirect_count($/;"	f
multi_draw_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn multi_draw_indirect_count($/;"	f
multi_draw_indirect_count	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn multi_draw_indirect_count($/;"	f
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^        static mut APP_STATE: RefCell<Option<AppState>> = RefCell::new(None);$/;"	c
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^        static mut SINGLETON_INIT: bool = false;$/;"	c
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    static mut CLASS: Option<&'static Class> = None;$/;"	c
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    static mut CLASSES: Option<HashMap<*const Class, &'static Class>> = None;$/;"	c
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    static mut ID: usize = 0;$/;"	c
mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    static mut MAIN_THREAD_ID: u32 = 0;$/;"	c
mutableString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn mutableString(self) -> id {$/;"	f
mutableString	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn mutableString(self) -> id; \/\/ *mut NSMutableString$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn name(&self) -> Option<String> {$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn native_id(&self) -> u32 {$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn native_id(&self) -> u32;$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn native_id(&self) -> u32 {$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn native_id(&self) -> u32;$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn native_id(&self) -> String {$/;"	f
native_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn native_id(&self) -> String;$/;"	f
native_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn native_identifier(&self) -> u32 {$/;"	f
native_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn native_identifier(&self) -> u32 {$/;"	f
native_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn native_identifier(&self) -> u32 {$/;"	f
native_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn native_identifier(&self) -> u32 {$/;"	f
native_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn native_identifier(&self) -> String {$/;"	f
ndk_keycode_to_virtualkeycode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^fn ndk_keycode_to_virtualkeycode(keycode: Keycode) -> Option<event::VirtualKeyCode> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^    fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn new() -> ErrorSinkRaw {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn new(future: F, map: M) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn new(total_size: BufferAddress) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn new(backends: Backends) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    pub fn new(chunk_size: BufferAddress) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn new<S: Into<Position>>(position: S) -> Position {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn new<S: Into<Size>>(size: S) -> Size {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn new() -> EventLoop<()> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn new(rl: CFRunLoopRef) -> EventLoopWaker {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    fn new(sender: Sender<T>) -> EventLoopProxy<T> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn new(origin: CGPoint, size: CGSize) -> CGRect {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    pub fn new(size: LogicalSize<f64>) -> CGSize {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn new(general: String, instance: String) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    pub fn new(env: &Environment<WinitEnv>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn new() -> Result<EventLoop<T>, Box<dyn Error>> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/proxy.rs	/^    pub fn new(user_events_sender: Sender<T>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/sink.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn new(env: &Environment<WinitEnv>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/mod.rs	/^    fn new(modifiers_state: Rc<RefCell<ModifiersState>>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/keyboard/mod.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^    fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^    pub fn new(seat: WlSeat) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/data.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/data.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^    fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^    pub fn new(seat: &Attached<WlSeat>, text_input_manager: &ZwpTextInputManagerV3) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/touch/mod.rs	/^    fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/touch/mod.rs	/^    pub fn new(seat: &Attached<WlSeat>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/touch/mod.rs	/^    pub fn new(surface: WlSurface, position: LogicalPosition<f64>, id: i32) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub fn new(xconn: &Arc<XConnection>) -> Result<Self, XError> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub fn new(xconn: Arc<XConnection>) -> Result<Self, XError> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub fn new(client_data: ffi::XPointer) -> PreeditCallbacks {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub unsafe fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/inner.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    fn new(xconn: &Arc<XConnection>, im: ffi::XIM, name: String) -> Option<Self> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn new(xconn: &Arc<XConnection>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn new(info: &ffi::XIDeviceInfo) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn new(xconn: Arc<XConnection>) -> EventLoop<T> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn new((x, y): (i32, i32), (width, height): (u32, u32)) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn new(left: c_ulong, right: c_ulong, top: c_ulong, bottom: c_ulong) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn new() -> MotifHints {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn new(xconn: &'a XConnection) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/memory.rs	/^    pub fn new(xconn: &'a XConnection, ptr: *mut T) -> Option<Self> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn new(xconn: &'a XConnection) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn new() -> ModifierKeymap {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn new(last_monitor: X11MonitorHandle, window_attributes: &WindowAttributes) -> Mutex<Self> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    pub fn new(error_handler: XErrorHandler) -> Result<XConnection, XNotSupported> {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^extern "C" fn new(class: &Class, _: Sel) -> id {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    fn new(sender: mpsc::Sender<T>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    pub fn new(location: NSUInteger, length: NSUInteger) -> NSRange {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn new(id: CGDirectDisplayID) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    pub fn new(inner: id) -> IdRef {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    pub fn new(window: &Arc<UnownedWindow>, initial_fullscreen: bool) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/proxy.rs	/^    pub fn new(runner: runner::Shared<T>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn new(event_handler: Box<dyn FnMut(Event<'_, T>, &mut ControlFlow)>) -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event_handle.rs	/^    pub fn new<U>(target: &U, event_type: &'static str, listener: Closure<T>) -> Self$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/media_query_handle.rs	/^    pub fn new($/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/scaling.rs	/^    fn new<F>(handler: F) -> Rc<RefCell<Self>>$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/timeout.rs	/^    pub fn new<F>(f: F, duration: Duration) -> Timeout$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/timeout.rs	/^    pub fn new<F>(mut f: F) -> AnimationFrameRequest$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^    pub fn new(window: HWND, send_event: Box<dyn Fn(Event<'static, ()>)>) -> FileDropHandler {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn new() -> Self {$/;"	f
new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn new<T: 'static>(event_loop: &EventLoopWindowTarget<T>) -> Result<Window, OsError> {$/;"	f
new	/Users/mart/code/wgpu_plot/src/lib.rs	/^    async fn new(window: &Window) -> Self {$/;"	f
new_delegate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^pub fn new_delegate(window: &Arc<UnownedWindow>, initial_fullscreen: bool) -> IdRef {$/;"	f
new_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^pub fn new_view(ns_window: id) -> (IdRef, Weak<Mutex<CursorState>>) {$/;"	f
new_wayland_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn new_wayland_any_thread() -> Result<EventLoop<T>, Box<dyn Error>> {$/;"	f
new_x11_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    fn new_x11_any_thread() -> Result<EventLoop<T>, XNotSupported> {$/;"	f
next	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    fn next(&mut self) -> Option<ffi::KeyCode> {$/;"	f
nil	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^pub const nil: id = 0 as id;$/;"	c
non_nil	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    pub fn non_nil(self) -> Option<IdRef> {$/;"	f
normalize_pointer_pressure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn normalize_pointer_pressure(pressure: u32) -> Option<Force> {$/;"	f
normalized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn normalized(&self) -> f64 {$/;"	f
notify	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^    fn notify(&self) {$/;"	f
notify_destroy_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn notify_destroy_window(&self, id: WindowId) {$/;"	f
now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/native.rs	/^pub fn now() -> f64 {$/;"	f
now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^        pub fn now() -> f64;$/;"	f
now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn now() -> Self {$/;"	f
now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn now() -> SystemTime {$/;"	f
now	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^pub fn now() -> f64 {$/;"	f
ns_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_screen(&self) -> Option<*mut c_void> {$/;"	f
ns_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_screen(&self) -> Option<*mut c_void>;$/;"	f
ns_string_id_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn ns_string_id_ref(s: &str) -> IdRef {$/;"	f
ns_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_view(&self) -> *mut c_void {$/;"	f
ns_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_view(&self) -> *mut c_void;$/;"	f
ns_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn ns_view(&self) -> *mut c_void {$/;"	f
ns_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_window(&self) -> *mut c_void {$/;"	f
ns_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn ns_window(&self) -> *mut c_void;$/;"	f
ns_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn ns_window(&self) -> *mut c_void {$/;"	f
offset_of	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/offset_of.rs	/^macro_rules! offset_of {$/;"	d
ok	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn ok(self) -> Option<InputMethod> {$/;"	f
on_blur	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_blur<F>(&mut self, mut handler: F)$/;"	f
on_create	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub unsafe fn on_create(&mut self) {$/;"	f
on_cursor_enter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_cursor_enter<F>(&mut self, handler: F)$/;"	f
on_cursor_enter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn on_cursor_enter<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_cursor_enter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn on_cursor_enter<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_cursor_leave	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_cursor_leave<F>(&mut self, handler: F)$/;"	f
on_cursor_leave	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn on_cursor_leave<F>(&mut self, canvas_common: &super::Common, handler: F)$/;"	f
on_cursor_leave	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn on_cursor_leave<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_cursor_move	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_cursor_move<F>(&mut self, handler: F)$/;"	f
on_cursor_move	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn on_cursor_move<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_cursor_move	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn on_cursor_move<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_dark_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_dark_mode<F>(&mut self, mut handler: F)$/;"	f
on_focus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_focus<F>(&mut self, mut handler: F)$/;"	f
on_fullscreen_change	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_fullscreen_change<F>(&mut self, mut handler: F)$/;"	f
on_keyboard_press	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_keyboard_press<F>(&mut self, mut handler: F, prevent_default: bool)$/;"	f
on_keyboard_release	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_keyboard_release<F>(&mut self, mut handler: F, prevent_default: bool)$/;"	f
on_mouse_press	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_mouse_press<F>(&mut self, handler: F)$/;"	f
on_mouse_press	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn on_mouse_press<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_mouse_press	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn on_mouse_press<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_mouse_release	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_mouse_release<F>(&mut self, handler: F)$/;"	f
on_mouse_release	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn on_mouse_release<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_mouse_release	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn on_mouse_release<F>(&mut self, canvas_common: &super::Common, mut handler: F)$/;"	f
on_mouse_wheel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_mouse_wheel<F>(&mut self, mut handler: F, prevent_default: bool)$/;"	f
on_nccreate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub unsafe fn on_nccreate(&mut self, window: HWND) -> Option<isize> {$/;"	f
on_received_character	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn on_received_character<F>(&mut self, mut handler: F, prevent_default: bool)$/;"	f
on_submitted_work_done	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn on_submitted_work_done(&self, callback: impl FnOnce() + Send + 'static) {$/;"	f
on_uncaptured_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn on_uncaptured_error(&self, handler: impl UncapturedErrorHandler) {$/;"	f
on_unload	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn on_unload(mut handler: impl FnMut() + 'static) -> UnloadEventHandle {$/;"	f
open_emoji_picker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn open_emoji_picker() {$/;"	f
open_im	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn open_im($/;"	f
open_im	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn open_im(&mut self, xconn: &Arc<XConnection>) -> Option<InputMethod> {$/;"	f
open_im	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^unsafe fn open_im(xconn: &Arc<XConnection>, locale_modifiers: &CStr) -> Option<ffi::XIM> {$/;"	f
order_out_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn order_out_async(ns_window: id) {$/;"	f
os_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^macro_rules! os_capabilities {$/;"	d
os_capabilities	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub fn os_capabilities() -> OSCapabilities {$/;"	f
os_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/error.rs	/^macro_rules! os_error {$/;"	d
other_mouse_down	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn other_mouse_down(this: &Object, _sel: Sel, event: id) {$/;"	f
other_mouse_dragged	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn other_mouse_dragged(this: &Object, _sel: Sel, event: id) {$/;"	f
other_mouse_up	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn other_mouse_up(this: &Object, _sel: Sel, event: id) {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, error::NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn outer_position(&self) -> Result<PhysicalPosition<i32>, NotSupportedError> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
outer_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn outer_size(&self) -> PhysicalSize<u32> {$/;"	f
owned_windows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn owned_windows(&self, mut f: impl FnMut(HWND)) {$/;"	f
parse_backends_from_comma_list	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub fn parse_backends_from_comma_list(_string: &str) -> Backends {$/;"	f
parse_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub fn parse_data(&self, data: &mut Vec<c_uchar>) -> Result<Vec<PathBuf>, DndDataParseError> {$/;"	f
partial_cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    fn partial_cmp(&self, other: &VideoMode) -> Option<std::cmp::Ordering> {$/;"	f
partial_cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	f
partial_cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	f
partial_cmp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<std::cmp::Ordering> {$/;"	f
passthrough_mouse_input	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn passthrough_mouse_input(&self, passthrough_mouse_input: bool) {$/;"	f
peel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn peel(s: Self) -> Inner$/;"	f
peel_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn peel_arc(s: Arc<Self>) -> Arc<Inner> {$/;"	f
peel_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn peel_box(s: Box<Self>) -> Box<Inner> {$/;"	f
peel_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn peel_mut(s: &mut Self) -> &mut Inner {$/;"	f
peel_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn peel_rc(s: Rc<Self>) -> Rc<Inner> {$/;"	f
peel_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn peel_ref(s: &Self) -> &Inner {$/;"	f
peel_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn peel_slice(s: &[Self]) -> &[Inner]$/;"	f
peel_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn peel_slice_mut(s: &mut [Self]) -> &mut [Inner]$/;"	f
peel_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn peel_vec(s: Vec<Self>) -> Vec<Inner>$/;"	f
perform_drag_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn perform_drag_operation(this: &Object, _: Sel, sender: id) -> BOOL {$/;"	f
persistent_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn persistent_identifier(&self) -> Option<String> {$/;"	f
persistent_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn persistent_identifier(&self) -> Option<String>;$/;"	f
persistent_identifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^    pub fn persistent_identifier(&self) -> Option<String> {$/;"	f
physical_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn physical_device(info: &ffi::XIDeviceInfo) -> bool {$/;"	f
pipeline_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn pipeline_layout_drop(&self, pipeline_layout: &Self::PipelineLayoutId) {$/;"	f
pipeline_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn pipeline_layout_drop(&self, _pipeline_layout: &Self::PipelineLayoutId) {$/;"	f
pipeline_layout_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn pipeline_layout_drop(&self, pipeline_layout: &Self::PipelineLayoutId);$/;"	f
pod_align_to	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn pod_align_to<T: NoUninit, U: AnyBitPattern>($/;"	f
pod_align_to_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn pod_align_to_mut<$/;"	f
pod_collect_to_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn pod_collect_to_vec<$/;"	f
pod_read_unaligned	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn pod_read_unaligned<T: AnyBitPattern>(bytes: &[u8]) -> T {$/;"	f
pod_read_unaligned	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn pod_read_unaligned<T: AnyBitPattern>(bytes: &[u8]) -> T {$/;"	f
pointer_constraints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    pub fn pointer_constraints(&self) -> bool {$/;"	f
pointer_entered	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn pointer_entered(&mut self, pointer: WinitPointer) {$/;"	f
pointer_left	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn pointer_left(&mut self, pointer: WinitPointer) {$/;"	f
poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut task::Context) -> Poll<Self::Output> {$/;"	f
poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn poll(&self, maintain: Maintain) -> bool {$/;"	f
poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^fn poll(poll: Poll) -> Option<EventSource> {$/;"	f
poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn poll(&self) {$/;"	f
poll_all	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn poll_all(&self, force_wait: bool) -> bool {$/;"	f
pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn pop_debug_group(&mut self) {$/;"	f
pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn pop_debug_group(&mut self) {$/;"	f
pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn pop_debug_group(&mut self);$/;"	f
pop_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn pop_debug_group(&mut self) {$/;"	f
pop_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn pop_error_scope(&self) -> impl Future<Output = Option<Error>> + Send {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn position(&self) -> LogicalPosition<f64> {$/;"	f
position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn position(&self) -> PhysicalPosition<i32> {$/;"	f
post_dummy_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub unsafe fn post_dummy_event(target: id) {$/;"	f
power_preference_from_env	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/init.rs	/^pub fn power_preference_from_env() -> Option<PowerPreference> {$/;"	f
preedit_caret_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^extern "C" fn preedit_caret_callback($/;"	f
preedit_done_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^extern "C" fn preedit_done_callback($/;"	f
preedit_draw_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^extern "C" fn preedit_draw_callback($/;"	f
preedit_start_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^extern "C" fn preedit_start_callback($/;"	f
preferred_video_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn preferred_video_mode(&self) -> VideoMode {$/;"	f
preferred_video_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn preferred_video_mode(&self) -> VideoMode;$/;"	f
preferred_video_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn preferred_video_mode(&self) -> RootVideoMode {$/;"	f
prepare_for_drag_operation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn prepare_for_drag_operation(_: &Object, _: Sel, _: id) -> BOOL {$/;"	f
present	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn present(mut self) {$/;"	f
pressure_change_with_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn pressure_change_with_event(this: &Object, _sel: Sel, event: id) {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn primary_monitor(&self) -> Option<MonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn primary_monitor(&self) -> Option<monitor::MonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn primary_monitor(&self) -> MonitorHandle {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn primary_monitor(&self) -> X11MonitorHandle {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^pub fn primary_monitor() -> MonitorHandle {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn primary_monitor(&self) -> Option<RootMH> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn primary_monitor(&self) -> Option<RootMH> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn primary_monitor(&self) -> Option<RootMonitorHandle> {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^pub fn primary_monitor() -> MonitorHandle {$/;"	f
primary_monitor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn primary_monitor(&self) -> Option<MonitorHandle> {$/;"	f
process_control_flow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn process_control_flow<T: 'static>(runner: &EventLoopRunner<T>) {$/;"	f
process_destroy_pending_windows	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn process_destroy_pending_windows(&self, control: &mut ControlFlow) {$/;"	f
process_key_params	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^pub fn process_key_params($/;"	f
process_seat_update	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/mod.rs	/^    pub fn process_seat_update(&mut self, seat: &Attached<WlSeat>, seat_data: &SeatData) {$/;"	f
proxy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn proxy(&self) -> EventLoopProxy<T> {$/;"	f
public_window_callback_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn public_window_callback_inner<T: 'static>($/;"	f
push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn push_debug_group(&mut self, group_label: &str) {$/;"	f
push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn push_debug_group(&mut self, _group_label: &str) {$/;"	f
push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn push_debug_group(&mut self, group_label: &str);$/;"	f
push_debug_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn push_debug_group(&mut self, label: &str) {$/;"	f
push_device_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/sink.rs	/^    pub fn push_device_event(&mut self, event: DeviceEvent, device_id: DeviceId) {$/;"	f
push_error_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn push_error_scope(&self, filter: ErrorFilter) {$/;"	f
push_window_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/sink.rs	/^    pub fn push_window_event(&mut self, event: WindowEvent<'static>, window_id: WindowId) {$/;"	f
query_keymap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/keys.rs	/^    pub fn query_keymap(&self) -> Keymap {$/;"	f
query_monitor_list	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    fn query_monitor_list(&self) -> Vec<MonitorHandle> {$/;"	f
query_pointer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    pub fn query_pointer($/;"	f
query_set_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn query_set_drop(&self, query_set: &Self::QuerySetId) {$/;"	f
query_set_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn query_set_drop(&self, _query_set: &Self::QuerySetId) {$/;"	f
query_set_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn query_set_drop(&self, query_set: &Self::QuerySetId);$/;"	f
queue	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn queue(self) {}$/;"	f
queue_copy_external_image_to_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    pub fn queue_copy_external_image_to_texture($/;"	f
queue_create_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_create_staging_buffer($/;"	f
queue_create_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_create_staging_buffer($/;"	f
queue_create_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_create_staging_buffer($/;"	f
queue_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn queue_event(wrapper: EventWrapper) {$/;"	f
queue_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn queue_events(mut wrappers: VecDeque<EventWrapper>) {$/;"	f
queue_get_timestamp_period	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_get_timestamp_period(&self, queue: &Self::QueueId) -> f32 {$/;"	f
queue_get_timestamp_period	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_get_timestamp_period(&self, _queue: &Self::QueueId) -> f32 {$/;"	f
queue_get_timestamp_period	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_get_timestamp_period(&self, queue: &Self::QueueId) -> f32;$/;"	f
queue_gl_or_metal_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn queue_gl_or_metal_redraw(window: id) {$/;"	f
queue_on_submitted_work_done	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_on_submitted_work_done($/;"	f
queue_on_submitted_work_done	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_on_submitted_work_done($/;"	f
queue_on_submitted_work_done	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_on_submitted_work_done($/;"	f
queue_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn queue_redraw(window_id: WindowId) {$/;"	f
queue_submit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_submit<I: Iterator<Item = Self::CommandBufferId>>($/;"	f
queue_submit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_submit<I: Iterator<Item = Self::CommandBufferId>>($/;"	f
queue_submit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_submit<I: Iterator<Item = Self::CommandBufferId>>($/;"	f
queue_validate_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_validate_write_buffer($/;"	f
queue_validate_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_validate_write_buffer($/;"	f
queue_validate_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_validate_write_buffer($/;"	f
queue_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_write_buffer($/;"	f
queue_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_write_buffer($/;"	f
queue_write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_write_buffer($/;"	f
queue_write_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_write_staging_buffer($/;"	f
queue_write_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_write_staging_buffer($/;"	f
queue_write_staging_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_write_staging_buffer($/;"	f
queue_write_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn queue_write_texture($/;"	f
queue_write_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn queue_write_texture($/;"	f
queue_write_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn queue_write_texture($/;"	f
range_to_offset_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^fn range_to_offset_size<S: RangeBounds<BufferAddress>>($/;"	f
range_to_offset_size_panics_for_empty_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn range_to_offset_size_panics_for_empty_range() {$/;"	f
range_to_offset_size_panics_for_unbounded_empty_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn range_to_offset_size_panics_for_unbounded_empty_range() {$/;"	f
range_to_offset_size_works	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn range_to_offset_size_works() {$/;"	f
raw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn raw(&self) -> &HtmlCanvasElement {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn raw_display_handle(&self) -> raw_window_handle::RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn raw_display_handle(&self) -> raw_window_handle::RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_display_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn raw_display_handle(&self) -> RawDisplayHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn raw_window_handle(&self) -> RawWindowHandle {$/;"	f
raw_window_handle	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    fn raw_window_handle(&self) -> raw_window_handle_04::RawWindowHandle {$/;"	f
read_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/mod.rs	/^    pub fn read_buffer($/;"	f
read_data	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub unsafe fn read_data($/;"	f
read_x_keys	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    fn read_x_keys($/;"	f
recall	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    pub fn recall(&mut self) {$/;"	f
receive_chunks	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    fn receive_chunks(&mut self) {$/;"	f
rect_from_screen_space	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    unsafe fn rect_from_screen_space(&self, rect: CGRect) -> CGRect {$/;"	f
rect_to_screen_space	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    unsafe fn rect_to_screen_space(&self, rect: CGRect) -> CGRect {$/;"	f
redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn redraw(&self) -> MutexGuard<'_, Vec<WindowId>> {$/;"	f
redrawing	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn redrawing(&self) -> bool {$/;"	f
refresh_os_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    fn refresh_os_cursor(self, window: HWND) -> Result<(), io::Error> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^fn refresh_rate_millihertz(uiscreen: id) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> Option<u32> {$/;"	f
refresh_rate_millihertz	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn refresh_rate_millihertz(&self) -> u32 {$/;"	f
register	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn register($/;"	f
register_all_mice_and_keyboards_for_raw_input	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn register_all_mice_and_keyboards_for_raw_input($/;"	f
register_raw_input_devices	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/raw_input.rs	/^pub fn register_raw_input_devices(devices: &[RAWINPUTDEVICE]) -> bool {$/;"	f
register_then_closures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^fn register_then_closures<F, T>(promise: &Promise, callback: F, success_value: T, failure_value: T)$/;"	f
register_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn register_window(&self, window: HWND) {$/;"	f
register_window_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^unsafe fn register_window_class<T: 'static>($/;"	f
register_xlib_error_hook	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^pub fn register_xlib_error_hook(hook: XlibErrorHook) {$/;"	f
release_mouse	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^unsafe fn release_mouse(mut window_state: parking_lot::MutexGuard<'_, WindowState>) {$/;"	f
remove	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn remove(&mut self, offset: BufferAddress, size: Option<BufferSize>) {$/;"	f
remove	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/media_query_handle.rs	/^    pub fn remove(mut self) -> Closure<dyn FnMut(MediaQueryListEvent)> {$/;"	f
remove_context	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn remove_context(&mut self, window: ffi::Window) -> Result<bool, XError> {$/;"	f
remove_func	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    fn remove_func(&mut self, func: c_ulong) {$/;"	f
remove_listener	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/media_query_handle.rs	/^fn remove_listener(mql: &MediaQueryList, listener: &Closure<dyn FnMut(MediaQueryListEvent)>) {$/;"	f
remove_listeners	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn remove_listeners(&mut self) {$/;"	f
remove_listeners	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/mouse_handler.rs	/^    pub fn remove_listeners(&mut self) {$/;"	f
remove_listeners	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas/pointer_handler.rs	/^    pub fn remove_listeners(&mut self) {$/;"	f
remove_output	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    fn remove_output(&self, output: WlOutput) {$/;"	f
remove_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn remove_window(&self, window: HWND) {$/;"	f
render	/Users/mart/code/wgpu_plot/src/lib.rs	/^    fn render(&mut self) -> Result<(), wgpu::SurfaceError> {$/;"	f
render_bundle_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn render_bundle_drop(&self, render_bundle: &Self::RenderBundleId) {$/;"	f
render_bundle_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn render_bundle_drop(&self, _render_bundle: &Self::RenderBundleId) {$/;"	f
render_bundle_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn render_bundle_drop(&self, render_bundle: &Self::RenderBundleId);$/;"	f
render_bundle_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn render_bundle_encoder_finish($/;"	f
render_bundle_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn render_bundle_encoder_finish($/;"	f
render_bundle_encoder_finish	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn render_bundle_encoder_finish($/;"	f
render_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn render_pipeline_drop(&self, pipeline: &Self::RenderPipelineId) {$/;"	f
render_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn render_pipeline_drop(&self, _pipeline: &Self::RenderPipelineId) {$/;"	f
render_pipeline_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn render_pipeline_drop(&self, pipeline: &Self::RenderPipelineId);$/;"	f
render_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn render_pipeline_get_bind_group_layout($/;"	f
render_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn render_pipeline_get_bind_group_layout($/;"	f
render_pipeline_get_bind_group_layout	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn render_pipeline_get_bind_group_layout($/;"	f
replace_im	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^unsafe fn replace_im(inner: *mut ImeInner) -> Result<(), ReplaceImError> {$/;"	f
replace_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn replace_state(&mut self, new_state: AppStateImpl) -> AppStateImpl {$/;"	f
request_adapter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn request_adapter($/;"	f
request_device	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn request_device($/;"	f
request_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn request_fullscreen(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn request_redraw(&self, id: WindowId) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn request_redraw(&self) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn request_user_attention(&self, _request_type: Option<window::UserAttentionType>) {}$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn request_user_attention(&self, _request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn request_user_attention(&self, _request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
request_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn request_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
reset	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn reset(&mut self) {$/;"	f
reset	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub fn reset(&mut self) {$/;"	f
reset	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    fn reset(&mut self) {$/;"	f
reset	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/input_method.rs	/^    pub fn reset(&mut self) {$/;"	f
reset_cursor_rects	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn reset_cursor_rects(this: &Object, _sel: Sel) {$/;"	f
reset_from_x_connection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn reset_from_x_connection(&mut self, xconn: &XConnection) {$/;"	f
reset_from_x_keymap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn reset_from_x_keymap(&mut self, keymap: &ffi::XModifierKeymap) {$/;"	f
reset_scroll_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    fn reset_scroll_position(&mut self, info: &ffi::XIDeviceInfo) {$/;"	f
reset_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    fn reset_state(&mut self) {$/;"	f
resign_key_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn resign_key_window(object: &Object, _: Sel) {$/;"	f
resize	/Users/mart/code/wgpu_plot/src/lib.rs	/^    fn resize(&mut self, new_size: winit::dpi::PhysicalSize<u32>) {$/;"	f
resolve_query_set	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn resolve_query_set($/;"	f
restore_display_mode_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn restore_display_mode_async(ns_screen: u32) {$/;"	f
resume_time_reached	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn resume_time_reached(&self, start: Instant, requested_resume: Instant) {$/;"	f
retain	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^    pub fn retain(inner: id) -> IdRef {$/;"	f
retained_new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn retained_new(uiscreen: id) -> MonitorHandle {$/;"	f
retained_new	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    unsafe fn retained_new(uiscreen: id, screen_mode: id) -> VideoMode {$/;"	f
retrieve_keycode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn retrieve_keycode(event: id) -> Option<VirtualKeyCode> {$/;"	f
right_mouse_down	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn right_mouse_down(this: &Object, _sel: Sel, event: id) {$/;"	f
right_mouse_dragged	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn right_mouse_dragged(this: &Object, _sel: Sel, event: id) {$/;"	f
right_mouse_up	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn right_mouse_up(this: &Object, _sel: Sel, event: id) {$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn run<F>(self, event_handler: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn run<F>(mut self, event_handler: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn run<F>(self, event_handler: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn run<F>(self, callback: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn run<F>(mut self, callback: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn run<F>(mut self, callback: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn run<F>(mut self, callback: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/mod.rs	/^    pub fn run<F>(self, event_handler: F) -> !$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/window_target.rs	/^    pub fn run(&self, event_handler: Box<dyn FnMut(Event<'_, T>, &mut ControlFlow)>) {$/;"	f
run	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn run<F>(mut self, event_handler: F) -> !$/;"	f
run	/Users/mart/code/wgpu_plot/src/lib.rs	/^pub async fn run() {$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/run_return.rs	/^    fn run_return<F>(&mut self, event_handler: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn run_return<F>(&mut self, mut event_handler: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn run_return<F>(&mut self, callback: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn run_return<F>(&mut self, mut callback: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn run_return<F>(&mut self, mut callback: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn run_return<F>(&mut self, callback: F) -> i32$/;"	f
run_return	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn run_return<F>(&mut self, mut event_handler: F) -> i32$/;"	f
run_until_cleared	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    fn run_until_cleared(&self, events: impl Iterator<Item = Event<'static, T>>) {$/;"	f
safe_area_screen_space	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    unsafe fn safe_area_screen_space(&self) -> CGRect {$/;"	f
sampler_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn sampler_drop(&self, sampler: &Self::SamplerId) {$/;"	f
sampler_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn sampler_drop(&self, _sampler: &Self::SamplerId) {$/;"	f
sampler_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn sampler_drop(&self, sampler: &Self::SamplerId);$/;"	f
saturating_duration_since	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    pub fn saturating_duration_since(&self, earlier: Instant) -> Duration {$/;"	f
saved_standard_frame	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn saved_standard_frame(&self) -> NSRect {$/;"	f
saved_style	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn saved_style(&self, shared_state: &mut SharedState) -> NSWindowStyleMask {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn scale_factor(&self) -> i32 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn scale_factor(&self) -> u32 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn scale_factor() -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn scale_factor(&self) -> f64 {$/;"	f
scan_code	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn scan_code(event: &KeyboardEvent) -> ScanCode {$/;"	f
scancode_to_keycode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event.rs	/^pub fn scancode_to_keycode(scancode: c_ushort) -> Option<VirtualKeyCode> {$/;"	f
screen_frame	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    unsafe fn screen_frame(&self) -> CGRect {$/;"	f
scroll_wheel	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn scroll_wheel(this: &Object, _sel: Sel, event: id) {$/;"	f
select_xinput_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    pub fn select_xinput_events($/;"	f
select_xkb_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/input.rs	/^    pub fn select_xkb_events(&self, device_id: c_uint, mask: c_ulong) -> Option<Flusher<'_>> {$/;"	f
select_xrandr_input	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn select_xrandr_input(&self, root: Window) -> Result<c_int, XError> {$/;"	f
selected_range	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn selected_range(_this: &Object, _sel: Sel) -> NSRange {$/;"	f
send_client_msg	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/client_msg.rs	/^    pub fn send_client_msg($/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn send_event(&self, event: T) -> Result<(), event_loop::EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/proxy.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/client_msg.rs	/^    pub fn send_event<T: Into<ffi::XEvent>>($/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app.rs	/^extern "C" fn send_event(this: &Object, _sel: Sel, event: id) {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/proxy.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn send_event(&self, event: Event<'static, T>) {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/drop_handler.rs	/^    fn send_event(&self, event: Event<'static, ()>) {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn send_event(&self, event: T) -> Result<(), EventLoopClosed<T>> {$/;"	f
send_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    unsafe fn send_event(&self, event: Event<'_, T>) {$/;"	f
send_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn send_events(&self, events: impl Iterator<Item = Event<'static, T>>) {$/;"	f
send_finished	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub unsafe fn send_finished($/;"	f
send_request	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    fn send_request(&self, request: WindowRequest) {$/;"	f
send_status	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/dnd.rs	/^    pub unsafe fn send_status($/;"	f
send_xim_spot	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn send_xim_spot(&mut self, window: ffi::Window, x: i16, y: i16) {$/;"	f
serialize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
set_active	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_active(&mut self, is_active: bool) -> bool {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_always_on_top(&self, _always_on_top: bool) {}$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_always_on_top(&self, _always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_always_on_top(&self, _always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_always_on_top(&self, always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_always_on_top(&self, always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_always_on_top(&self, _always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_always_on_top(&self, always_on_top: bool) {$/;"	f
set_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_always_on_top(&self, always_on_top: bool) {$/;"	f
set_always_on_top_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_always_on_top_inner(&self, always_on_top: bool) -> util::Flusher<'_> {$/;"	f
set_attribute	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn set_attribute(&self, attribute: &str, value: &str) {$/;"	f
set_base_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_base_size(&mut self, base_size: Option<(u32, u32)>) {$/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_bind_group($/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_bind_group($/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_bind_group($/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_bind_group($/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_bind_group(&mut self, index: u32, bind_group: &'a BindGroup, offsets: &[DynamicOffset]) {$/;"	f
set_bind_group	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_bind_group(&mut self, index: u32, bind_group: &'a BindGroup, offsets: &[DynamicOffset]);$/;"	f
set_blend_constant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_blend_constant(&mut self, color: wgt::Color) {$/;"	f
set_blend_constant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_blend_constant(&mut self, color: wgt::Color) {$/;"	f
set_blend_constant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_blend_constant(&mut self, color: Color);$/;"	f
set_blend_constant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_blend_constant(&mut self, color: Color) {$/;"	f
set_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn set_callback<T>(callback: Weak<Callback<T>>, window_target: Rc<RootWindowTarget<T>>) {$/;"	f
set_canvas_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn set_canvas_size(raw: &HtmlCanvasElement, size: Size) {$/;"	f
set_canvas_style_property	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn set_canvas_style_property(raw: &HtmlCanvasElement, property: &str, value: &str) {$/;"	f
set_content_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn set_content_scale_factor($/;"	f
set_content_size_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_content_size_async(ns_window: id, size: LogicalSize<f64>) {$/;"	f
set_crtc_config	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/randr.rs	/^    pub fn set_crtc_config(&self, crtc_id: RRCrtc, mode_id: RRMode) -> Option<()> {$/;"	f
set_csd_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_csd_theme(&self, theme: Theme) {$/;"	f
set_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn set_cursor(&self, cursor_icon: Option<CursorIcon>) {$/;"	f
set_cursor_clip	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn set_cursor_clip(rect: Option<RECT>) -> Result<(), io::Error> {$/;"	f
set_cursor_flags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_cursor_flags<F>(&mut self, window: HWND, f: F) -> Result<(), io::Error>$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_cursor_grab(&self, _: CursorGrabMode) -> Result<(), error::ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_cursor_grab(&self, _: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_grab	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_cursor_grab(&self, mode: CursorGrabMode) -> Result<(), ExternalError> {$/;"	f
set_cursor_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/util.rs	/^pub fn set_cursor_hidden(hidden: bool) {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_cursor_hittest(&self, _hittest: bool) -> Result<(), error::ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_cursor_hittest(&self, _hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_cursor_hittest(&self, hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_cursor_hittest(&self, hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_hittest(&self, _hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_cursor_hittest(&self, hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_cursor_hittest(&self, _hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_cursor_hittest(&self, hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_hittest	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_cursor_hittest(&self, hittest: bool) -> Result<(), ExternalError> {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_cursor_icon(&self, _: window::CursorIcon) {}$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_cursor_icon(&self, _cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_cursor_icon(&self, cursor_icon: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    pub fn set_cursor_icon(&self, window: ffi::Window, cursor: Option<CursorIcon>) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_cursor_icon(&self, cursor: CursorIcon) {$/;"	f
set_cursor_lock	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn set_cursor_lock(&self, lock: bool) -> Result<(), RootOE> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_cursor_position(&self, _: Position) -> Result<(), error::ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_cursor_position(&self, _position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_cursor_position(&self, position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn set_cursor_position(&self, surface_x: u32, surface_y: u32) {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_cursor_position(&self, position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_position(&self, position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_cursor_position(&self, cursor_position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_cursor_position(&self, _position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_cursor_position(&self, position: Position) -> Result<(), ExternalError> {$/;"	f
set_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_cursor_position<P: Into<Position>>(&self, position: P) -> Result<(), ExternalError> {$/;"	f
set_cursor_position_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_position_physical(&self, x: i32, y: i32) -> Result<(), ExternalError> {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_cursor_visible(&self, _: bool) {}$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_cursor_visible(&self, _visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_cursor_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_cursor_visible(&self, visible: bool) {$/;"	f
set_dark_mode_for_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^fn set_dark_mode_for_window(hwnd: HWND, is_dark_mode: bool) -> bool {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_decorations(&self, _decorations: bool) {}$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_decorations(&self, _decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_decorations(&self, decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_decorations(&self, decorate: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_decorations(&mut self, decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_decorations(&self, decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_decorations(&self, decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_decorations(&self, _decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_decorations(&self, decorations: bool) {$/;"	f
set_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_decorations(&self, decorations: bool) {$/;"	f
set_decorations_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_decorations_inner(&self, decorations: bool) -> util::Flusher<'_> {$/;"	f
set_destroy_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^pub unsafe fn set_destroy_callback($/;"	f
set_device_event_filter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_device_event_filter(&self, _filter: DeviceEventFilter) {$/;"	f
set_device_event_filter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_device_event_filter(&self, _filter: DeviceEventFilter) {$/;"	f
set_device_event_filter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn set_device_event_filter(&self, filter: DeviceEventFilter) {$/;"	f
set_device_event_filter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn set_device_event_filter(&self, filter: DeviceEventFilter) {$/;"	f
set_enable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_enable(&self, enabled: bool) {$/;"	f
set_enable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_enable(&self, enabled: bool);$/;"	f
set_enable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_enable(&self, enabled: bool) {$/;"	f
set_exit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_exit(&mut self) {$/;"	f
set_exit_with_code	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_exit_with_code(&mut self, code: i32) {$/;"	f
set_focused	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_focused(&mut self, is_focused: bool) -> bool {$/;"	f
set_for_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^    pub fn set_for_window(&self, hwnd: HWND, icon_type: IconType) {$/;"	f
set_frame_top_left_point_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_frame_top_left_point_async(ns_window: id, point: NSPoint) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_fullscreen(&self, _monitor: Option<window::Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_fullscreen(&self, monitor: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_fullscreen(&self, monitor: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_fullscreen(&self, fullscreen: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_fullscreen(&self, fullscreen: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_fullscreen(&self, fullscreen: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_fullscreen(&self, monitor: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_fullscreen(&self, fullscreen: Option<Fullscreen>) {$/;"	f
set_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_fullscreen(&self, fullscreen: Option<Fullscreen>) {$/;"	f
set_fullscreen_hint	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_fullscreen_hint(&self, fullscreen: bool) -> util::Flusher<'_> {$/;"	f
set_fullscreen_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_fullscreen_inner(&self, fullscreen: Option<Fullscreen>) -> Option<util::Flusher<'_>> {$/;"	f
set_gtk_theme_variant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_gtk_theme_variant(&self, variant: String) -> util::Flusher<'_> {$/;"	f
set_has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn set_has_shadow(&self, has_shadow: bool) {$/;"	f
set_has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn set_has_shadow(&self, has_shadow: bool);$/;"	f
set_has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn set_has_shadow(&self, has_shadow: bool) {$/;"	f
set_icon_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_icon_inner(&self, icon: Icon) -> util::Flusher<'_> {$/;"	f
set_ignore_mouse_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_ignore_mouse_events(ns_window: id, ignore: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_ime_allowed(&self, _allowed: bool) {}$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_ime_allowed(&self, _allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_ime_allowed(&self, allowed: bool, event_sink: &mut EventSink) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn set_ime_allowed(&mut self, window: ffi::Window, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^pub unsafe fn set_ime_allowed(ns_view: id, ime_allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_ime_allowed(&self, _allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    pub unsafe fn set_ime_allowed(hwnd: HWND, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_ime_allowed(&self, allowed: bool) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_ime_position(&self, _position: Position) {}$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_ime_position(&self, _position: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_ime_position(&self, position: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^    pub fn set_ime_position(&self, x: i32, y: i32) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_ime_position(&self, position: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_ime_position(&self, position: LogicalPosition<u32>) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_ime_position(&self, spot: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^pub unsafe fn set_ime_position(ns_view: id, position: LogicalPosition<f64>) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_ime_position(&self, spot: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_ime_position(&self, _position: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    pub unsafe fn set_ime_position(&self, spot: Position, scale_factor: f64) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_ime_position(&self, spot: Position) {$/;"	f
set_ime_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_ime_position<P: Into<Position>>(&self, position: P) {$/;"	f
set_in_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn set_in_callback(&self, in_callback: bool) {$/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_index_buffer($/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_index_buffer($/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_index_buffer($/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_index_buffer(&mut self, buffer_slice: BufferSlice<'a>, index_format: IndexFormat) {$/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_index_buffer(&mut self, buffer_slice: BufferSlice<'a>, index_format: IndexFormat) {$/;"	f
set_index_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_index_buffer(&mut self, buffer_slice: BufferSlice<'a>, index_format: IndexFormat);$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_inner_size(&self, _size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_inner_size(&self, _size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_inner_size(&self, size: Size) {$/;"	f
set_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_inner_size<S: Into<Size>>(&self, size: S) {$/;"	f
set_input_allowed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/text_input/mod.rs	/^    pub fn set_input_allowed(&self, allowed: bool) {$/;"	f
set_instantiate_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^pub unsafe fn set_instantiate_callback($/;"	f
set_key_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn set_key_window(window: id) {$/;"	f
set_level_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_level_async(ns_window: id, level: ffi::NSWindowLevel) {$/;"	f
set_listener	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/runner.rs	/^    pub fn set_listener(&self, event_handler: Box<dyn FnMut(Event<'_, T>, &mut ControlFlow)>) {$/;"	f
set_locked_cursor_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_locked_cursor_position(&self, position: LogicalPosition<u32>) {$/;"	f
set_marked_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn set_marked_text($/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_max_inner_size(&self, _: Option<Size>) {}$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_max_inner_size(&self, _dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_max_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_max_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_max_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_max_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^unsafe fn set_max_inner_size<V: NSWindow + Copy>(window: V, mut max_size: LogicalSize<f64>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_max_inner_size(&self, _dimensions: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_max_inner_size(&self, size: Option<Size>) {$/;"	f
set_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_max_inner_size<S: Into<Size>>(&self, max_size: Option<S>) {$/;"	f
set_max_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_max_size(&mut self, max_size: Option<(u32, u32)>) {$/;"	f
set_maximizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_maximizable(&mut self, maximizable: bool) {$/;"	f
set_maximizable_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_maximizable_inner(&self, maximizable: bool) -> util::Flusher<'_> {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_maximized(&self, _maximized: bool) {}$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_maximized(&self, _maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_maximized(&self, _maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_maximized(&self, maximized: bool) {$/;"	f
set_maximized_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_maximized_async($/;"	f
set_maximized_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_maximized_inner(&self, maximized: bool) -> util::Flusher<'_> {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_min_inner_size(&self, _: Option<Size>) {}$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_min_inner_size(&self, _dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_min_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_min_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_min_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_min_inner_size(&self, dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^unsafe fn set_min_inner_size<V: NSWindow + Copy>(window: V, mut min_size: LogicalSize<f64>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_min_inner_size(&self, _dimensions: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_min_inner_size(&self, size: Option<Size>) {$/;"	f
set_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_min_inner_size<S: Into<Size>>(&self, min_size: Option<S>) {$/;"	f
set_min_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_min_size(&mut self, min_size: Option<(u32, u32)>) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_minimized(&self, _minimized: bool) {}$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_minimized(&self, _minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_minimized(&self, _minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_minimized(&self, minimized: bool) {$/;"	f
set_minimized_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_minimized_inner(&self, minimized: bool) -> util::Flusher<'_> {$/;"	f
set_modifier	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^fn set_modifier(state: &mut ModifiersState, modifier: Modifier, value: bool) {$/;"	f
set_motif_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_motif_hints(&self, window: ffi::Window, hints: &MotifHints) -> Flusher<'_> {$/;"	f
set_netwm	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_netwm($/;"	f
set_normal_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_normal_hints($/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_outer_position(&self, _position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_outer_position(&self, physical_position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_outer_position(&self, position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_outer_position(&self, _: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_outer_position(&self, position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_outer_position(&self, position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_outer_position(&self, position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_outer_position(&self, position: Position) {$/;"	f
set_outer_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_outer_position<P: Into<Position>>(&self, position: P) {$/;"	f
set_panic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn set_panic(&self, p: Box<dyn Any + Send + 'static>) {$/;"	f
set_pid	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_pid(&self) -> Option<util::Flusher<'_>> {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_pipeline(&mut self, pipeline: &wgc::id::ComputePipelineId) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_pipeline(&mut self, pipeline: &wgc::id::RenderPipelineId) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_pipeline(&mut self, pipeline: &Sendable<web_sys::GpuComputePipeline>) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_pipeline(&mut self, pipeline: &Sendable<web_sys::GpuRenderPipeline>) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_pipeline(&mut self, pipeline: &Ctx::ComputePipelineId);$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_pipeline(&mut self, pipeline: &Ctx::RenderPipelineId);$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_pipeline(&mut self, pipeline: &'a ComputePipeline) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_pipeline(&mut self, pipeline: &'a RenderPipeline) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_pipeline(&mut self, pipeline: &'a RenderPipeline) {$/;"	f
set_pipeline	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_pipeline(&mut self, pipeline: &'a RenderPipeline);$/;"	f
set_poll	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_poll(&mut self) {$/;"	f
set_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_position(&mut self, position: Option<(i32, i32)>) {$/;"	f
set_preferred_screen_edges_deferring_system_gestures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_preferred_screen_edges_deferring_system_gestures(&self, edges: ScreenEdge) {$/;"	f
set_preferred_screen_edges_deferring_system_gestures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_preferred_screen_edges_deferring_system_gestures(&self, edges: ScreenEdge);$/;"	f
set_preferred_screen_edges_deferring_system_gestures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_preferred_screen_edges_deferring_system_gestures(&self, edges: ScreenEdge) {$/;"	f
set_prefers_home_indicator_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_prefers_home_indicator_hidden(&self, hidden: bool) {$/;"	f
set_prefers_home_indicator_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_prefers_home_indicator_hidden(&self, hidden: bool);$/;"	f
set_prefers_home_indicator_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_prefers_home_indicator_hidden(&self, hidden: bool) {$/;"	f
set_prefers_status_bar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_prefers_status_bar_hidden(&self, hidden: bool) {$/;"	f
set_prefers_status_bar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_prefers_status_bar_hidden(&self, hidden: bool);$/;"	f
set_prefers_status_bar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_prefers_status_bar_hidden(&self, hidden: bool) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_push_constants(&mut self, offset: u32, data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_push_constants(&mut self, stages: wgt::ShaderStages, offset: u32, data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_push_constants(&mut self, _offset: u32, _data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_push_constants(&mut self, _stages: wgt::ShaderStages, _offset: u32, _data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_push_constants(&mut self, offset: u32, data: &[u8]);$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_push_constants(&mut self, stages: ShaderStages, offset: u32, data: &[u8]);$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_push_constants(&mut self, offset: u32, data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_push_constants(&mut self, stages: ShaderStages, offset: u32, data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_push_constants(&mut self, stages: wgt::ShaderStages, offset: u32, data: &[u8]) {$/;"	f
set_push_constants	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_push_constants(&mut self, stages: wgt::ShaderStages, offset: u32, data: &[u8]);$/;"	f
set_ready	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn set_ready(&self) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_resizable(&self, _resizeable: bool) {}$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_resizable(&self, _resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_resizable(&self, _resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_resizable(&self, resizable: bool) {$/;"	f
set_resize_increments	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_resize_increments(&mut self, resize_increments: Option<(u32, u32)>) {$/;"	f
set_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_scale_factor(&self, scale_factor: f64) {$/;"	f
set_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_scale_factor(&self, scale_factor: f64);$/;"	f
set_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_scale_factor(&self, scale_factor: f64) {$/;"	f
set_scissor_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_scissor_rect(&mut self, x: u32, y: u32, width: u32, height: u32) {$/;"	f
set_scissor_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_scissor_rect(&mut self, x: u32, y: u32, width: u32, height: u32) {$/;"	f
set_scissor_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_scissor_rect(&mut self, x: u32, y: u32, width: u32, height: u32);$/;"	f
set_scissor_rect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_scissor_rect(&mut self, x: u32, y: u32, width: u32, height: u32) {$/;"	f
set_simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn set_simple_fullscreen(&self, fullscreen: bool) -> bool {$/;"	f
set_simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn set_simple_fullscreen(&self, fullscreen: bool) -> bool;$/;"	f
set_simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn set_simple_fullscreen(&self, fullscreen: bool) -> bool {$/;"	f
set_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_size(&mut self, size: Option<(u32, u32)>) {$/;"	f
set_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_size(self, hwnd: HWND, size: PhysicalSize<u32>) {$/;"	f
set_skip_taskbar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_skip_taskbar(&self, skip: bool) {$/;"	f
set_skip_taskbar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_skip_taskbar(&self, skip: bool);$/;"	f
set_skip_taskbar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_skip_taskbar(&self, skip: bool) {$/;"	f
set_spot	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub fn set_spot(&mut self, xconn: &Arc<XConnection>, x: c_short, y: c_short) {$/;"	f
set_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn set_state(&mut self, new_state: AppStateImpl) {$/;"	f
set_stencil_reference	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_stencil_reference(&mut self, reference: u32) {$/;"	f
set_stencil_reference	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_stencil_reference(&mut self, reference: u32) {$/;"	f
set_stencil_reference	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_stencil_reference(&mut self, reference: u32);$/;"	f
set_stencil_reference	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_stencil_reference(&mut self, reference: u32) {$/;"	f
set_style_mask	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^unsafe fn set_style_mask(ns_window: id, ns_view: id, mask: NSWindowStyleMask) {$/;"	f
set_style_mask_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_style_mask_async(ns_window: id, ns_view: id, mask: NSWindowStyleMask) {$/;"	f
set_style_mask_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn set_style_mask_async(&self, mask: NSWindowStyleMask) {$/;"	f
set_style_mask_sync	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_style_mask_sync(ns_window: id, ns_view: id, mask: NSWindowStyleMask) {$/;"	f
set_style_mask_sync	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn set_style_mask_sync(&self, mask: NSWindowStyleMask) {$/;"	f
set_taskbar_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_taskbar_icon(&self, taskbar_icon: Option<Icon>) {$/;"	f
set_taskbar_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_taskbar_icon(&self, taskbar_icon: Option<Icon>);$/;"	f
set_taskbar_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_taskbar_icon(&self, taskbar_icon: Option<Icon>) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_title(&self, _title: &str) {}$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_title(&self, _title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_title(&self, text: &str) {$/;"	f
set_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_title(&self, title: &str) {$/;"	f
set_title_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn set_title_async(ns_window: id, title: String) {$/;"	f
set_title_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_title_inner(&self, title: &str) -> util::Flusher<'_> {$/;"	f
set_undecorated_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_undecorated_shadow(&self, shadow: bool) {$/;"	f
set_undecorated_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn set_undecorated_shadow(&self, shadow: bool);$/;"	f
set_undecorated_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_undecorated_shadow(&self, shadow: bool) {$/;"	f
set_user_attention	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn set_user_attention(&self, request_type: Option<UserAttentionType>) {$/;"	f
set_valid_orientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_valid_orientations(&self, valid_orientations: ValidOrientations) {$/;"	f
set_valid_orientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn set_valid_orientations(&self, valid_orientations: ValidOrientations);$/;"	f
set_valid_orientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_valid_orientations(&self, valid_orientations: ValidOrientations) {$/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_vertex_buffer($/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_vertex_buffer($/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_vertex_buffer($/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_vertex_buffer(&mut self, slot: u32, buffer_slice: BufferSlice<'a>) {$/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_vertex_buffer(&mut self, slot: u32, buffer_slice: BufferSlice<'a>) {$/;"	f
set_vertex_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/encoder.rs	/^    fn set_vertex_buffer(&mut self, slot: u32, buffer_slice: BufferSlice<'a>);$/;"	f
set_viewport	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn set_viewport($/;"	f
set_viewport	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn set_viewport($/;"	f
set_viewport	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn set_viewport($/;"	f
set_viewport	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn set_viewport(&mut self, x: f32, y: f32, w: f32, h: f32, min_depth: f32, max_depth: f32) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_visible(&self, _visibility: bool) {}$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn set_visible(&self, _visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_visible(&self, _visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_visible(&self, visible: bool) {$/;"	f
set_wait	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_wait(&mut self) {$/;"	f
set_wait_until	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn set_wait_until(&mut self, instant: Instant) {$/;"	f
set_window_flags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_window_flags<F>(mut this: MutexGuard<'_, Self>, window: HWND, f: F)$/;"	f
set_window_flags_in_place	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn set_window_flags_in_place<F>(&mut self, f: F)$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn set_window_icon(&self, _window_icon: Option<crate::icon::Icon>) {}$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn set_window_icon(&self, _icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn set_window_icon(&self, _window_icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn set_window_icon(&self, icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub fn set_window_icon(&self, _icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub fn set_window_icon(&self, _window_icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn set_window_icon(&self, window_icon: Option<Icon>) {$/;"	f
set_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn set_window_icon(&self, window_icon: Option<Icon>) {$/;"	f
set_window_long	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^unsafe fn set_window_long(hwnd: HWND, nindex: WINDOW_LONG_PTR_INDEX, dwnewlong: isize) -> isize {$/;"	f
set_window_types	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn set_window_types(&self, window_types: Vec<util::WindowType>) -> util::Flusher<'_> {$/;"	f
set_wm_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/hint.rs	/^    pub fn set_wm_hints($/;"	f
setup_control_flow_observers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^fn setup_control_flow_observers() {$/;"	f
setup_control_flow_observers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^pub fn setup_control_flow_observers(panic_info: Weak<PanicInfo>) {$/;"	f
shader_module_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn shader_module_drop(&self, shader_module: &Self::ShaderModuleId) {$/;"	f
shader_module_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn shader_module_drop(&self, _shader_module: &Self::ShaderModuleId) {$/;"	f
shader_module_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn shader_module_drop(&self, shader_module: &Self::ShaderModuleId);$/;"	f
shift	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn shift(&self) -> bool {$/;"	f
should_apps_use_dark_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^fn should_apps_use_dark_mode() -> bool {$/;"	f
should_autorotate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^        extern "C" fn should_autorotate(_: &Object, _: Sel) -> BOOL {$/;"	f
should_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn should_buffer(&self) -> bool {$/;"	f
should_exit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn should_exit(&self) -> bool {$/;"	f
should_redraw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn should_redraw(&self) -> Vec<WindowId> {$/;"	f
should_use_dark_mode	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^fn should_use_dark_mode() -> bool {$/;"	f
simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn simple_fullscreen(&self) -> bool {$/;"	f
simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn simple_fullscreen(&self) -> bool;$/;"	f
simple_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    fn simple_fullscreen(&self) -> bool {$/;"	f
single_iteration	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^        fn single_iteration<T, F>($/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn size(&self) -> wgt::BufferAddress {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/canvas.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn size(&self) -> PhysicalSize<u32> {$/;"	f
slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn slice(&self) -> &[u8] {$/;"	f
slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn slice(&self) -> &[u8] {$/;"	f
slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn slice(&self) -> &[u8];$/;"	f
slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn slice<S: RangeBounds<BufferAddress>>(&self, bounds: S) -> BufferSlice {$/;"	f
slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn slice_mut(&mut self) -> &mut [u8] {$/;"	f
slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn slice_mut(&mut self) -> &mut [u8] {$/;"	f
slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn slice_mut(&mut self) -> &mut [u8];$/;"	f
source	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	f
source	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/icon.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	f
source	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/xdisplay.rs	/^    fn source(&self) -> Option<&(dyn Error + 'static)> {$/;"	f
spawn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn spawn<F>(self, event_handler: F)$/;"	f
spawn	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/mod.rs	/^    pub fn spawn<F>(self, mut event_handler: F)$/;"	f
start	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn start(&mut self) {$/;"	f
start	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn start(&mut self) {$/;"	f
start_at	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn start_at(&mut self, instant: Instant) {$/;"	f
start_at	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn start_at(&mut self, instant: Instant) {$/;"	f
start_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn start_capture(&self) {$/;"	f
state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn state(&self) -> &AppStateImpl {$/;"	f
state_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn state_mut(&mut self) -> &mut AppStateImpl {$/;"	f
sticky_exit_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^fn sticky_exit_callback<T, F>($/;"	f
stop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn stop(&mut self) {$/;"	f
stop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^    pub fn stop(&mut self) {$/;"	f
stop_app_on_panic	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^pub fn stop_app_on_panic<F: FnOnce() -> R + UnwindSafe, R>($/;"	f
stop_capture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn stop_capture(&self) {$/;"	f
string	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn string(self) -> id {$/;"	f
string	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/ffi.rs	/^    unsafe fn string(self) -> id; \/\/ *mut NSString$/;"	f
stringByAppendingString_	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn stringByAppendingString_(self, other: id) -> id {$/;"	f
stringByAppendingString_	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/ffi.rs	/^    unsafe fn stringByAppendingString_(self, other: id) -> id;$/;"	f
sub	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn sub(self, other: Duration) -> SystemTime {$/;"	f
sub	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn sub(self, rhs: Duration) -> Self {$/;"	f
sub	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn sub(self, rhs: Instant) -> Duration {$/;"	f
sub_assign	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/instant-0.1.12/src/wasm.rs	/^    fn sub_assign(&mut self, rhs: Duration) {$/;"	f
submit	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn submit<I: IntoIterator<Item = CommandBuffer>>($/;"	f
superclass	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn superclass(this: &Object) -> &Class {$/;"	f
surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/mod.rs	/^    pub fn surface(&self) -> &WlSurface {$/;"	f
surface_configure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_configure($/;"	f
surface_configure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_configure($/;"	f
surface_configure	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_configure($/;"	f
surface_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_drop(&self, _surface: &Self::SurfaceId) {$/;"	f
surface_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_drop(&self, _surface: &Self::SurfaceId) {$/;"	f
surface_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_drop(&self, surface: &Self::SurfaceId);$/;"	f
surface_get_current_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_get_current_texture($/;"	f
surface_get_current_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_get_current_texture($/;"	f
surface_get_current_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_get_current_texture($/;"	f
surface_get_supported_alpha_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_get_supported_alpha_modes($/;"	f
surface_get_supported_alpha_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_get_supported_alpha_modes($/;"	f
surface_get_supported_alpha_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_get_supported_alpha_modes($/;"	f
surface_get_supported_formats	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_get_supported_formats($/;"	f
surface_get_supported_formats	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_get_supported_formats($/;"	f
surface_get_supported_formats	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_get_supported_formats($/;"	f
surface_get_supported_present_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_get_supported_present_modes($/;"	f
surface_get_supported_present_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_get_supported_present_modes($/;"	f
surface_get_supported_present_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_get_supported_present_modes($/;"	f
surface_present	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_present(&self, texture: &Self::TextureId, detail: &Self::SurfaceOutputDetail) {$/;"	f
surface_present	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_present(&self, _texture: &Self::TextureId, _detail: &Self::SurfaceOutputDetail) {$/;"	f
surface_present	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_present(&self, texture: &Self::TextureId, detail: &Self::SurfaceOutputDetail);$/;"	f
surface_texture_discard	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn surface_texture_discard($/;"	f
surface_texture_discard	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn surface_texture_discard($/;"	f
surface_texture_discard	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn surface_texture_discard($/;"	f
sync	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn sync(self) -> Result<(), XError> {$/;"	f
sync_with_server	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/mod.rs	/^    pub fn sync_with_server(&self) -> Result<(), XError> {$/;"	f
system_has_ime	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/ime.rs	/^    unsafe fn system_has_ime() -> bool {$/;"	f
take	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn take(&self) -> Option<Box<dyn Any + Send + 'static>> {$/;"	f
take_events	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn take_events(&self) -> VecDeque<EventWrapper> {$/;"	f
take_panic_error	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn take_panic_error(&self) -> Result<(), PanicError> {$/;"	f
take_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn take_state(&mut self) -> AppStateImpl {$/;"	f
taskbar_mark_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^unsafe fn taskbar_mark_fullscreen(handle: HWND, fullscreen: bool) {$/;"	f
terminated	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn terminated() {$/;"	f
terminated_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn terminated_transition(&mut self) -> Box<dyn EventHandler> {$/;"	f
test_vertex_attr_array	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/macros.rs	/^fn test_vertex_attr_array() {$/;"	f
text_input_entered	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn text_input_entered(&mut self, text_input: TextInputHandler) {$/;"	f
text_input_left	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/window/shim.rs	/^    pub fn text_input_left(&mut self, text_input: TextInputHandler) {$/;"	f
texture_as_hal	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    pub unsafe fn texture_as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Texture>)>($/;"	f
texture_create_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn texture_create_view($/;"	f
texture_create_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn texture_create_view($/;"	f
texture_create_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn texture_create_view($/;"	f
texture_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn texture_destroy(&self, texture: &Self::TextureId) {$/;"	f
texture_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn texture_destroy(&self, texture: &Self::TextureId) {$/;"	f
texture_destroy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn texture_destroy(&self, buffer: &Self::TextureId);$/;"	f
texture_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn texture_drop(&self, texture: &Self::TextureId) {$/;"	f
texture_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn texture_drop(&self, _texture: &Self::TextureId) {$/;"	f
texture_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn texture_drop(&self, texture: &Self::TextureId);$/;"	f
texture_view_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^    fn texture_view_drop(&self, texture_view: &Self::TextureViewId) {$/;"	f
texture_view_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn texture_view_drop(&self, _texture_view: &Self::TextureViewId) {$/;"	f
texture_view_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn texture_view_drop(&self, texture_view: &Self::TextureViewId);$/;"	f
theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn theme(&self) -> Theme {$/;"	f
theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn theme(&self) -> Theme;$/;"	f
theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window.rs	/^    pub fn theme(&self) -> Theme {$/;"	f
thread_msg_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn thread_msg_target(&self) -> HWND {$/;"	f
throw	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn throw(msg: &str) {$/;"	f
to_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_logical<P: Pixel>(&self, scale_factor: f64) -> LogicalPosition<P> {$/;"	f
to_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_logical<P: Pixel>(&self, scale_factor: f64) -> LogicalSize<P> {$/;"	f
to_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_logical<X: Pixel>(&self, scale_factor: f64) -> LogicalPosition<X> {$/;"	f
to_logical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_logical<X: Pixel>(&self, scale_factor: f64) -> LogicalSize<X> {$/;"	f
to_packed_argb	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/icon.rs	/^    pub fn to_packed_argb(&self) -> Cardinal {$/;"	f
to_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_physical<P: Pixel>(&self, scale_factor: f64) -> PhysicalPosition<P> {$/;"	f
to_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_physical<P: Pixel>(&self, scale_factor: f64) -> PhysicalSize<P> {$/;"	f
to_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_physical<X: Pixel>(&self, scale_factor: f64) -> PhysicalPosition<X> {$/;"	f
to_physical	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^    pub fn to_physical<X: Pixel>(&self, scale_factor: f64) -> PhysicalSize<X> {$/;"	f
to_static	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn to_static(self) -> Option<Event<'static, T>> {$/;"	f
to_static	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub fn to_static(self) -> Option<WindowEvent<'static>> {$/;"	f
to_window_styles	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn to_window_styles(self) -> (WINDOW_STYLE, WINDOW_EX_STYLE) {$/;"	f
toggle_full_screen_async	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/async.rs	/^pub unsafe fn toggle_full_screen_async($/;"	f
toggle_style_mask	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub unsafe fn toggle_style_mask(window: id, view: id, mask: NSWindowStyleMask, on: bool) {$/;"	f
touch_bar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn touch_bar(_this: &Object, _sel: Sel) -> BOOL {$/;"	f
trace_scope	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^macro_rules! trace_scope {$/;"	d
translate_coords	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/geometry.rs	/^    pub fn translate_coords($/;"	f
transmute	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^macro_rules! transmute {$/;"	d
transparent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn transparent(&self) -> bool {$/;"	f
try_cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_cast<A: NoUninit, B: CheckedBitPattern>($/;"	f
try_cast	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_cast<A: NoUninit, B: AnyBitPattern>($/;"	f
try_cast_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_arc<$/;"	f
try_cast_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_box<A: NoUninit, B: AnyBitPattern>($/;"	f
try_cast_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_cast_mut<$/;"	f
try_cast_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_cast_mut<$/;"	f
try_cast_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_rc<A: NoUninit + AnyBitPattern, B: NoUninit + AnyBitPattern>($/;"	f
try_cast_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_cast_ref<A: NoUninit, B: CheckedBitPattern>($/;"	f
try_cast_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_cast_ref<A: NoUninit, B: AnyBitPattern>($/;"	f
try_cast_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_cast_slice<A: NoUninit, B: CheckedBitPattern>($/;"	f
try_cast_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_cast_slice<A: NoUninit, B: AnyBitPattern>($/;"	f
try_cast_slice_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_slice_arc<$/;"	f
try_cast_slice_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_slice_box<A: NoUninit, B: AnyBitPattern>($/;"	f
try_cast_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_cast_slice_mut<$/;"	f
try_cast_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_cast_slice_mut<$/;"	f
try_cast_slice_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_slice_rc<$/;"	f
try_cast_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_cast_vec<A: NoUninit, B: AnyBitPattern>($/;"	f
try_from_bytes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_from_bytes<T: CheckedBitPattern>($/;"	f
try_from_bytes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_from_bytes<T: AnyBitPattern>(s: &[u8]) -> Result<&T, PodCastError> {$/;"	f
try_from_bytes_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_from_bytes_mut<T: CheckedBitPattern + NoUninit>($/;"	f
try_from_bytes_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_from_bytes_mut<T: NoUninit + AnyBitPattern>($/;"	f
try_pod_read_unaligned	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/checked.rs	/^pub fn try_pod_read_unaligned<T: CheckedBitPattern>($/;"	f
try_pod_read_unaligned	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/lib.rs	/^pub fn try_pod_read_unaligned<T: AnyBitPattern>($/;"	f
try_recv	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn try_recv(&mut self) -> Result<T, TryRecvError> {$/;"	f
try_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/dark_mode.rs	/^pub fn try_theme(hwnd: HWND, preferred_theme: Option<Theme>) -> Theme {$/;"	f
try_user_callback_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn try_user_callback_transition(&mut self) -> UserCallbackTransitionResult<'_> {$/;"	f
try_zeroed_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_zeroed_box<T: Zeroable>() -> Result<Box<T>, ()> {$/;"	f
try_zeroed_slice_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_zeroed_slice_box<T: Zeroable>($/;"	f
try_zeroed_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn try_zeroed_vec<T: Zeroable>(length: usize) -> Result<Vec<T>, ()> {$/;"	f
ui_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_screen(&self) -> *mut c_void {$/;"	f
ui_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_screen(&self) -> *mut c_void;$/;"	f
ui_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn ui_screen(&self) -> id {$/;"	f
ui_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_view(&self) -> *mut c_void {$/;"	f
ui_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_view(&self) -> *mut c_void;$/;"	f
ui_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn ui_view(&self) -> id {$/;"	f
ui_view_controller	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_view_controller(&self) -> *mut c_void {$/;"	f
ui_view_controller	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_view_controller(&self) -> *mut c_void;$/;"	f
ui_view_controller	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn ui_view_controller(&self) -> id {$/;"	f
ui_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_window(&self) -> *mut c_void {$/;"	f
ui_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn ui_window(&self) -> *mut c_void;$/;"	f
ui_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub fn ui_window(&self) -> id {$/;"	f
uiscreens	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^pub unsafe fn uiscreens() -> VecDeque<MonitorHandle> {$/;"	f
unconfine	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn unconfine(&self) {$/;"	f
unfocus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/context.rs	/^    pub fn unfocus(&self, xconn: &Arc<XConnection>) -> Result<(), XError> {$/;"	f
unfocus	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/mod.rs	/^    pub fn unfocus(&mut self, window: ffi::Window) -> Result<bool, XError> {$/;"	f
unlock	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/seat/pointer/mod.rs	/^    pub fn unlock(&self) {$/;"	f
unmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn unmap(&self) {$/;"	f
unmark_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn unmark_text(this: &Object, _sel: Sel) {$/;"	f
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/window.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/device.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/window.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unsafe	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub const unsafe fn dummy() -> Self {$/;"	c
unset_for_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/icon.rs	/^pub fn unset_for_window(hwnd: HWND, icon_type: IconType) {$/;"	f
unset_icon_inner	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn unset_icon_inner(&self) -> util::Flusher<'_> {$/;"	f
unset_instantiate_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^pub unsafe fn unset_instantiate_callback($/;"	f
update	/Users/mart/code/wgpu_plot/src/lib.rs	/^    fn update(&mut self, dt: std::time::Duration) {}$/;"	f
update_cached_frame_extents	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn update_cached_frame_extents(&self) {$/;"	f
update_cached_wm_info	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^    pub fn update_cached_wm_info(&self, root: ffi::Window) {$/;"	f
update_cursor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/cursor.rs	/^    fn update_cursor(&self, window: ffi::Window, cursor: ffi::Cursor) {$/;"	f
update_device_event_filter	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn update_device_event_filter(&self, focus: bool) {$/;"	f
update_keymap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn update_keymap(&mut self, mods: &ModifierKeymap) {$/;"	f
update_modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^        macro_rules! update_modifiers {$/;"	d
update_modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn update_modifiers<T>(window: HWND, userdata: &WindowData<T>) {$/;"	f
update_normal_hints	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    fn update_normal_hints<F>(&self, callback: F) -> Result<(), XError>$/;"	f
update_potentially_stale_modifiers	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^fn update_potentially_stale_modifiers(state: &mut ViewState, event: id) {$/;"	f
update_start_time	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn update_start_time(&self) {$/;"	f
update_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/modifiers.rs	/^    pub fn update_state($/;"	f
usage	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn usage(&self) -> BufferUsages {$/;"	f
userify	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn userify<T: 'static>(self) -> Event<'a, T> {$/;"	f
valid_attributes_for_marked_text	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn valid_attributes_for_marked_text(_this: &Object, _sel: Sel) -> id {$/;"	f
validate_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/dpi.rs	/^pub fn validate_scale_factor(scale_factor: f64) -> bool {$/;"	f
vertex_attr_array	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/macros.rs	/^macro_rules! vertex_attr_array {$/;"	d
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = VideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = monitor::VideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn video_modes(&self) -> Box<dyn Iterator<Item = RootVideoMode>> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/output.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
video_modes	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/monitor.rs	/^    pub fn video_modes(&self) -> impl Iterator<Item = RootVideoMode> {$/;"	f
view_did_move_to_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn view_did_move_to_window(this: &Object, _sel: Sel) {$/;"	f
view_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    fn view_size(&self) -> LogicalSize<f64> {$/;"	f
virtual_key_code	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event.rs	/^pub fn virtual_key_code(event: &KeyboardEvent) -> Option<VirtualKeyCode> {$/;"	f
vkey_to_winit_vkey	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event.rs	/^pub fn vkey_to_winit_vkey(vkey: VIRTUAL_KEY) -> Option<VirtualKeyCode> {$/;"	f
wait	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^    fn wait(&self) {$/;"	f
wait_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^fn wait_thread(parent_thread_id: u32, msg_window_id: HWND) {$/;"	f
wait_thread_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop/runner.rs	/^    pub fn wait_thread_id(&self) -> u32 {$/;"	f
wake	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/pollster-0.2.5/src/lib.rs	/^    fn wake(self: Arc<Self>) {$/;"	f
waker	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn waker(&self) -> MutexGuard<'_, EventLoopWaker> {$/;"	f
wakeup	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    pub fn wakeup(panic_info: Weak<PanicInfo>) {$/;"	f
wakeup_main_loop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^        extern "C" fn wakeup_main_loop(_timer: CFRunLoopTimerRef, _info: *mut c_void) {}$/;"	f
wakeup_main_loop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/observer.rs	/^        extern "C" fn wakeup_main_loop(_timer: CFRunLoopTimerRef, _info: *mut c_void) {}$/;"	f
wakeup_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn wakeup_transition(&mut self) -> Option<EventWrapper> {$/;"	f
wants_key_down_for_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/view.rs	/^extern "C" fn wants_key_down_for_event(_this: &Object, _sel: Sel, _event: id) -> BOOL {$/;"	f
wayland_display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_display(&self) -> Option<*mut raw::c_void> {$/;"	f
wayland_display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_display(&self) -> Option<*mut raw::c_void>;$/;"	f
wayland_set_csd_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_set_csd_theme(&self, config: Theme);$/;"	f
wayland_set_csd_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_set_csd_theme(&self, theme: Theme) {$/;"	f
wayland_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_surface(&self) -> Option<*mut raw::c_void> {$/;"	f
wayland_surface	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn wayland_surface(&self) -> Option<*mut raw::c_void>;$/;"	f
will_enter_foreground	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn will_enter_foreground(_: &Object, _: Sel, _: id) {}$/;"	f
will_launch	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^pub unsafe fn will_launch(queued_event_handler: Box<dyn EventHandler>) {$/;"	f
will_launch_transition	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/app_state.rs	/^    fn will_launch_transition(&mut self, queued_event_handler: Box<dyn EventHandler>) {$/;"	f
will_resign_active	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn will_resign_active(_: &Object, _: Sel, _: id) {$/;"	f
will_terminate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/view.rs	/^    extern "C" fn will_terminate(_: &Object, _: Sel, _: id) {$/;"	f
will_terminate	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_delegate.rs	/^extern "C" fn will_terminate(_this: &Object, _: Sel, _: id) {$/;"	f
window_activation_hack	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^unsafe fn window_activation_hack(ns_app: id) {$/;"	f
window_did_become_key	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_become_key(this: &Object, _: Sel, _: id) {$/;"	f
window_did_change_backing_properties	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_change_backing_properties(this: &Object, _: Sel, _: id) {$/;"	f
window_did_change_occlusion_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_change_occlusion_state(this: &Object, _: Sel, _: id) {$/;"	f
window_did_enter_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_enter_fullscreen(this: &Object, _: Sel, _: id) {$/;"	f
window_did_exit_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_exit_fullscreen(this: &Object, _: Sel, _: id) {$/;"	f
window_did_fail_to_enter_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_fail_to_enter_fullscreen(this: &Object, _: Sel, _: id) {$/;"	f
window_did_move	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_move(this: &Object, _: Sel, _: id) {$/;"	f
window_did_resign_key	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_resign_key(this: &Object, _: Sel, _: id) {$/;"	f
window_did_resize	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_did_resize(this: &Object, _: Sel, _: id) {$/;"	f
window_exists	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^    fn window_exists(&self, window_id: ffi::Window) -> bool {$/;"	f
window_flags	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/window_state.rs	/^    pub fn window_flags(&self) -> WindowFlags {$/;"	f
window_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/util/mod.rs	/^pub fn window_position(position: LogicalPosition<f64>) -> NSPoint {$/;"	f
window_should_close	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_should_close(this: &Object, _: Sel, _: id) -> BOOL {$/;"	f
window_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/mod.rs	/^pub fn window_size() -> LogicalSize<f64> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/android/mod.rs	/^    pub fn window_target(&self) -> &event_loop::EventLoopWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/ios/event_loop.rs	/^    pub fn window_target(&self) -> &RootEventLoopWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^    pub fn window_target(&self) -> &crate::event_loop::EventLoopWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    pub fn window_target(&self) -> &RootEventLoopWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/event_loop.rs	/^    pub fn window_target(&self) -> &RootWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/event_loop/mod.rs	/^    pub fn window_target(&self) -> &RootEventLoopWindowTarget<T> {$/;"	f
window_target	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/event_loop.rs	/^    pub fn window_target(&self) -> &RootELW<T> {$/;"	f
window_will_close	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_will_close(this: &Object, _: Sel, _: id) {$/;"	f
window_will_enter_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_will_enter_fullscreen(this: &Object, _: Sel, _: id) {$/;"	f
window_will_exit_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_will_exit_fullscreen(this: &Object, _: Sel, _: id) {$/;"	f
window_will_use_fullscreen_presentation_options	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^extern "C" fn window_will_use_fullscreen_presentation_options($/;"	f
with_activation_policy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_activation_policy(&mut self, activation_policy: ActivationPolicy) -> &mut Self {$/;"	f
with_activation_policy	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_activation_policy(&mut self, activation_policy: ActivationPolicy) -> &mut Self;$/;"	f
with_always_on_top	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_always_on_top(mut self, always_on_top: bool) -> Self {$/;"	f
with_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_any_thread(&mut self, any_thread: bool) -> &mut Self {$/;"	f
with_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_any_thread(&mut self, any_thread: bool) -> &mut Self;$/;"	f
with_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_any_thread(&mut self, any_thread: bool) -> &mut Self {$/;"	f
with_any_thread	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_any_thread(&mut self, any_thread: bool) -> &mut Self;$/;"	f
with_base_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_base_size<S: Into<Size>>(mut self, base_size: S) -> Self {$/;"	f
with_base_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_base_size<S: Into<Size>>(self, base_size: S) -> Self;$/;"	f
with_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/app_state.rs	/^    fn with_callback<F>(&mut self, f: F)$/;"	f
with_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_canvas(mut self, canvas: Option<HtmlCanvasElement>) -> Self {$/;"	f
with_canvas	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_canvas(self, canvas: Option<HtmlCanvasElement>) -> Self;$/;"	f
with_decorations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_decorations(mut self, decorations: bool) -> Self {$/;"	f
with_default_menu	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_default_menu(&mut self, enable: bool) -> &mut Self {$/;"	f
with_default_menu	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_default_menu(&mut self, enable: bool) -> &mut Self;$/;"	f
with_disallow_hidpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_disallow_hidpi(mut self, disallow_hidpi: bool) -> WindowBuilder {$/;"	f
with_disallow_hidpi	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_disallow_hidpi(self, disallow_hidpi: bool) -> WindowBuilder;$/;"	f
with_dpi_aware	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_dpi_aware(&mut self, dpi_aware: bool) -> &mut Self {$/;"	f
with_dpi_aware	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_dpi_aware(&mut self, dpi_aware: bool) -> &mut Self;$/;"	f
with_drag_and_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_drag_and_drop(mut self, flag: bool) -> WindowBuilder {$/;"	f
with_drag_and_drop	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_drag_and_drop(self, flag: bool) -> WindowBuilder;$/;"	f
with_focusable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_focusable(mut self, focusable: bool) -> Self {$/;"	f
with_focusable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_focusable(self, focusable: bool) -> Self;$/;"	f
with_fullscreen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_fullscreen(mut self, fullscreen: Option<Fullscreen>) -> Self {$/;"	f
with_fullsize_content_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_fullsize_content_view(mut self, fullsize_content_view: bool) -> WindowBuilder {$/;"	f
with_fullsize_content_view	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_fullsize_content_view(self, fullsize_content_view: bool) -> WindowBuilder;$/;"	f
with_gtk_theme_variant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_gtk_theme_variant(mut self, variant: String) -> Self {$/;"	f
with_gtk_theme_variant	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_gtk_theme_variant(self, variant: String) -> Self;$/;"	f
with_has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_has_shadow(mut self, has_shadow: bool) -> WindowBuilder {$/;"	f
with_has_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_has_shadow(self, has_shadow: bool) -> WindowBuilder;$/;"	f
with_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_inner_size<S: Into<Size>>(mut self, size: S) -> Self {$/;"	f
with_max_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_max_inner_size<S: Into<Size>>(mut self, max_size: S) -> Self {$/;"	f
with_maximized	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_maximized(mut self, maximized: bool) -> Self {$/;"	f
with_menu	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_menu(mut self, menu: HMENU) -> WindowBuilder {$/;"	f
with_menu	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_menu(self, menu: HMENU) -> WindowBuilder;$/;"	f
with_min_inner_size	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_min_inner_size<S: Into<Size>>(mut self, min_size: S) -> Self {$/;"	f
with_movable_by_window_background	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_movable_by_window_background($/;"	f
with_movable_by_window_background	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_movable_by_window_background(self, movable_by_window_background: bool)$/;"	f
with_msg_hook	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_msg_hook<F>(&mut self, callback: F) -> &mut Self$/;"	f
with_name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_name(mut self, general: impl Into<String>, instance: impl Into<String>) -> Self {$/;"	f
with_name	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_name(self, general: impl Into<String>, instance: impl Into<String>) -> Self;$/;"	f
with_no_redirection_bitmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_no_redirection_bitmap(mut self, flag: bool) -> WindowBuilder {$/;"	f
with_no_redirection_bitmap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_no_redirection_bitmap(self, flag: bool) -> WindowBuilder;$/;"	f
with_options	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/web/web_sys/event_handle.rs	/^    pub fn with_options<U>($/;"	f
with_override_redirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_override_redirect(mut self, override_redirect: bool) -> Self {$/;"	f
with_override_redirect	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_override_redirect(self, override_redirect: bool) -> Self;$/;"	f
with_owner_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_owner_window(mut self, parent: HWND) -> WindowBuilder {$/;"	f
with_owner_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_owner_window(self, parent: HWND) -> WindowBuilder;$/;"	f
with_parent_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_parent_window(mut self, parent: HWND) -> WindowBuilder {$/;"	f
with_parent_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_parent_window(self, parent: HWND) -> WindowBuilder;$/;"	f
with_position	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_position<P: Into<Position>>(mut self, position: P) -> Self {$/;"	f
with_preferred_screen_edges_deferring_system_gestures	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_preferred_screen_edges_deferring_system_gestures($/;"	f
with_prefers_home_indicator_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_prefers_home_indicator_hidden(mut self, hidden: bool) -> WindowBuilder {$/;"	f
with_prefers_home_indicator_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_prefers_home_indicator_hidden(self, hidden: bool) -> WindowBuilder;$/;"	f
with_prefers_status_bar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_prefers_status_bar_hidden(mut self, hidden: bool) -> WindowBuilder {$/;"	f
with_prefers_status_bar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_prefers_status_bar_hidden(self, hidden: bool) -> WindowBuilder;$/;"	f
with_prevent_default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_prevent_default(mut self, prevent_default: bool) -> Self {$/;"	f
with_prevent_default	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/web.rs	/^    fn with_prevent_default(self, prevent_default: bool) -> Self;$/;"	f
with_resizable	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_resizable(mut self, resizable: bool) -> Self {$/;"	f
with_resize_increments	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_resize_increments(mut self, increments: LogicalSize<f64>) -> WindowBuilder {$/;"	f
with_resize_increments	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_resize_increments(self, increments: LogicalSize<f64>) -> WindowBuilder;$/;"	f
with_resize_increments	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_resize_increments<S: Into<Size>>(mut self, increments: S) -> Self {$/;"	f
with_resize_increments	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_resize_increments<S: Into<Size>>(self, increments: S) -> Self;$/;"	f
with_root_view_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_root_view_class(mut self, root_view_class: *const c_void) -> WindowBuilder {$/;"	f
with_root_view_class	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_root_view_class(self, root_view_class: *const c_void) -> WindowBuilder;$/;"	f
with_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_scale_factor(mut self, scale_factor: f64) -> WindowBuilder {$/;"	f
with_scale_factor	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_scale_factor(self, scale_factor: f64) -> WindowBuilder;$/;"	f
with_skip_taskbar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_skip_taskbar(mut self, skip: bool) -> WindowBuilder {$/;"	f
with_skip_taskbar	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_skip_taskbar(self, skip: bool) -> WindowBuilder;$/;"	f
with_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/event_loop/mod.rs	/^    fn with_state<U, F: FnOnce(&mut WinitState) -> U>(&mut self, f: F) -> U {$/;"	f
with_state	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^fn with_state<F: FnOnce(&mut WindowDelegateState) -> T, T>(this: &Object, callback: F) {$/;"	f
with_taskbar_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_taskbar_icon(mut self, taskbar_icon: Option<Icon>) -> WindowBuilder {$/;"	f
with_taskbar_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_taskbar_icon(self, taskbar_icon: Option<Icon>) -> WindowBuilder;$/;"	f
with_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_theme(mut self, theme: Option<Theme>) -> WindowBuilder {$/;"	f
with_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_theme(self, theme: Option<Theme>) -> WindowBuilder;$/;"	f
with_title	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_title<T: Into<String>>(mut self, title: T) -> Self {$/;"	f
with_title_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_title_hidden(mut self, title_hidden: bool) -> WindowBuilder {$/;"	f
with_title_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_title_hidden(self, title_hidden: bool) -> WindowBuilder;$/;"	f
with_titlebar_buttons_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_buttons_hidden(mut self, titlebar_buttons_hidden: bool) -> WindowBuilder {$/;"	f
with_titlebar_buttons_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_buttons_hidden(self, titlebar_buttons_hidden: bool) -> WindowBuilder;$/;"	f
with_titlebar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_hidden(mut self, titlebar_hidden: bool) -> WindowBuilder {$/;"	f
with_titlebar_hidden	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_hidden(self, titlebar_hidden: bool) -> WindowBuilder;$/;"	f
with_titlebar_transparent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_transparent(mut self, titlebar_transparent: bool) -> WindowBuilder {$/;"	f
with_titlebar_transparent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/macos.rs	/^    fn with_titlebar_transparent(self, titlebar_transparent: bool) -> WindowBuilder;$/;"	f
with_transparent	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_transparent(mut self, transparent: bool) -> Self {$/;"	f
with_undecorated_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_undecorated_shadow(mut self, shadow: bool) -> WindowBuilder {$/;"	f
with_undecorated_shadow	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/windows.rs	/^    fn with_undecorated_shadow(self, shadow: bool) -> WindowBuilder;$/;"	f
with_user_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn with_user_event() -> EventLoop<T> {$/;"	f
with_user_event	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/event_loop.rs	/^    pub fn with_user_event() -> Self {$/;"	f
with_valid_orientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_valid_orientations(mut self, valid_orientations: ValidOrientations) -> WindowBuilder {$/;"	f
with_valid_orientations	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/ios.rs	/^    fn with_valid_orientations(self, valid_orientations: ValidOrientations) -> WindowBuilder;$/;"	f
with_visible	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_visible(mut self, visible: bool) -> Self {$/;"	f
with_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_wayland(&mut self) -> &mut Self {$/;"	f
with_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_wayland(&mut self) -> &mut Self;$/;"	f
with_wayland_csd_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_wayland_csd_theme(mut self, theme: Theme) -> Self {$/;"	f
with_wayland_csd_theme	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_wayland_csd_theme(self, theme: Theme) -> Self;$/;"	f
with_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/event_processor.rs	/^    fn with_window<F, Ret>(&self, window_id: ffi::Window, callback: F) -> Option<Ret>$/;"	f
with_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/macos/window_delegate.rs	/^    fn with_window<F, T>(&mut self, callback: F) -> Option<T>$/;"	f
with_window_icon	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/window.rs	/^    pub fn with_window_icon(mut self, window_icon: Option<Icon>) -> Self {$/;"	f
with_x11	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11(&mut self) -> &mut Self {$/;"	f
with_x11	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11(&mut self) -> &mut Self;$/;"	f
with_x11_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_screen(mut self, screen_id: i32) -> Self {$/;"	f
with_x11_screen	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_screen(self, screen_id: i32) -> Self;$/;"	f
with_x11_visual	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_visual<T>(mut self, visual_infos: *const T) -> Self {$/;"	f
with_x11_visual	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_visual<T>(self, visual_infos: *const T) -> Self;$/;"	f
with_x11_window_type	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_window_type(mut self, x11_window_types: Vec<XWindowType>) -> Self {$/;"	f
with_x11_window_type	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn with_x11_window_type(self, x11_window_type: Vec<XWindowType>) -> Self;$/;"	f
wm_name_is_one_of	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/util/wm.rs	/^pub fn wm_name_is_one_of(names: &[&str]) -> bool {$/;"	f
wrap	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn wrap(s: Inner) -> Self$/;"	f
wrap_arc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn wrap_arc(s: Arc<Inner>) -> Arc<Self> {$/;"	f
wrap_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn wrap_box(s: Box<Inner>) -> Box<Self> {$/;"	f
wrap_device_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/windows/mod.rs	/^fn wrap_device_id(id: u32) -> RootDeviceId {$/;"	f
wrap_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn wrap_mut(s: &mut Inner) -> &mut Self {$/;"	f
wrap_rc	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn wrap_rc(s: Rc<Inner>) -> Rc<Self> {$/;"	f
wrap_ref	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn wrap_ref(s: &Inner) -> &Self {$/;"	f
wrap_slice	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn wrap_slice(s: &[Inner]) -> &[Self]$/;"	f
wrap_slice_mut	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/transparent.rs	/^  fn wrap_slice_mut(s: &mut [Inner]) -> &mut [Self]$/;"	f
wrap_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^  fn wrap_vec(s: Vec<Inner>) -> Vec<Self>$/;"	f
write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn write_buffer(&self, buffer: &Buffer, offset: BufferAddress, data: &[u8]) {$/;"	f
write_buffer	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/util/belt.rs	/^    pub fn write_buffer($/;"	f
write_buffer_with	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn write_buffer_with<'a>($/;"	f
write_texture	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn write_texture($/;"	f
write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/direct.rs	/^        fn write_timestamp(&mut self, query_set: &wgc::id::QuerySetId, query_index: u32) {$/;"	f
write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/backend/web.rs	/^    fn write_timestamp(&mut self, _query_set: &(), _query_index: u32) {$/;"	f
write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    fn write_timestamp(&mut self, query_set: &Ctx::QuerySetId, query_index: u32);$/;"	f
write_timestamp	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.14.2/src/lib.rs	/^    pub fn write_timestamp(&mut self, query_set: &QuerySet, query_index: u32) {$/;"	f
x11_or_wayland	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/mod.rs	/^macro_rules! x11_or_wayland {$/;"	d
x_connection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/mod.rs	/^    pub fn x_connection(&self) -> &Arc<XConnection> {$/;"	f
xcb_connection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xcb_connection(&self) -> Option<*mut raw::c_void> {$/;"	f
xcb_connection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xcb_connection(&self) -> Option<*mut raw::c_void>;$/;"	f
xcb_connection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn xcb_connection(&self) -> *mut c_void {$/;"	f
xdg_activation	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/wayland/env.rs	/^    pub fn xdg_activation(&self) -> bool {$/;"	f
xim_set_callback	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/ime/callbacks.rs	/^pub unsafe fn xim_set_callback($/;"	f
xlib_display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_display(&self) -> Option<*mut raw::c_void> {$/;"	f
xlib_display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_display(&self) -> Option<*mut raw::c_void>;$/;"	f
xlib_display	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn xlib_display(&self) -> *mut c_void {$/;"	f
xlib_screen_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_screen_id(&self) -> Option<raw::c_int> {$/;"	f
xlib_screen_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_screen_id(&self) -> Option<raw::c_int>;$/;"	f
xlib_screen_id	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn xlib_screen_id(&self) -> c_int {$/;"	f
xlib_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_window(&self) -> Option<raw::c_ulong> {$/;"	f
xlib_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_window(&self) -> Option<raw::c_ulong>;$/;"	f
xlib_window	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn xlib_window(&self) -> c_ulong {$/;"	f
xlib_xconnection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_xconnection(&self) -> Option<Arc<XConnection>> {$/;"	f
xlib_xconnection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform/unix.rs	/^    fn xlib_xconnection(&self) -> Option<Arc<XConnection>>;$/;"	f
xlib_xconnection	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.27.5/src/platform_impl/linux/x11/window.rs	/^    pub fn xlib_xconnection(&self) -> Arc<XConnection> {$/;"	f
zeroed	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/zeroable.rs	/^  fn zeroed() -> Self {$/;"	f
zeroed_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn zeroed_box<T: Zeroable>() -> Box<T> {$/;"	f
zeroed_slice_box	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn zeroed_slice_box<T: Zeroable>(length: usize) -> Box<[T]> {$/;"	f
zeroed_vec	/Users/mart/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.12.3/src/allocation.rs	/^pub fn zeroed_vec<T: Zeroable>(length: usize) -> Vec<T> {$/;"	f
